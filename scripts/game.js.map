{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/UI/GameUI.js",
    "src/UI/NutritionUI.js",
    "src/UI/Text.js",
    "src/constants/BobConstants.js",
    "src/constants/CanvasConstants.js",
    "src/constants/DifficultyLevelIntervals.js",
    "src/constants/FoodConstants.js",
    "src/constants/NutritionConstants.js",
    "src/constants/UIConstants.js",
    "src/constants/WeightBreakpoints.js",
    "src/index.js",
    "src/locales/de_de.js",
    "src/locales/en_gb.js",
    "src/locales/index.js",
    "src/locales/pl_pl.js",
    "src/objects/AdditionalFoodSpawner.js",
    "src/objects/Bob.js",
    "src/objects/Food.js",
    "src/objects/FoodDataManager.js",
    "src/objects/FoodSpawner.js",
    "src/objects/HealthHandler.js",
    "src/objects/NutritionManager.js",
    "src/states/Boot.js",
    "src/states/Credits.js",
    "src/states/Game.js",
    "src/states/MainMenu.js",
    "src/states/Preloader.js",
    "src/states/Wiki.js",
    "src/states/index.js",
    "src/utils/AudioManager.js",
    "src/utils/ClockUtils.js",
    "src/utils/MathUtils.js",
    "src/utils/NutritionUtils.js",
    "src/utils/ScaleManager.js",
    "src/utils/StorageManager.js",
    "src/utils/i18n.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import { $ } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { SCORE_FONT, GAMEOVER_TITLE_FONT, GAMEOVER_SCORE_FONT, PAUSE_TITLE_FONT, MENU_BUTTON_OFFSET, TUTORIAL_FONT, LEVEL_CHANGE_FONT, HEALTHBAR_WIDTH } from '../constants/UIConstants';\nimport { playAudio, manageAudio, getAudioOffset } from '../utils/AudioManager';\nimport Text from './Text';\n\nimport { PPTStorage } from '../utils/StorageManager';\n\nexport default class GameUI {\n  constructor( state, Bob, NutritionManager ) {\n    this.state = state;\n    this.game = state.game;\n\n    this.Bob = Bob;\n    this.NutritionManager = NutritionManager;\n    this.NutritionUI = NutritionManager.UI;\n\n    this.stateStatus = 'playing';\n\n    this.score = 0;\n    this.timePassed = 0;\n    this.runOnce = false;\n    this.gamePaused = false;\n\n    this.scoreValue = 3;\n\n    this.timeAdvance = new Phaser.Signal();\n\n    this.initScore();\n    this.initHealthBar();\n    this.initPauseScreen();\n    this.initGameoverScreen();\n\n    if ( PPTStorage.get( 'PPT-tutorial' ) !== true ) {\n      this.startTutorial();\n    }\n  }\n\n  initScore() {\n    this.textScore = new Text( this.game, $( 30 ), this.game.world.height - $( 20 ), `${i18n.text( 'game_score' )}: ${this.score}`, $( SCORE_FONT ), [ 0, 1 ] );\n\n    this.game.time.events.loop( Phaser.Timer.SECOND * 1, this.handlePointsAddition, this );\n  }\n\n  initHealthBar() {\n    this.healthBarText = new Text( this.game, $( 30 ), this.game.world.height - $( 100 ), `${i18n.text( 'game_health' )}: `, $( SCORE_FONT ), [ 0, 1 ] );\n\n    this.healthBar = this.game.add.tileSprite( this.healthBarText.x + this.healthBarText.width, this.game.world.height - $( 120 ), $( 300 ), $( 50 ), $( 'heart' ) );\n    this.healthBar.anchor.setTo( 0, 1 );\n    this.healthBar.scale.setTo( 1.25 );\n  }\n\n  initPauseScreen() {\n    this.buttonPause = this.game.add.button( this.game.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( 'button-pause' ), this.managePause, this, 1, 0, 2 );\n    this.buttonPause.anchor.set( 1, 0 );\n    this.buttonPause.input.priorityID = 0;\n\n    this.buttonPause.y = -this.buttonPause.height - MENU_BUTTON_OFFSET;\n    this.game.add.tween( this.buttonPause ).to( { y: MENU_BUTTON_OFFSET }, 1000, Phaser.Easing.Exponential.Out, true );\n\n    this.screenPausedGroup = this.game.add.group();\n    this.screenPausedBg = this.game.add.sprite( 0, 0, $( 'overlay' ) );\n    this.screenPausedBg.scale.setTo( 2 );\n    this.screenPausedBg.inputEnabled = true;\n    this.screenPausedBg.input.priorityID = 1;\n\n    this.screenPausedText = new Text( this.game, 'center', 'center', i18n.text( 'game_paused' ), $( PAUSE_TITLE_FONT ) );\n\n    this.buttonAudio = this.game.add.button( this.game.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( 'button-audio' ), this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n    this.buttonAudio.setFrames( getAudioOffset() + 1, getAudioOffset() + 0, getAudioOffset() + 2 );\n    this.buttonAudio.input.priorityID = 1;\n\n    this.screenPausedBack = this.game.add.button( MENU_BUTTON_OFFSET, this.game.world.height - MENU_BUTTON_OFFSET, $( 'button-mainmenu' ), this.stateBack, this, 1, 0, 2 );\n    this.screenPausedBack.anchor.set( 0, 1 );\n    this.screenPausedBack.input.priorityID = 1;\n\n    this.screenPausedContinue = this.game.add.button( this.game.world.width - MENU_BUTTON_OFFSET, this.game.world.height - MENU_BUTTON_OFFSET, $( 'button-continue' ), this.managePause, this, 1, 0, 2 );\n    this.screenPausedContinue.anchor.set( 1, 1 );\n    this.screenPausedContinue.scale.set( 0.5 );\n    this.screenPausedContinue.input.priorityID = 1;\n\n    this.screenPausedGroup.add( this.screenPausedBg );\n    this.screenPausedGroup.add( this.screenPausedText );\n    this.screenPausedGroup.add( this.buttonAudio );\n    this.screenPausedGroup.add( this.screenPausedBack );\n    this.screenPausedGroup.add( this.screenPausedContinue );\n    this.screenPausedGroup.alpha = 0;\n    this.screenPausedGroup.visible = false;\n  }\n\n  initGameoverScreen() {\n    this.screenGameoverGroup = this.game.add.group();\n\n    this.screenGameoverBg = this.game.add.sprite( 0, 0, $( 'overlay' ) );\n    this.screenGameoverBg.scale.setTo( 2 );\n    this.screenGameoverBg.inputEnabled = true;\n    this.screenGameoverBg.input.priorityID = 2;\n\n    this.screenGameoverText = new Text( this.game, 'center', $( 100 ), i18n.text( 'game_over' ), $( GAMEOVER_TITLE_FONT ) );\n\n    this.screenGameoverBack = this.game.add.button( $( 150 ), this.game.world.height - $( 100 ), $( 'button-mainmenu' ), this.stateBack, this, 1, 0, 2 );\n    this.screenGameoverBack.anchor.set( 0, 1 );\n    this.screenGameoverBack.input.priorityID = 2;\n\n    this.screenGameoverRestart = this.game.add.button( this.game.world.width - $( 150 ), this.game.world.height - $( 100 ), $( 'button-restart' ), this.stateRestart, this, 1, 0, 2 );\n    this.screenGameoverRestart.anchor.set( 1, 1 );\n    this.screenGameoverRestart.input.priorityID = 2;\n\n    this.screenGameoverScore = new Text( this.game, 'center', 'center', `${i18n.text( 'game_score' )}: ` + this.score, $( GAMEOVER_SCORE_FONT ) );\n\n    this.screenGameoverGroup.add( this.screenGameoverBg );\n    this.screenGameoverGroup.add( this.screenGameoverText );\n    this.screenGameoverGroup.add( this.screenGameoverBack );\n    this.screenGameoverGroup.add( this.screenGameoverRestart );\n    this.screenGameoverGroup.add( this.screenGameoverScore );\n    this.screenGameoverGroup.alpha = 0;\n    this.screenGameoverGroup.visible = false;\n  }\n\n  updateUI() {\n    switch ( this.stateStatus ) {\n    case 'paused': {\n      if ( !this.runOnce ) {\n        this.statePaused();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'gameover': {\n      if ( !this.runOnce ) {\n        this.stateGameover();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'tutorial': {\n      if ( !this.runOnce ) {\n        this.stateTutorial();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'playing': {\n      if ( !this.runOnce ) {\n        this.statePlaying();\n        this.runOnce = true;\n      }\n    }\n    }\n  }\n\n  onScoreValueChange( scoreValue ) {\n    this.scoreValue = scoreValue;\n  }\n\n  updateHealthBarValue( health ) {\n    if ( health > 0 ) {\n      this.NutritionUI.flash( () => {\n        this.healthBar.width = $( HEALTHBAR_WIDTH ) * ( health / 100 );\n      } );\n    }\n  }\n\n  difficultyChange() {\n    const text = new Text( this.game, 'center', $( 100 ), i18n.text( 'game_level_up' ), $( LEVEL_CHANGE_FONT ) );\n    text.alpha = 0;\n    let done = false;\n    const textTween = this.game.add.tween( text );\n    textTween.to( { alpha: 1 }, 200, Phaser.Easing.Linear.InOut, true );\n    textTween.onComplete.add( () => {\n      if ( !done ) {\n        this.game.time.events.add( Phaser.Timer.SECOND * 4, () => {\n          textTween.to( { alpha: 0 }, 200, Phaser.Easing.Linear.InOut, true );\n        } );\n      }\n      done = true;\n    }, this );\n  }\n\n  handlePointsAddition() {\n    this.timePassed++;\n    this.score += this.scoreValue;\n    this.textScore.setText( `${i18n.text( 'game_score' )}: ${this.score}` );\n    this.state.foodSpawner.tryDifficultyLevelUp( this.timePassed );\n    this.timeAdvance.dispatch();\n  }\n\n  managePause() {\n    this.gamePaused = !this.gamePaused;\n    playAudio( 'click' );\n    if ( this.gamePaused ) {\n      this.game.world.bringToTop( this.screenPausedGroup );\n      this.stateStatus = 'paused';\n      this.runOnce = false;\n      this.state.stopMovingFood.call( this.state );\n    } else {\n      this.stateStatus = 'playing';\n      this.runOnce = false;\n      this.state.restoreFoodMovement.call( this.state );\n    }\n  }\n\n  startTutorial() {\n    this.gamePaused = !this.gamePaused;\n    this.state.stopMovingFood.call( this.state );\n    this.stateStatus = 'tutorial';\n    this.runOnce = false;\n\n    this.tutorialStep = 0;\n    this.drawOverlay();\n  }\n\n  furtherTutorial() {\n    this.tutorialStep += 1;\n    this.runOnce = false;\n  }\n\n  drawOverlay() {\n    this.tutorialOverlay = this.game.add.group();\n\n    this.graphics = this.game.add.graphics( 0, 0 );\n    this.graphics.beginFill( 0x000000, 0.5 );\n    this.graphics.lineTo( this.game.world.width, 0 );\n    this.graphics.lineTo( this.game.world.width, this.game.world.height );\n    this.graphics.lineTo( 0, this.game.world.height );\n    this.graphics.endFill();\n    this.graphics.inputEnabled = true;\n    this.graphics.input.priorityID = 10;\n\n    this.tutorialText = new Text( this.game, 'center', $( 200 ), '', $( TUTORIAL_FONT ) );\n\n    this.continueTutorial = this.game.add.button( this.game.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( 'button-continue' ), this.furtherTutorial, this, 1, 0, 2 );\n    this.continueTutorial.anchor.set( 1, 0 );\n    this.continueTutorial.scale.set( 0.5 );\n\n    this.continueTutorial.y = -this.continueTutorial.height - MENU_BUTTON_OFFSET;\n    this.game.add.tween( this.continueTutorial ).to( { y: MENU_BUTTON_OFFSET }, 1000, Phaser.Easing.Exponential.Out, true );\n\n    this.continueTutorial.input.priorityID = 11;\n\n    this.tutorialOverlay.add( this.graphics );\n    this.tutorialOverlay.add( this.continueTutorial );\n  }\n\n  stateTutorial() {\n    switch ( this.tutorialStep ) {\n    case 0: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.Bob );\n      this.game.world.bringToTop( this.tutorialText );\n\n      break;\n    }\n    case 1: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.NutritionUI.NutritionBarsGroup );\n      this.game.world.bringToTop( this.tutorialText );\n\n      break;\n    }\n    case 2: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.NutritionUI.NutritionBarsGroup );\n      this.game.world.bringToTop( this.tutorialText );\n\n      this.NutritionManager.nutrition.carbohydrates = 200;\n      this.NutritionManager.nutrition.fats = 30;\n      this.NutritionUI.updateUI();\n\n      break;\n    }\n    case 3: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.textScore );\n      this.game.world.bringToTop( this.healthBar );\n      this.game.world.bringToTop( this.healthBar );\n      this.game.world.bringToTop( this.healthBarText );\n      this.game.world.bringToTop( this.tutorialText );\n      break;\n    }\n    case 4: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.tutorialText );\n      break;\n    }\n    case 5: {\n      this.tutorialText.setText( i18n.text( `tutorial_step_${this.tutorialStep}` ) );\n\n      this.game.world.bringToTop( this.tutorialOverlay );\n      this.game.world.bringToTop( this.tutorialText );\n      break;\n    }\n    case 6: {\n      PPTStorage.set( 'PPT-tutorial', true );\n      this.stateRestart();\n      break;\n    }\n    }\n  }\n\n  statePlaying() {\n    const tween = this.game.add.tween( this.screenPausedGroup );\n    tween.to( { alpha: 0 }, 100, Phaser.Easing.Linear.None, true );\n    tween.onComplete.add( () => {\n      if ( this.screenPausedGroup.visible ) {\n        this.screenPausedGroup.visible = false;\n      }\n    }, this );\n  }\n\n  statePaused() {\n    this.screenPausedGroup.visible = true;\n    const tween = this.game.add.tween( this.screenPausedGroup );\n    tween.to( { alpha: 1 }, 100, Phaser.Easing.Linear.None, true );\n  }\n\n  stateBack() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.game.time.events.resume();\n    this.state.state.start( 'MainMenu' );\n  }\n\n  stateGameover( msg ) {\n    this.state.stopMovingFood.call( this.state );\n    this.game.world.bringToTop( this.screenGameoverGroup );\n    this.screenGameoverScore.setText( `${i18n.text( 'game_score' )}: ${this.score}` );\n    this.gameoverScoreTween( msg );\n\n    this.screenGameoverGroup.visible = true;\n    const tween = this.game.add.tween( this.screenGameoverGroup );\n    tween.to( { alpha: 1 }, 100, Phaser.Easing.Linear.None, true );\n\n    PPTStorage.setHighscore( 'PPT-highscore', this.score );\n  }\n\n  stateRestart() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.state.restoreFoodMovement.call( this.state );\n    this.state.state.restart( true );\n  }\n\n  gameoverScoreTween( deathmsg = '' ) {\n    this.screenGameoverScore.setText( '' );\n\n    this.screenGameoverScore.setText( i18n.text( 'game_over_text', this.score, deathmsg ) );\n  }\n\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n}\n",
    "import { $ } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { getStatus } from '../utils/NutritionUtils';\n\nimport { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT, THINNESS_LEVELS, FATNESS_LEVELS } from '../constants/WeightBreakpoints';\nimport { NUTRITION_BAR_WIDTH, NUTRITION_BAR_HEIGHT, NUTRITION_BAR_OFFSET, NUTRITION_BAR_X_FROM_LEFT, NUTRITION_BAR_Y_FROM_BOTTOM, NUTRITION_BAR_TEXT_OFFSET_X, NUTRITION_BAR_TEXT_OFFSET_Y, NUTRITION_BAR_INFO_FONT, NUTRITION_NUTRITION_ADDED_FONT, NUTRITION_BAR_BORDER_WIDTH } from '../constants/UIConstants';\nimport Text from './Text';\n\nexport default class NutritionUI {\n  constructor( game, NutritionManager ) {\n    this.game = game;\n\n    this.nutrition = NutritionManager.nutrition;\n\n    this.NutritionBars = [];\n    this.NutritionMasks = [];\n    this.NutritionTexts = [];\n\n    this.NutritionBarsGroup = this.game.add.group();\n\n    this.drawAllBars();\n  }\n\n  updateUI( updatedValues ) {\n    this.updateBar( this.nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES, 2 );\n    this.updateBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1 );\n    this.updateBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0 );\n\n    if ( updatedValues ) {\n      for ( let key in updatedValues ) {\n        const value = updatedValues[ key ];\n        if ( value !== 0 ) {\n          this.displayAddition( key, value );\n        }\n      }\n    }\n  }\n\n  drawAllBars() {\n    const capitalise = ( text ) => {\n      return text.substring( 0, 1 ).toUpperCase() + text.substring( 1 );\n    };\n\n    this.drawBar( this.nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES, 2, capitalise( i18n.text( 'carbohydrates_name' ) ) );\n    this.drawBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1, capitalise( i18n.text( 'fats_name' ) ) );\n    this.drawBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0, capitalise( i18n.text( 'proteins_name' ) ) );\n  }\n\n  displayAddition( key, val ) {\n    let i = 0;\n\n    switch ( key ) {\n    case 'carbohydrates':\n      i = 2;\n      break;\n    case 'fats':\n      i = 1;\n      break;\n    case 'proteins':\n      i = 0;\n      break;\n    // no default\n    }\n\n    const height = $( NUTRITION_BAR_HEIGHT );\n    const offset = i * ( $( NUTRITION_BAR_OFFSET ) + height );\n\n    const textX = this.game.width - $( NUTRITION_BAR_X_FROM_LEFT ) - $( NUTRITION_BAR_TEXT_OFFSET_X ) - $( 10, 0.5 );\n    const textY = this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - $( NUTRITION_BAR_TEXT_OFFSET_Y ) - offset;\n    const nutritionAdded = new Text( this.game, textX, textY, `+${val}`, $( NUTRITION_NUTRITION_ADDED_FONT ), [ 1, 1 ] );\n    this.game.add.tween( nutritionAdded ).to( { alpha: 0, y: textY - $( 100 ) }, $( 1000 ), Phaser.Easing.Linear.None, true );\n  }\n\n  updateBar( value, goodAmount, i ) {\n    const width = $( NUTRITION_BAR_WIDTH );\n    const height = $( NUTRITION_BAR_HEIGHT );\n    const offset = i * ( $( NUTRITION_BAR_OFFSET ) + height );\n    const doubleOfGoodAmount = goodAmount * 2;\n\n    const status = this.NutritionBars[ i ];\n    const bobStatus = getStatus( value, goodAmount );\n\n    if ( bobStatus <= SUPER_THIN_BREAKPOINT || bobStatus >= SUPER_FAT_BREAKPOINT ) {\n      status.frame = 2;\n    } else if ( bobStatus <= THIN_BREAKPOINT || bobStatus >= FAT_BREAKPOINT ) {\n      status.frame = 1;\n    } else {\n      status.frame = 0;\n    }\n\n    const NutritionBarValue = Math.min( Math.max( ( value / doubleOfGoodAmount ), 0 ), 1 );\n\n    const mask = this.NutritionMasks[ i ];\n    mask.clear();\n    mask.beginFill( 0x000000 );\n    mask.drawRect( this.game.width - NUTRITION_BAR_X_FROM_LEFT - width + ( width * ( 1 - NutritionBarValue ) ), this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset - height, width * NutritionBarValue, height );\n    mask.endFill();\n\n    const statusText = this.NutritionTexts[ i ];\n    statusText.setText( `${parseInt( Math.max( value, 0 ) )} / ${goodAmount}` );\n  }\n\n  drawBar( value, goodAmount, i, text ) {\n    const width = $( NUTRITION_BAR_WIDTH );\n    const height = $( NUTRITION_BAR_HEIGHT );\n    const offset = i * ( $( NUTRITION_BAR_OFFSET ) + height );\n    const doubleOfGoodAmount = goodAmount * 2;\n\n    const NutritionBarValue = Math.min( Math.max( ( value / doubleOfGoodAmount ), 0 ), 1 );\n\n    const background = this.game.add.sprite( this.game.width - NUTRITION_BAR_X_FROM_LEFT, this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset, $( 'nutrition-bar-background' ) );\n    background.anchor.setTo( 1, 1 );\n\n    const indicators = this.game.add.group();\n\n    const backgroundNeutralX = background.x - background.width + NUTRITION_BAR_BORDER_WIDTH;\n    const backgroundNeutralY = background.y - background.height + NUTRITION_BAR_BORDER_WIDTH;\n\n    const superThinIndicator = this.game.add.sprite( background.width / 2 / ( THINNESS_LEVELS.length ) * ( THINNESS_LEVELS.length - SUPER_THIN_BREAKPOINT ) + ( background.width / 2 ) + backgroundNeutralX, backgroundNeutralY, $( 'nutrition-bar-indicator' ) );\n    superThinIndicator.anchor.setTo( 0.5, 0 );\n\n    const thinIndicator = this.game.add.sprite( background.width / 2 / ( THINNESS_LEVELS.length ) * ( THINNESS_LEVELS.length - THIN_BREAKPOINT ) + ( background.width / 2 ) + backgroundNeutralX, backgroundNeutralY, $( 'nutrition-bar-indicator' ) );\n    thinIndicator.anchor.setTo( 0.5, 0 );\n\n    const superFatIndicator = this.game.add.sprite( background.width / 2 / ( FATNESS_LEVELS.length ) * ( ( THINNESS_LEVELS.length + FATNESS_LEVELS.length ) - SUPER_FAT_BREAKPOINT ) + backgroundNeutralX, backgroundNeutralY, $( 'nutrition-bar-indicator' ) );\n    superFatIndicator.anchor.setTo( 0.5, 0 );\n\n    const fatIndicator = this.game.add.sprite( background.width / 2 / ( FATNESS_LEVELS.length ) * ( ( THINNESS_LEVELS.length + FATNESS_LEVELS.length ) - FAT_BREAKPOINT ) + backgroundNeutralX, backgroundNeutralY, $( 'nutrition-bar-indicator' ) );\n    fatIndicator.anchor.setTo( 0.5, 0 );\n\n    indicators.add( superThinIndicator );\n    indicators.add( thinIndicator );\n    indicators.add( superFatIndicator );\n    indicators.add( fatIndicator );\n\n    const mask = this.game.add.graphics( 0, 0 );\n    mask.beginFill( 0x000000 );\n    mask.drawRect( this.game.width - NUTRITION_BAR_X_FROM_LEFT - width + ( width * ( 1 - NutritionBarValue ) ), this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset - height, width * NutritionBarValue, height );\n    mask.endFill();\n\n    this.NutritionMasks[ i ] = mask;\n\n    const status = this.game.add.sprite( this.game.width - NUTRITION_BAR_X_FROM_LEFT, this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset, $( 'nutrition-bar' ), 0 );\n    status.anchor.setTo( 1, 1 );\n    status.mask = mask;\n\n    this.NutritionBars[ i ] = status;\n\n    const descText = new Text( this.game, this.game.width - $( NUTRITION_BAR_X_FROM_LEFT ) + $( NUTRITION_BAR_TEXT_OFFSET_X ) - width - $( 10, 0.5 ), this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset - $( NUTRITION_BAR_TEXT_OFFSET_Y ) + $( 3, 0.5 ), text, $( NUTRITION_BAR_INFO_FONT ), [ 0, 1 ] );\n\n    const statusText = new Text( this.game, this.game.width - $( NUTRITION_BAR_X_FROM_LEFT ) - $( NUTRITION_BAR_TEXT_OFFSET_X ) - $( 10, 0.5 ), this.game.height - $( NUTRITION_BAR_Y_FROM_BOTTOM ) - offset - $( NUTRITION_BAR_TEXT_OFFSET_Y ) + $( 3, 0.5 ), `${Math.max( parseInt( value ), 0 )} / ${goodAmount}`, $( NUTRITION_BAR_INFO_FONT ), [ 1, 1 ] );\n\n    this.NutritionTexts[ i ] = statusText;\n\n    this.NutritionBarsGroup.add( background );\n    this.NutritionBarsGroup.add( indicators );\n    this.NutritionBarsGroup.add( mask );\n    this.NutritionBarsGroup.add( status );\n    this.NutritionBarsGroup.add( statusText );\n    this.NutritionBarsGroup.add( descText );\n  }\n\n  flash( callback ) {\n    const flashLength = 100;\n    let status = 0;\n    this.NutritionBars.forEach( ( sprite ) => {\n      status = Math.max( sprite.frame, status );\n    } );\n\n    const flash = this.game.add.graphics( 0, 0 );\n    if ( status === 2 ) {\n      this.game.camera.shake( 0.002, 200 );\n      flash.beginFill( 0xc50000, 0.8 );\n    } else if ( status === 1 ) {\n      this.game.camera.shake( 0.001, 200 );\n      flash.beginFill( 0xf1d137, 0.75 );\n    }\n\n    flash.drawRect( 0, 0, this.game.world.width, this.game.world.height );\n    flash.alpha = 0;\n    let done = false;\n    const flashTween = this.game.add.tween( flash );\n    flashTween.to( { alpha: 1 }, flashLength / 2, Phaser.Easing.Linear.In, true );\n    flashTween.onComplete.add( () => {\n      if ( !done ) {\n        callback();\n        flashTween.to( { alpha: 0 }, flashLength / 2, Phaser.Easing.Linear.Out, true );\n        done = true;\n      }\n    }, this );\n  }\n}\n",
    "export default class Text extends Phaser.Text {\n  constructor( game, x = 0, y = 0, text = '', style = {}, anchor = [ 0, 0 ] ) {\n    super( game, x, y, text, style );\n    const newAnchor = anchor;\n\n    if ( x === 'center' ) {\n      this.x = game.world.centerX;\n      newAnchor[ 0 ] = newAnchor[ 0 ] || 0.5;\n    }\n\n    if ( y === 'center' ) {\n      this.y = game.world.centerY;\n      newAnchor[ 1 ] = newAnchor[ 1 ] || 0.5;\n    }\n\n    if ( style.shadow ) {\n      const shadow = style.shadow.match( /rgba\\(.+\\)|[^ ]+/g );\n      this.setShadow.apply( this, shadow );\n    }\n\n    this.anchor.setTo( newAnchor[ 0 ], newAnchor[ 1 ] );\n    game.add.existing( this );\n  }\n}\n",
    "export const BOB_OFFSET_Y = 10;\nexport const BOB_SCALE = 0.75;\n",
    "export const CANVAS_WIDTH = 1920;\nexport const CANVAS_HEIGHT = 1280;\n",
    "export const TIME_TO_REACH_MEDIUM_LEVEL = 30;\nexport const TIME_TO_REACH_HARD_LEVEL = 60;\n",
    "import { BOB_OFFSET_Y, BOB_SCALE } from './BobConstants';\n\nexport const MIN_FOOD_VELOCITY = 190;\nexport const MAX_FOOD_VELOCITY = 230;\n\nexport const MEDIUM_LEVEL_VELOCITY_OFFSET = 60;\nexport const HARD_LEVEL_VELOCITY_OFFSET = 120;\n\nexport const FOOD_SCALE = 1;\n\nexport const FOOD_TWEEN_SPEED = 500;\nexport const FOOD_TWEEN_SCALE = 0.75;\nexport const FOOD_TWEEN_X = 0;\nexport const FOOD_TWEEN_Y = 560 * BOB_SCALE + BOB_OFFSET_Y;\n\nexport const FOOD_SPAWN_INTERVAL = 1.2 * Phaser.Timer.SECOND;\nexport const MEDIUM_LEVEL_FOOD_SPAWN_DELAY_OFFSET = 0.2 * Phaser.Timer.SECOND;\nexport const HARD_LEVEL_FOOD_SPAWN_DELAY_OFFSET = 0.6 * Phaser.Timer.SECOND;\nexport const FOOD_SPAWN_BOUNDS_WIDTH_MARGIN = 200;\nexport const FOOD_SPAWN_BOUNDS_HEIGHT_MARGIN = 100;\n\nexport const FOOD_WIDTH = 100;\nexport const FOOD_HEIGHT = 75;\n\nexport const ADDITIONAL_FOOD_SPAWN_INTERVAL = 5 * FOOD_SPAWN_INTERVAL;\n\nexport const FOOD_HIT_AREA_DIAMETER = 250;\n\nexport const FOOD_DATA = Object.freeze( [\n  // Complexity lv. 1\n  { 'key': 0, 'name': 'products_apple', 'nutritionFacts': { 'carbohydrates': 18, 'fats': 0, 'proteins': 0 }, 'complexityLevel': 1, 'probability': 2, 'quantity': [ 'products_quantity_big_apple', 1 ] },\n  { 'key': 4, 'name': 'products_butter', 'nutritionFacts': { 'carbohydrates': 0, 'fats': 20, 'proteins': 0 }, 'complexityLevel': 1, 'probability': 1, 'quantity': [ 'products_quantity_spoon', 2 ] },\n  { 'key': 7, 'name': 'products_strawberry_jam', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 0, 'proteins': 0 }, 'complexityLevel': 1, 'probability': 1.5, 'quantity': [ 'products_quantity_spoon', 3 ] },\n  { 'key': 2, 'name': 'products_chicken', 'nutritionFacts': { 'carbohydrates': 0, 'fats': 3, 'proteins': 15 }, 'complexityLevel': 1, 'probability': 1, 'quantity': [ 'products_quantity_gram', 50 ] },\n\n  // Complexity lv. 2\n  { 'key': 5, 'name': 'products_donut', 'nutritionFacts': { 'carbohydrates': 25, 'fats': 12, 'proteins': 2 }, 'complexityLevel': 2, 'probability': 1, 'quantity': [ 'products_quantity_donut', 1 ] },\n  { 'key': 1, 'name': 'products_banana', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 2, 'proteins': 0 }, 'complexityLevel': 2, 'probability': 1.5, 'quantity': [ 'products_quantity_banana', 1 ] },\n  { 'key': 9, 'name': 'products_eggs', 'nutritionFacts': { 'carbohydrates': 1, 'fats': 16, 'proteins': 15 }, 'complexityLevel': 2, 'probability': 1, 'quantity': [ 'products_quantity_egg', 2 ] },\n\n  // Complexity lv. 3\n  { 'key': 3, 'name': 'products_hamburger', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 13, 'proteins': 16 }, 'complexityLevel': 3, 'probability': 1, 'quantity': [ 'products_quantity_hamburger', 1 ] },\n  { 'key': 8, 'name': 'products_peanut_butter', 'nutritionFacts': { 'carbohydrates': 6, 'fats': 16, 'proteins': 8 }, 'complexityLevel': 3, 'probability': 1, 'quantity': [ 'products_quantity_spoon', 2 ] },\n  { 'key': 6, 'name': 'products_milk', 'nutritionFacts': { 'carbohydrates': 12, 'fats': 8, 'proteins': 8 }, 'complexityLevel': 3, 'probability': 1, 'quantity': [ 'products_quantity_cup', 1 ] },\n] );\n",
    "export const GOOD_AMOUNT_OF_CARBOHYDRATES = 270;\nexport const GOOD_AMOUNT_OF_FATS = 70;\nexport const GOOD_AMOUNT_OF_PROTEINS = 50;\n\nexport const AMOUNT_REDUCED_INTERVAL = Phaser.Timer.SECOND;\nexport const AMOUNT_REDUCED_PERCENT = 0.03;\n\nexport const MEDIUM_LEVEL_DELAY_OFFSET = 0.2 * Phaser.Timer.SECOND;\nexport const HARD_LEVEL_DELAY_OFFSET = 0.4 * Phaser.Timer.SECOND;\n",
    "export const NUTRITION_BAR_WIDTH = 680;\nexport const NUTRITION_BAR_HEIGHT = 56;\nexport const NUTRITION_BAR_OFFSET = 24;\nexport const NUTRITION_BAR_TEXT_OFFSET_X = 24;\nexport const NUTRITION_BAR_TEXT_OFFSET_Y = 4;\nexport const NUTRITION_BAR_X_FROM_LEFT = 24;\nexport const NUTRITION_BAR_Y_FROM_BOTTOM = 24;\nexport const NUTRITION_BAR_BORDER_WIDTH = 2;\n\nexport const HEALTHBAR_WIDTH = 300;\n\nexport const NUTRITION_BAR_INFO_FONT = { font: 'Bromine', fontSize: 32, fill: '#fff', shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\nexport const NUTRITION_NUTRITION_ADDED_FONT = { font: 'Bromine', fontSize: 40, fill: '#fff', stroke: '#000', strokeThickness: 6, shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\n\nexport const SCORE_FONT = { font: 'Bromine', fontSize: 64, fill: '#fff', stroke: '#000', strokeThickness: 6, shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\n\nexport const PAUSE_TITLE_FONT = { font: 'Bromine', fontSize: 112, fill: '#fff', shadow: '0 0 rgba(0, 0, 0, 0.5) 30' };\n\nexport const GAMEOVER_TITLE_FONT = { font: 'Bromine', fontSize: 112, fill: '#fff', shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\nexport const GAMEOVER_SCORE_FONT = { font: 'Bromine', fontSize: 64, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\n\nexport const MENU_HIGHSCORE_FONT = { font: 'Bromine', fontSize: 56, fill: '#fff', stroke: '#000', strokeThickness: 3, align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10' };\nexport const TITLE_OFFSET_Y = 100;\nexport const MENU_BUTTON_OFFSET = 20;\n\nexport const WIKI_TITLE_FONT = { font: 'Bromine', fontSize: 96, fill: '#000', align: 'center' };\nexport const WIKI_FONT = { font: 'Bromine', fontSize: 56, fill: '#000', align: 'center' };\n\nexport const CREDITS_TITLE_FONT = { font: 'Bromine', fontSize: 104, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10', stroke: '#000', strokeThickness: 3 };\nexport const CREDITS_FONT = { font: 'Bromine', fontSize: 56, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10', stroke: '#000', strokeThickness: 3 };\nexport const CREDITS_FONT_SMALL = { font: 'Bromine', fontSize: 36, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10', stroke: '#000', strokeThickness: 3 };\n\nexport const TUTORIAL_FONT = { font: 'Bromine', fontSize: 56, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10', stroke: '#000', strokeThickness: 3 };\n\nexport const LEVEL_CHANGE_FONT = { font: 'Bromine', fontSize: 80, fill: '#fff', align: 'center', shadow: '0 0 rgba(0, 0, 0, 0.5) 10', stroke: '#000', strokeThickness: 3 };\n",
    "export const SUPER_THIN_BREAKPOINT = 4;\nexport const THIN_BREAKPOINT = 6;\nexport const FAT_BREAKPOINT = 10;\nexport const SUPER_FAT_BREAKPOINT = 12;\n\nexport const THINNESS_LEVELS = [];\nlet d = 0;\nfor ( let i = 0; i < 8; i++ ) {\n  THINNESS_LEVELS.push( d++ / 8 );\n}\n\nexport const FATNESS_LEVELS = [];\nd = 7;\nfor ( let i = 0; i < 6; i++ ) {\n  FATNESS_LEVELS.push( d++ / 6 );\n}\nFATNESS_LEVELS.reverse();\n",
    "import PPT from './states';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from './constants/CanvasConstants';\n\nconst game = new Phaser.Game( CANVAS_WIDTH, CANVAS_HEIGHT, Phaser.AUTO );\nconst states = {\n  'Boot': PPT.Boot,\n  'Preloader': PPT.Preloader,\n  'MainMenu': PPT.MainMenu,\n  'Wiki': PPT.Wiki,\n  'Game': PPT.Game,\n  'Credits': PPT.Credits,\n};\nfor ( const stateName in states ) {\n  game.state.add( stateName, states[ stateName ] );\n}\ngame.state.start( 'Boot' );\n",
    "const de_de = {\n  quote_types: {\n    opening: '„',\n    closing: '”',\n  },\n  main_menu_highscore: {\n    text: 'Bestes Ergebnis',\n  },\n  carbohydrates_name: {\n    text: 'Kohlenhydrate',\n  },\n  fats_name: {\n    text: 'Fette',\n  },\n  proteins_name: {\n    text: 'Proteine',\n  },\n  wiki_quantity: {\n    text: 'Menge',\n  },\n\n  products_apple: {\n    text: 'Apfel',\n  },\n  products_butter: {\n    text: 'Butter',\n  },\n  products_strawberry_jam: {\n    text: 'Erdbeermarmelade',\n  },\n  products_chicken: {\n    text: 'Chicken',\n  },\n  products_donut: {\n    text: 'Donut',\n  },\n  products_banana: {\n    text: 'Banane',\n  },\n  products_eggs: {\n    text: 'Eier',\n  },\n  products_hamburger: {\n    text: 'Hamburger',\n  },\n  products_peanut_butter: {\n    text: 'Nuss-Nugat-Creme',\n  },\n  products_milk: {\n    text: 'Milch',\n  },\n  products_quantity_big_apple: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} ein großer Apfel`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} große Apfel`;\n      } else {\n        return `${quantity} große Apfel`;\n      }\n    },\n  },\n  products_quantity_spoon: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Löffel`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Löffel`;\n      } else {\n        return `${quantity} Löffel`;\n      }\n    },\n  },\n  products_quantity_gram: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Gramm`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Gramm`;\n      } else {\n        return `${quantity} Gramm`;\n      }\n    },\n  },\n  products_quantity_donut: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Donat`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Donats`;\n      } else {\n        return `${quantity} Donats`;\n      }\n    },\n  },\n  products_quantity_banana: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Banane`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Bananen`;\n      } else {\n        return `${quantity} Bananen`;\n      }\n    },\n  },\n  products_quantity_egg: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Ei`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Eier`;\n      } else {\n        return `${quantity} Eier`;\n      }\n    },\n  },\n  products_quantity_hamburger: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Hamburger`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Hamburger`;\n      } else {\n        return `${quantity} Hamburger`;\n      }\n    },\n  },\n  products_quantity_cup: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} Glas`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} Gläser`;\n      } else {\n        return `${quantity} Gläser`;\n      }\n    },\n  },\n\n  tutorial_step_0: {\n    text: 'Das ist Bob.\\nHelf ihm dabei sein Körpergewicht zu halten. ',\n  },\n  tutorial_step_1: {\n    text: 'Das sind die Nährstoffanzeiger von Bob.\\nWenn der Hintergrund der Anzeige grün ist,\\ndann ist Bob gesund und du bekommst Punkte',\n  },\n  tutorial_step_2: {\n    text: 'Die Anzeige wird gelb,\\nwenn Bob zu wenige oder zu viele Nährstoffe bekommt.\\nWenn du dann nicht handelst, verliert Bob leben und die\\nAnzeige kann auf rot wechseln!',\n  },\n  tutorial_step_3: {\n    text: 'Bob hat einen Lebensgürtel.\\nEr verliert Energie, wenn du auf gelde und\\nrote Makroelemente-Felder kommst.',\n  },\n  tutorial_step_4: {\n    text: 'Jedes Essen hat bestimmte Eingeschafte,\\ndie in der \"Encyklopädie\" im Hauptmenü zu fonden sind.\\nWenn du die Eigenschaften des Essens kennst,\\nweißt du wie du Bob füttern musst.',\n  },\n  tutorial_step_5: {\n    text: 'Das war das Tutorial, jetzt kannst du endlich anfangen zu spielen!',\n  },\n\n  game_health: {\n    text: 'Leben',\n  },\n  game_score: {\n    text: 'Ergebnis',\n  },\n  game_paused: {\n    text: 'Pause',\n  },\n  game_level_up: {\n    text: 'Es geht dir jedes mal besser!,\\ndas Spiel wird schwieriger!',\n  },\n  game_over: {\n    text: 'Game Over',\n  },\n  game_over_text: {\n    text: ( args ) => {\n      const secondNumberSuffix = time => ( time > 1 ) ? 'e' : '';\n\n      return `Du hast ${Math.floor( args[ 0 ] )}eereicht punkt${secondNumberSuffix( args[ 0 ] )}\\nund Du bist wegen: ${args[ 1 ]}gestorben.`;\n    },\n  },\n  game_deathtype_dangerous_nutrition_style: {\n    text: 'Gefährlicher Ernährungstil',\n  },\n\n  credits_title: {\n    text: 'Autoren',\n  },\n  credits_code: {\n    text: 'Code',\n  },\n  credits_graphics: {\n    text: 'Grafik',\n  },\n  credits_sound: {\n    text: 'Sound',\n  },\n  credits_translators: {\n    text: 'Übersetzung',\n  },\n  credits_lang_de: {\n    text: 'Deutsch',\n  },\n\n  credits_by: {\n    text: 'von',\n    // np. gemacht durch ...\n  },\n};\n\nexport default de_de;\n",
    "const en_gb = {\n  quote_types: {\n    opening: '’',\n    closing: '’',\n  },\n  main_menu_highscore: {\n    text: 'Highscore',\n  },\n  carbohydrates_name: {\n    text: 'carbohydrates',\n  },\n  fats_name: {\n    text: 'fats',\n  },\n  proteins_name: {\n    text: 'proteins',\n  },\n  wiki_quantity: {\n    text: 'quantity',\n  },\n\n  products_apple: {\n    text: 'apple',\n  },\n  products_butter: {\n    text: 'butter',\n  },\n  products_strawberry_jam: {\n    text: 'strawberry jam',\n  },\n  products_chicken: {\n    text: 'chicken',\n  },\n  products_donut: {\n    text: 'donut',\n  },\n  products_banana: {\n    text: 'banana',\n  },\n  products_eggs: {\n    text: 'eggs',\n  },\n  products_hamburger: {\n    text: 'hamburger',\n  },\n  products_peanut_butter: {\n    text: 'peanut butter',\n  },\n  products_milk: {\n    text: 'milk',\n  },\n  products_quantity_big_apple: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} big apple`;\n      } else {\n        return `${quantity} big apples`;\n      }\n    },\n  },\n  products_quantity_spoon: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} spoon`;\n      } else {\n        return `${quantity} spoons`;\n      }\n    },\n  },\n  products_quantity_gram: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} gram`;\n      } else {\n        return `${quantity} grams`;\n      }\n    },\n  },\n  products_quantity_donut: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} donut`;\n      } else {\n        return `${quantity} donuts`;\n      }\n    },\n  },\n  products_quantity_banana: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} banana`;\n      } else {\n        return `${quantity} bananas`;\n      }\n    },\n  },\n  products_quantity_egg: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} egg`;\n      } else {\n        return `${quantity} eggs`;\n      }\n    },\n  },\n  products_quantity_hamburger: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} hamburger`;\n      } else {\n        return `${quantity} hamburgers`;\n      }\n    },\n  },\n  products_quantity_cup: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} cup`;\n      } else {\n        return `${quantity} cups`;\n      }\n    },\n  },\n\n  tutorial_step_0: {\n    text: 'This is Bob.\\nYour job is to help him\\nmaintain his current weight.',\n  },\n  tutorial_step_1: {\n    text: 'These are Bob’s current macroelements indicators.\\nBy keeping them green you keep Bob healthy and score points.',\n  },\n  tutorial_step_2: {\n    text: 'Bob’s macroelements indicators will turn\\nyellow and eventually red if you overfeed\\nhim with a certain type of macroelement\\nor if you dont’t feed him with it.',\n  },\n  tutorial_step_3: {\n    text: 'Bob has his own health bar,\\nits value drops when you enter yellow\\nor red zone on macroelement indicator.',\n  },\n  tutorial_step_4: {\n    text: 'Every food has its own nutrition\\ninfo in Wiki section availible from the menu.\\nKnowing what macroelements food consists of,\\nyou can be sure that you will feed Bob properly.',\n  },\n  tutorial_step_5: {\n    text: 'This is the end of tutorial. You can now enjoy the game!',\n  },\n\n  game_health: {\n    text: 'Health',\n  },\n  game_score: {\n    text: 'Score',\n  },\n  game_paused: {\n    text: 'Paused',\n  },\n  game_level_up: {\n    text: 'You are getting better!\\nSo game is gonna become harder!',\n  },\n  game_over: {\n    text: 'Game over',\n  },\n\n  game_over_text: {\n    text: ( args ) => {\n      // args[ 0 ] => score\n      // args[ 1 ] => deathtype\n\n      const secondNumberSuffix = time => ( time === 1 ) ? '' : 's';\n\n      return `You have scored ${Math.floor( args[ 0 ] )} point${secondNumberSuffix( args[ 0 ] )}\\nand died from ${args[ 1 ]}`;\n    },\n  },\n  game_deathtype_dangerous_nutrition_style: {\n    text: 'dangerous nutrition style',\n  },\n\n  credits_title: {\n    text: 'Credits',\n  },\n  credits_code: {\n    text: 'Coding',\n  },\n  credits_graphics: {\n    text: 'Graphics',\n  },\n  credits_sound: {\n    text: 'Sounds',\n  },\n  credits_translators: {\n    text: 'Translators',\n  },\n  credits_lang_de: {\n    text: 'German',\n  },\n  credits_by: {\n    text: 'by',\n    // eg. created by\n  },\n};\n\nexport default en_gb;\n",
    "import en_gb from './en_gb.js';\nimport pl_pl from './pl_pl.js';\nimport de_de from './de_de.js';\n\nconst langFile = {\n  en_gb,\n  pl_pl,\n  de_de,\n};\n\nexport default langFile;\n",
    "const pl_pl = {\n  quote_types: {\n    opening: '„',\n    closing: '”',\n  },\n  main_menu_highscore: {\n    text: 'Najwyższy wynik',\n  },\n  carbohydrates_name: {\n    text: 'węglowodany',\n  },\n  fats_name: {\n    text: 'tłuszcze',\n  },\n  proteins_name: {\n    text: 'białko',\n  },\n  wiki_quantity: {\n    text: 'ilość',\n  },\n\n  products_apple: {\n    text: 'jabłko',\n  },\n  products_butter: {\n    text: 'masło',\n  },\n  products_strawberry_jam: {\n    text: 'dżem truskawkowy',\n  },\n  products_chicken: {\n    text: 'kurczak',\n  },\n  products_donut: {\n    text: 'donut',\n  },\n  products_banana: {\n    text: 'banan',\n  },\n  products_eggs: {\n    text: 'jajka',\n  },\n  products_hamburger: {\n    text: 'hamburger',\n  },\n  products_peanut_butter: {\n    text: 'masło orzechowe',\n  },\n  products_milk: {\n    text: 'mleko',\n  },\n  products_quantity_big_apple: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} duże jabłko`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} duże jabłka`;\n      } else {\n        return `${quantity} dużych jabłek`;\n      }\n    },\n  },\n  products_quantity_spoon: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} łyżka`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} łyżki`;\n      } else {\n        return `${quantity} łyżek`;\n      }\n    },\n  },\n  products_quantity_gram: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} gram`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} gramy`;\n      } else {\n        return `${quantity} gramów`;\n      }\n    },\n  },\n  products_quantity_donut: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} donut`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} donuty`;\n      } else {\n        return `${quantity} donutów`;\n      }\n    },\n  },\n  products_quantity_banana: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} banan`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} banany`;\n      } else {\n        return `${quantity} bananów`;\n      }\n    },\n  },\n  products_quantity_egg: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} jajko`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} jajka`;\n      } else {\n        return `${quantity} jajek`;\n      }\n    },\n  },\n  products_quantity_hamburger: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} hamburger`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} hamburgery`;\n      } else {\n        return `${quantity} hamburgerów`;\n      }\n    },\n  },\n  products_quantity_cup: {\n    text: ( args ) => {\n      const quantity = args[ 0 ];\n      if ( quantity === 1 ) {\n        return `${quantity} szklanka`;\n      } else if ( quantity < 5 ) {\n        return `${quantity} szklanki`;\n      } else {\n        return `${quantity} szklanek`;\n      }\n    },\n  },\n\n  tutorial_step_0: {\n    text: 'To jest Bob.\\nTwoim zadaniem jest pomóc mu\\nutrzymać jego obecną wagę.',\n  },\n  tutorial_step_1: {\n    text: 'To są wskaźniki stanu makroelementów Boba.\\nPoprzez utrzymywanie ich na zielonym tle Bob jest zdrowy,\\na ty dostajesz punkty.',\n  },\n  tutorial_step_2: {\n    text: 'Wskaźnik makroelementów zmieni kolor na żółty,\\na w końcu na czerwony jeśli przekramisz Boba\\nmakroelementami lub gdy go nie będziesz nimi karmił.',\n  },\n  tutorial_step_3: {\n    text: 'Bob ma swój własny pasek życia.\\nJego wartość spada gdy wkroczysz na żółte\\n lub czerowne pole na wskaźniku makroelementów.',\n  },\n  tutorial_step_4: {\n    text: 'Każde jedzenie ma swoje właściwości\\nopisane w sekcji „Encyklopedia” w menu głównym.\\nZnając jakie makroelementy dane jedzenie posiada\\nmożesz być pewien, że nakarmisz Boba poprawnie.',\n  },\n  tutorial_step_5: {\n    text: 'To koniec samouczka.\\nMożesz teraz cieszyć się grą!',\n  },\n\n  game_health: {\n    text: 'Życie',\n  },\n  game_score: {\n    text: 'Wynik',\n  },\n  game_paused: {\n    text: 'Pauza',\n  },\n  game_level_up: {\n    text: 'Idzie ci coraz lepiej!\\nWięc gra staje się trudniejsza!',\n  },\n  game_over: {\n    text: 'Koniec gry',\n  },\n  game_over_text: {\n    text: ( args ) => {\n      // args[ 0 ] => wynik\n      // args[ 1 ] => sposób śmierci\n\n      const secondNumberSuffix = time => {\n        const char = +String( time ).charAt( String( time ).length - 1 );\n\n        if ( char === 0 || char >= 5 || ( time >= 11 && time <= 21 ) ) {\n          return 'ów';\n        } else if ( char !== 1 ) {\n          return 'y';\n        }\n\n        return '';\n      };\n\n      return `Zdobyłeś ${Math.floor( args[ 0 ] )} punkt${secondNumberSuffix( args[ 0 ] )}\\ni umarłeś od ${args[ 1 ]}`;\n    },\n  },\n\n  game_deathtype_dangerous_nutrition_style: {\n    text: 'niebezpiecznego stylu żywienia',\n  },\n\n  credits_title: {\n    text: 'Autorzy',\n  },\n  credits_code: {\n    text: 'Kod',\n  },\n  credits_graphics: {\n    text: 'Grafika',\n  },\n  credits_sound: {\n    text: 'Dźwięki',\n  },\n  credits_translators: {\n    text: 'Tłumaczenie',\n  },\n  credits_lang_de: {\n    text: 'niemiecki',\n  },\n  credits_by: {\n    text: 'przez',\n    // np. stworzone przez ...\n  },\n};\n\nexport default pl_pl;\n",
    "import { ADDITIONAL_FOOD_SPAWN_INTERVAL } from '../constants/FoodConstants';\n\nexport default class AdditionalFoodSpawner {\n  constructor( game, hasMacrosSpawnedData ) {\n    this.hasMacrosSpawnedData = hasMacrosSpawnedData;\n\n    this.checkIfShouldSpawnTimer = game.time.events.loop( ADDITIONAL_FOOD_SPAWN_INTERVAL, this.checkIfShouldSpawn, this );\n\n    this.onSpawnNeed = new Phaser.Signal();\n  }\n  checkIfShouldSpawn() {\n    for ( const macroKey in this.hasMacrosSpawnedData ) {\n      if ( this.hasMacrosSpawnedData[ macroKey ] === false ) {\n        this.onSpawnNeed.dispatch( macroKey );\n      }\n      this.hasMacrosSpawnedData[ macroKey ] = false;\n    }\n  }\n}\n",
    "import { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\nimport { BOB_SCALE } from '../constants/BobConstants';\n\nimport { getStatus } from '../utils/NutritionUtils';\n\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT } from '../constants/WeightBreakpoints';\n\nimport { makeKeySpawnMoreFrequently, resetFoodSpawnProbability } from '../objects/FoodDataManager';\n\nexport default class Bob extends Phaser.Sprite {\n  constructor( game, x, y, imageKey, NutritionManager ) {\n    super( game, x, y, imageKey );\n\n    this.NutritionManager = NutritionManager;\n\n    this.anchor.setTo( 0.5, 1 );\n    this.scale.setTo( BOB_SCALE );\n\n    this.game.world.add( this );\n\n    this.scoreValue = 0;\n\n    this.onScoreValueChange = new Phaser.Signal();\n\n    this.onWeightChange = new Phaser.Signal();\n  }\n\n  handleWeightChange() {\n    const nutrition = this.NutritionManager.nutrition;\n\n    const nutritionStatuses = [ getStatus( nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES ), getStatus( nutrition.fats, GOOD_AMOUNT_OF_FATS ), getStatus( nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS ) ];\n\n    let scoreValue = 0;\n\n    const makeProbabilityHigher = [ { name: 'carbohydrates', makeHigher: false, makeSuperHigher: false },\n     { name: 'fats', makeHigher: false, makeSuperHigher: false },\n      { name: 'proteins', makeHigher: false, makeSuperHigher: false } ];\n\n    resetFoodSpawnProbability();\n\n    let isSuperThin = false;\n    let isThin = false;\n    let isFat = false;\n    let isSuperFat = false;\n\n    nutritionStatuses.forEach( ( v, index ) => {\n      if ( v <= THIN_BREAKPOINT ) {\n        isThin = true;\n        makeProbabilityHigher[ index ].makeHigher = true;\n      }\n\n      if ( v <= SUPER_THIN_BREAKPOINT ) {\n        isSuperThin = true;\n        makeProbabilityHigher[ index ].makeSuperHigher = true;\n      }\n\n      if ( v >= FAT_BREAKPOINT ) {\n        isFat = true;\n      }\n\n      if ( v >= SUPER_FAT_BREAKPOINT ) {\n        isSuperFat = true;\n      }\n    } );\n\n    makeProbabilityHigher.forEach( ( macro ) => {\n      if ( macro.makeHigher === true ) {\n        makeKeySpawnMoreFrequently( macro.name, 3 );\n      } else if ( macro.makeSuperHigher === true ) {\n        makeKeySpawnMoreFrequently( macro.name, 5 );\n      }\n    } );\n\n\n    this.onWeightChange.dispatch( isThin || isFat, isSuperThin || isSuperFat );\n\n    if ( !isSuperThin && !isThin && !isFat && !isSuperFat ) {\n      scoreValue++;\n    }\n\n    let status = 8;\n    if ( isFat ) {\n      status = Math.max.apply( null, nutritionStatuses );\n    } else if ( isThin ) {\n      nutritionStatuses.forEach( ( v ) => {\n        if ( v < 8 ) {\n          status = Math.min( status, v );\n        }\n      } );\n    }\n\n    this.frame = status;\n\n    if ( this.scoreValue !== scoreValue ) {\n      this.scoreValue = scoreValue;\n      this.onScoreValueChange.dispatch( scoreValue );\n    }\n  }\n}\n",
    "import { $ } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { MIN_FOOD_VELOCITY, MAX_FOOD_VELOCITY, FOOD_TWEEN_SPEED, FOOD_TWEEN_X, FOOD_TWEEN_Y, FOOD_SCALE, FOOD_TWEEN_SCALE, FOOD_HIT_AREA_DIAMETER } from '../constants/FoodConstants';\n\nexport default class Food extends Phaser.Sprite {\n  constructor( game, x, y, key, data, updateStatsSignal, onDestroy ) {\n    super( game, x, y, $( i18n.image( 'products' ) ), key );\n    this.onDestroy = onDestroy;\n    this.data = data;\n    this.updateStatsSignal = updateStatsSignal;\n    this.scale.setTo( FOOD_SCALE );\n    this.anchor.setTo( 0.5, 0.5 );\n\n    this.hitArea = ( new Phaser.Circle() ).setTo( 0, 0, FOOD_HIT_AREA_DIAMETER );\n\n    this.game.physics.enable( this );\n\n    this.directionX = x > this.game.world.centerX ? -1 : 1;\n    this.directionY = y > this.game.world.centerY ? -1 : 1;\n\n    this.velocityX = this.directionX * this.game.rnd.integerInRange( $( MIN_FOOD_VELOCITY ), $( MAX_FOOD_VELOCITY ) );\n\n    this.body.velocity.x = this.velocityX;\n\n    this.velocityY = this.directionY * this.game.rnd.integerInRange(\n      Math.max( $( MIN_FOOD_VELOCITY ), Math.abs( this.velocityX ) - 10 ),\n      Math.min( Math.abs( this.velocityX ) + 10, $( MAX_FOOD_VELOCITY ) ) );\n\n    this.body.velocity.y = this.velocityY;\n\n    this.inputEnabled = true;\n    this.events.onInputDown.add( this.handleClick, this );\n\n    this.events.onInputOver.add( () => {\n      game.canvas.style.cursor = 'pointer';\n    } );\n\n    this.events.onInputOut.add( () => {\n      game.canvas.style.cursor = 'default';\n    } );\n    this.hasEnteredScreen = false;\n    this.checkWorldBounds = true;\n\n    this.events.onOutOfBounds.add( () => {\n      if ( this.hasEnteredScreen ) {\n        this.onDestroy( this, false );\n      }\n    } );\n\n    this.game.world.add( this );\n  }\n  update() {\n    if ( !this.hasEnteredScreen && this.game.world.bounds.intersects( this._bounds ) ) {\n      this.hasEnteredScreen = true;\n    }\n  }\n  speedUp( speedOffset ) {\n    this.body.velocity.x += speedOffset * this.directionX;\n    this.body.velocity.y += speedOffset * this.directionY;\n  }\n  handleClick() {\n    const tween = this.game.add.tween( this );\n    const tweenScale = this.game.add.tween( this.scale );\n    const tweenSpin = this.game.add.tween( this );\n    tween.to( { x: this.game.world.centerX - $( FOOD_TWEEN_X ), y: this.game.world.height - $( FOOD_TWEEN_Y ) }, FOOD_TWEEN_SPEED, Phaser.Easing.Linear.None, true );\n    tweenScale.to( { x: $( FOOD_TWEEN_SCALE ), y: $( FOOD_TWEEN_SCALE ) }, FOOD_TWEEN_SPEED, Phaser.Easing.Linear.None, true );\n    tweenSpin.to( { angle: 360 }, FOOD_TWEEN_SPEED, Phaser.Easing.Linear.None, true );\n\n    tween.onComplete.add( () => {\n      this.updateStatsSignal.dispatch( this.data );\n      this.onDestroy( this, true );\n    } );\n  }\n}\n",
    "import { FOOD_DATA } from '../constants/FoodConstants';\nimport { getFoodWithParticularMacros } from '../utils/NutritionUtils';\n\nlet data;\nlet easyLevelLastIndex;\nlet mediumLevelLastIndex;\nlet hardLevelLastIndex;\n\nexport function initFoodDataManager() {\n  data = JSON.parse( JSON.stringify( FOOD_DATA ) )\n  .sort( ( food1, food2 ) => food1.complexityLevel > food2.complexityLevel );\n\n  easyLevelLastIndex = data.length - 1 - data.reverse().findIndex( ( food ) => food.complexityLevel === 1 );\n  mediumLevelLastIndex = data.length - 1 - data.findIndex( ( food ) => food.complexityLevel === 2 );\n  hardLevelLastIndex = data.length - 1;\n\n  data.reverse();\n}\n\nexport const getFoodData = () => data;\nexport const getEasyLevelLastIndex = () => easyLevelLastIndex;\nexport const getMediumLevelLastIndex = () => mediumLevelLastIndex;\nexport const getHardLevelLastIndex = () => hardLevelLastIndex;\n\nexport function makeKeySpawnMoreFrequently( macroKey, multiplier ) {\n  const keyMacros = getFoodWithParticularMacros( data, macroKey );\n\n  keyMacros.forEach( ( keyFood ) => {\n    keyFood.probability = FOOD_DATA.find( ( food ) => food.key === keyFood.key ).probability * multiplier;\n  } );\n\n  data = data.map( ( food ) => {\n    const indexOfFoodInKeyMacros = keyMacros.findIndex( ( keyFood ) => keyFood.key === food.key );\n\n    if ( indexOfFoodInKeyMacros === -1 ) {\n      return food;\n    }\n\n    return keyMacros[ indexOfFoodInKeyMacros ];\n  } );\n}\n\nexport function resetFoodSpawnProbability() {\n  data.forEach( ( food ) => {\n    food.probability = FOOD_DATA.find( ( originalFood ) => originalFood.key === food.key ).probability;\n  } );\n}\n",
    "import Food from './Food';\nimport { getFoodData, getEasyLevelLastIndex, getMediumLevelLastIndex, getHardLevelLastIndex } from './FoodDataManager';\nimport { getRandomWithWeight } from '../utils/MathUtils.js';\nimport { FOOD_SPAWN_INTERVAL, FOOD_SPAWN_BOUNDS_WIDTH_MARGIN, FOOD_SPAWN_BOUNDS_HEIGHT_MARGIN, FOOD_WIDTH, FOOD_HEIGHT, MEDIUM_LEVEL_VELOCITY_OFFSET, HARD_LEVEL_VELOCITY_OFFSET, MEDIUM_LEVEL_FOOD_SPAWN_DELAY_OFFSET, HARD_LEVEL_FOOD_SPAWN_DELAY_OFFSET } from '../constants/FoodConstants';\nimport { TIME_TO_REACH_HARD_LEVEL, TIME_TO_REACH_MEDIUM_LEVEL } from '../constants/DifficultyLevelIntervals.js';\nimport { getStatusAudio } from '../utils/AudioManager.js';\nimport AdditionalFoodSpawner from './AdditionalFoodSpawner';\nimport { getDominatingMacro, getFoodWithParticularMacros } from '../utils/NutritionUtils';\n\nexport default class FoodSpawner extends Phaser.Group {\n  constructor( game ) {\n    super( game );\n\n    this.timer = this.game.time.events.loop( FOOD_SPAWN_INTERVAL, this.spawnFood, this );\n\n    this.updateStatsSignal = new Phaser.Signal();\n\n    this.currentDifficultyLevel = 'EASY';\n    this.currentDifficultyLevelLastIndex = getEasyLevelLastIndex();\n\n    this.biteSound = this.game.add.sound( 'audio-bite', 0.5 );\n    this.biteSound.allowMultiple = true;\n\n    this.hasMacrosSpawnedData = {\n      carbohydrates: false,\n      fats: false,\n      proteins: false,\n    };\n\n    const additionalFoodSpawner = new AdditionalFoodSpawner( game, this.hasMacrosSpawnedData );\n    additionalFoodSpawner.onSpawnNeed.add( this.spawnFoodWithParticularMacro, this );\n\n    this.onDifficultyLevelUp = new Phaser.Signal();\n  }\n  create() {\n    this.spawnFood();\n  }\n  spawnFood( foodType ) {\n    if ( foodType == null ) {\n      foodType = getRandomWithWeight( getFoodData(), this.currentDifficultyLevelLastIndex + 1 );\n      this.hasMacrosSpawnedData[ getDominatingMacro( foodType ) ] = true;\n    }\n\n    if ( this.game.veryBadGlobalFlagToMakeAHotFixSorryButIHaveToUseIt === false ) {\n      // I really don't know how to handle this differently, I'll ask on Slack or smth...\n      return;\n    }\n    const sides = [ 'NORTH', 'EAST', 'SOUTH', 'WEST' ];\n    const spawnSide = sides[ Math.floor( Math.random() * 4 ) ];\n    let x;\n    let y;\n    const spawnWidth = this.game.world.width - FOOD_SPAWN_BOUNDS_WIDTH_MARGIN;\n    const spawnHeight = this.game.world.height - FOOD_SPAWN_BOUNDS_HEIGHT_MARGIN;\n    if ( spawnSide === 'NORTH' || spawnSide === 'SOUTH' ) {\n      x = spawnWidth / 2 + Math.random() * spawnWidth;\n      y = spawnSide === 'NORTH' ? -FOOD_HEIGHT : this.game.world.height + FOOD_HEIGHT;\n    } else {\n      x = spawnSide === 'WEST' ? -FOOD_WIDTH : this.game.world.width + FOOD_WIDTH;\n      y = spawnHeight / 2 + Math.random() * spawnHeight;\n    }\n\n    this.tryDifficultyLevelUp();\n\n    const newFood = new Food( this.game, x, y, foodType.key, foodType.nutritionFacts, this.updateStatsSignal, this.onFoodConsumption.bind( this ) );\n\n    if ( this.currentDifficultyLevel === 'MEDIUM' ) {\n      newFood.speedUp( MEDIUM_LEVEL_VELOCITY_OFFSET );\n    } else if ( this.currentDifficultyLevel === 'HARD' ) {\n      newFood.speedUp( HARD_LEVEL_VELOCITY_OFFSET );\n    }\n\n    this.children.push( newFood );\n  }\n  update() {\n    Phaser.Group.prototype.update.call( this );\n  }\n  onFoodConsumption( food, wasEaten ) {\n    if ( getStatusAudio() === true && wasEaten ) {\n      this.biteSound.play();\n    }\n    this.removeChild( food );\n  }\n  removeChild( child ) {\n    const index = this.children.indexOf( child );\n    this.children[ index ].destroy();\n    this.children.splice( index, 1 );\n  }\n  // this method should be called from a callback that counts points\n  tryDifficultyLevelUp( score ) {\n    if ( score >= TIME_TO_REACH_MEDIUM_LEVEL &&\n       this.currentDifficultyLevelLastIndex !== getMediumLevelLastIndex() &&\n       this.currentDifficultyLevelLastIndex !== getHardLevelLastIndex() ) {\n      this.currentDifficultyLevelLastIndex = getMediumLevelLastIndex();\n      this.currentDifficultyLevel = 'MEDIUM';\n      this.timer.delay = FOOD_SPAWN_INTERVAL - MEDIUM_LEVEL_FOOD_SPAWN_DELAY_OFFSET;\n      this.onDifficultyLevelUp.dispatch( this.currentDifficultyLevel );\n    } else if ( score >= TIME_TO_REACH_HARD_LEVEL &&\n      this.currentDifficultyLevelLastIndex !== getHardLevelLastIndex() ) {\n      this.currentDifficultyLevelLastIndex = getHardLevelLastIndex();\n      this.currentDifficultyLevel = 'HARD';\n      this.timer.delay = FOOD_SPAWN_INTERVAL - HARD_LEVEL_FOOD_SPAWN_DELAY_OFFSET;\n      this.onDifficultyLevelUp.dispatch( this.currentDifficultyLevel );\n    }\n  }\n  spawnFoodWithParticularMacro( macroKey ) {\n    const foodDataFilteredByComplexity = getFoodData().slice( 0, this.currentDifficultyLevelLastIndex + 1 );\n    const foodData = getFoodWithParticularMacros( foodDataFilteredByComplexity, macroKey );\n    const foodType = getRandomWithWeight( foodData );\n\n    this.spawnFood( foodType );\n  }\n}\n",
    "const DAMAGE_VALUE_PER_TICK = 7.25;\nconst CAN_BE_HARMED_REFRESH_INTERVAL = 2000;\n\nexport default class HealthHandler {\n  constructor() {\n    this.health = 100;\n    this.shouldBobBeHarmed = false;\n    this.punishementMultiplier = 1;\n    this.canBeHarmed = true;\n\n    this.onHealthUpdate = new Phaser.Signal();\n  }\n  setShouldBobBeHarmed( shouldHeBeHarmed, shouldDoubleThePunishement ) {\n    this.shouldBobBeHarmed = shouldHeBeHarmed;\n    this.punishementMultiplier = shouldDoubleThePunishement ? 2 : 1;\n  }\n  doHarmToBob() {\n    if ( this.shouldBobBeHarmed === false || this.canBeHarmed === false ) {\n      return;\n    }\n    this.health -= DAMAGE_VALUE_PER_TICK * this.punishementMultiplier;\n    this.canBeHarmed = false;\n    window.setTimeout( () => this.canBeHarmed = true, CAN_BE_HARMED_REFRESH_INTERVAL );\n    this.onHealthUpdate.dispatch( this.health );\n  }\n}\n",
    "import NutritionUI from '../UI/NutritionUI';\n\nimport { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS, AMOUNT_REDUCED_INTERVAL, AMOUNT_REDUCED_PERCENT, MEDIUM_LEVEL_DELAY_OFFSET, HARD_LEVEL_DELAY_OFFSET } from '../constants/NutritionConstants';\n\nexport default class NutritionManager {\n  constructor( game ) {\n    this.nutrition = {\n      carbohydrates: GOOD_AMOUNT_OF_CARBOHYDRATES,\n      fats: GOOD_AMOUNT_OF_FATS,\n      proteins: GOOD_AMOUNT_OF_PROTEINS,\n    };\n\n    this.UI = new NutritionUI( game, this );\n\n    this.updateTimer = game.time.events.loop( AMOUNT_REDUCED_INTERVAL, this.reduceNutrition, this );\n  }\n\n  reduceNutrition() {\n    this.nutrition.carbohydrates -= ( GOOD_AMOUNT_OF_CARBOHYDRATES * AMOUNT_REDUCED_PERCENT );\n    this.nutrition.fats -= ( GOOD_AMOUNT_OF_FATS * AMOUNT_REDUCED_PERCENT );\n    this.nutrition.proteins -= ( GOOD_AMOUNT_OF_PROTEINS * AMOUNT_REDUCED_PERCENT );\n\n    this.nutrition.carbohydrates = Math.round( this.nutrition.carbohydrates * 10 ) / 10;\n    this.nutrition.fats = Math.round( this.nutrition.fats * 10 ) / 10;\n    this.nutrition.proteins = Math.round( this.nutrition.proteins * 10 ) / 10;\n\n    this.UI.updateUI();\n  }\n\n  updateStats( data ) {\n    this.nutrition.carbohydrates += data.carbohydrates;\n    this.nutrition.fats += data.fats;\n    this.nutrition.proteins += data.proteins;\n\n    this.UI.updateUI( data );\n  }\n\n  growDifficulty( level ) {\n    if ( level === 'MEDIUM' ) {\n      this.speedUp( MEDIUM_LEVEL_DELAY_OFFSET );\n    } else if ( level === 'HARD' ) {\n      this.speedUp( HARD_LEVEL_DELAY_OFFSET );\n    }\n  }\n\n  speedUp( delayOffset ) {\n    this.updateTimer.delay = AMOUNT_REDUCED_INTERVAL - delayOffset;\n  }\n}\n",
    "export default class Boot extends Phaser.State {\n  preload() {\n    this.game.stage.backgroundColor = '#dba74b';\n    this.game.load.image( 'loadingbg', 'img/loadingbg.png' );\n    this.game.load.image( 'loadingbg-50', 'img50/loadingbg.png' );\n    this.game.load.image( 'loading-background', 'img/loading-background.png' );\n    this.game.load.image( 'loading-progress', 'img/loading-progress.png' );\n  }\n  create() {\n    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    this.game.scale.pageAlignHorizontally = true;\n    this.game.scale.pageAlignVertically = true;\n    this.game.state.start( 'Preloader' );\n  }\n}\n",
    "import { $ } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\n\nimport { CREDITS_FONT, CREDITS_TITLE_FONT, MENU_BUTTON_OFFSET, CREDITS_FONT_SMALL } from '../constants/UIConstants';\nimport { playAudio } from '../utils/AudioManager';\n\nimport Text from '../UI/Text';\n\nexport default class Wiki extends Phaser.State {\n  create() {\n    this.add.sprite( 0, 0, 'loadingbg' );\n    this.camera.resetFX();\n    this.camera.flash( 0x000000, 500, false );\n\n    const buttonBack = this.add.button( this.world.width - MENU_BUTTON_OFFSET, this.game.world.height - MENU_BUTTON_OFFSET, $( 'button-mainmenu' ), this.clickBack, this, 1, 0, 2 );\n    buttonBack.anchor.set( 1, 1 );\n    buttonBack.x = this.world.width + buttonBack.width + MENU_BUTTON_OFFSET;\n    this.add.tween( buttonBack ).to( { x: this.world.width - MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n\n    const textGroup = this.game.add.group();\n\n    const creditsTitle = new Text( this.game, 'center', 0, `${i18n.text( 'credits_title' )}:`, $( CREDITS_TITLE_FONT ) );\n    const creditsCodingTitle = new Text( this.game, 'center', 0, i18n.text( 'credits_code' ), $( CREDITS_FONT_SMALL ) );\n    const creditsCoding = new Text( this.game, 'center', 0, i18n.quotes( 'Bartek „bibixx” Legięć\\nKacper Pietrzak' ), $( CREDITS_FONT ) );\n    const creditsGraphicsTitle = new Text( this.game, 'center', 0, i18n.text( 'credits_graphics' ), $( CREDITS_FONT_SMALL ) );\n    const creditsGraphics = new Text( this.game, 'center', 0, i18n.quotes( 'Magda „Enna” Nowak' ), $( CREDITS_FONT ) );\n    const creditsTextTranslate = new Text( this.game, 'center', 0, i18n.quotes( `\\n${i18n.text( 'credits_translators' )}\\nKrystian Kwiatkowski (${i18n.text( 'credits_lang_de' )})` ), $( CREDITS_FONT_SMALL ) );\n    const creditsTextSound = new Text( this.game, 'center', 0, i18n.quotes( `\\n${i18n.text( 'credits_sound' )}\\n„Farty McSty”\\n${i18n.text( 'credits_by' )} Eric Matyas (www.soundimage.org)\\n\\n„Click2 Sound”\\n${i18n.text( 'credits_by' )} Sebastian (www.soundbible.com)` ), $( CREDITS_FONT_SMALL ) );\n\n    textGroup.add( creditsTitle );\n    textGroup.add( creditsCodingTitle );\n    textGroup.add( creditsCoding );\n    textGroup.add( creditsGraphicsTitle );\n    textGroup.add( creditsGraphics );\n    textGroup.add( creditsTextTranslate );\n    textGroup.add( creditsTextSound );\n\n    let prevText = null;\n    textGroup.forEach( ( text ) => {\n      if ( prevText ) {\n        text.y = prevText.y + prevText.height;\n      }\n\n      prevText = text;\n    } );\n\n    textGroup.position.x = 0;\n    textGroup.position.y = this.game.height / 2 - textGroup.height / 2;\n  }\n\n  clickBack() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.time.events.add( 200, () => {\n      this.game.state.start( 'MainMenu' );\n    } );\n  }\n}\n",
    "import { $ } from '../utils/ScaleManager';\nimport GameUI from '../UI/GameUI';\nimport i18n from '../utils/i18n';\n\nimport FoodSpawner from '../objects/FoodSpawner';\nimport Bob from '../objects/Bob';\nimport NutritionManager from '../objects/NutritionManager';\nimport HealthHandler from '../objects/HealthHandler';\nimport { initFoodDataManager } from '../objects/FoodDataManager';\n\nimport * as Clock from '../utils/ClockUtils';\n\nimport { BOB_OFFSET_Y } from '../constants/BobConstants';\n\nexport default class Game extends Phaser.State {\n  create() {\n    initFoodDataManager();\n\n    this.game.add.sprite( 0, 0, $( 'background' ) );\n    this.foodSpawner = new FoodSpawner( this.game, true );\n    this.foodContainer = this.foodSpawner.children;\n\n    this.NutritionManager = new NutritionManager( this.game );\n    this.bob = new Bob( this.game, this.world.width / 2, this.world.height - $( BOB_OFFSET_Y ), $( 'bob' ), this.NutritionManager );\n    this.gameUI = new GameUI( this, this.bob, this.NutritionManager );\n\n    this.foodSpawner.updateStatsSignal.add( ( ...args ) => this.NutritionManager.updateStats( ...args ) );\n    this.foodSpawner.onDifficultyLevelUp.add( ( ...args ) => this.NutritionManager.growDifficulty( ...args ) );\n    this.foodSpawner.onDifficultyLevelUp.add( ( ...args ) => this.gameUI.difficultyChange( ...args ) );\n\n    this.bob.onScoreValueChange.add( ( ...args ) => this.gameUI.onScoreValueChange( ...args ) );\n\n    const healthHandler = new HealthHandler();\n    this.bob.onWeightChange.add( ( ...args ) => healthHandler.setShouldBobBeHarmed( ...args ) );\n    this.gameUI.timeAdvance.add( () => healthHandler.doHarmToBob() );\n    healthHandler.onHealthUpdate.add( ( ...args ) => this.gameUI.updateHealthBarValue( ...args ) );\n    healthHandler.onHealthUpdate.add( ( ...args ) => this.checkForDeath( ...args ) );\n\n    Clock.initClock( this );\n\n    this.camera.resetFX();\n    this.camera.flash( 0x000000, 500, false );\n\n    this.game.physics.startSystem( Phaser.Physics.ARCADE );\n\n    this.game.onResume.add( () => {\n      if ( this.gameUI.stateStatus === 'paused' || this.gameUI.stateStatus === 'gameover' || this.gameUI.stateStatus === 'tutorial' ) {\n        this.game.time.events.pause();\n      }\n    } );\n\n    // don't bother it's just a hot fix, or not...\n    this.game.veryBadGlobalFlagToMakeAHotFixSorryButIHaveToUseIt = true;\n  }\n\n  checkForDeath( health ) {\n    if ( health <= 0 ) {\n      this.gameUI.stateGameover( i18n.text( 'game_deathtype_dangerous_nutrition_style' ) );\n      this.game.veryBadGlobalFlagToMakeAHotFixSorryButIHaveToUseIt = false;\n    }\n  }\n\n  update() {\n    Clock.updateClock( this );\n    this.gameUI.updateUI();\n    this.bob.handleWeightChange();\n  }\n\n  stopMovingFood() {\n    this.foodContainer.forEach( food => {\n      food.body.velocity.x = 0;\n      food.body.velocity.y = 0;\n    } );\n    this.game.time.events.pause();\n  }\n\n  restoreFoodMovement() {\n    this.foodContainer.forEach( food => {\n      food.body.velocity.x = food.velocityX;\n      food.body.velocity.y = food.velocityY;\n    } );\n    this.game.time.events.resume();\n  }\n}\n",
    "import { $, $set, scaleFactor } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { playAudio, manageAudio, getStatusAudio } from '../utils/AudioManager';\nimport { PPTStorage } from '../utils/StorageManager';\nimport Text from '../UI/Text';\n\n\nimport * as Clock from '../utils/ClockUtils';\n\nimport { MENU_HIGHSCORE_FONT, TITLE_OFFSET_Y, MENU_BUTTON_OFFSET } from '../constants/UIConstants';\n\nexport default class MainMenu extends Phaser.State {\n  create() {\n    this.game.add.sprite( 0, 0, $( 'background' ) );\n    Clock.initClock( this );\n\n    const title = this.add.sprite( this.world.width * 0.5, ( this.world.height - $( TITLE_OFFSET_Y ) ) * 0.5, $( 'title' ) );\n    title.anchor.set( 0.5 );\n\n    PPTStorage.initUnset( 'PPT-highscore', 0 );\n    const highscore = PPTStorage.get( 'PPT-highscore' ) || 0;\n\n    const buttonPigames = this.add.button( MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( 'logo-pigames' ), this.clickPiGames, this );\n    const buttonStart = this.add.button( this.world.width - MENU_BUTTON_OFFSET, this.world.height - MENU_BUTTON_OFFSET, $( 'button-start' ), this.clickStart, this, 1, 0, 2 );\n    buttonStart.anchor.set( 1 );\n\n    const buttonWiki = this.add.button( MENU_BUTTON_OFFSET, this.world.height - MENU_BUTTON_OFFSET, $( 'button-wiki' ), this.clickWiki, this, 1, 0, 2 );\n    buttonWiki.anchor.set( 0, 1 );\n\n    const highscoreText = new Text( this.game, 'center', this.world.height - $( 50 ), i18n.text( 'main_menu_highscore' ) + ': ' + highscore, $( MENU_HIGHSCORE_FONT ), [ null, 1 ] );\n    highscoreText.padding.set( 0, 15 );\n\n    this.initOptions();\n    this.initLang();\n\n    manageAudio( 'init', this );\n\n    if ( getStatusAudio() !== true ) {\n      manageAudio( 'off', this );\n    }\n\n    buttonStart.x = this.world.width + buttonStart.width + MENU_BUTTON_OFFSET;\n    this.add.tween( buttonStart ).to( { x: this.world.width - MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n    this.buttonOptions.y = -this.buttonOptions.height - MENU_BUTTON_OFFSET;\n    this.add.tween( this.buttonOptions ).to( { y: MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n    this.buttonLangs.y = -this.buttonOptions.height - MENU_BUTTON_OFFSET;\n    this.add.tween( this.buttonLangs ).to( { y: MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonPigames.x = -buttonPigames.width - MENU_BUTTON_OFFSET;\n    this.add.tween( buttonPigames ).to( { x: MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonWiki.y = this.world.height + buttonWiki.height + MENU_BUTTON_OFFSET;\n    this.add.tween( buttonWiki ).to( { y: this.world.height - MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.camera.flash( 0x000000, 500, false );\n  }\n\n  initOptions() {\n    this.optionsUI = [];\n\n    this.optionsExpanded = false;\n    this.buttonOptions = this.add.button( this.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( 'button-options' ), this.clickOptions, this, 1, 0, 2 );\n    this.buttonOptions.x -= this.buttonOptions.width + MENU_BUTTON_OFFSET;\n    this.buttonOptions.anchor.set( 1, 0 );\n\n    this.buttonAudio = this.add.button( this.buttonOptions.x, MENU_BUTTON_OFFSET, $( 'button-audio' ), this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n    this.buttonAudio.visible = false;\n    this.optionsUI.push( this.buttonAudio );\n\n    this.buttonCredits = this.add.button( this.buttonOptions.x, MENU_BUTTON_OFFSET, $( i18n.image( 'button-credits' ) ), this.clickCredits, this, 1, 0, 2 );\n    this.buttonCredits.anchor.set( 1, 0 );\n    this.buttonCredits.visible = false;\n    this.optionsUI.push( this.buttonCredits );\n\n    this.buttonHelp = this.add.button( this.buttonOptions.x, MENU_BUTTON_OFFSET, $( 'button-help' ), this.clickHelp, this, 1, 0, 2 );\n    this.buttonHelp.anchor.set( 1, 0 );\n    this.buttonHelp.visible = false;\n    this.optionsUI.push( this.buttonHelp );\n\n    this.buttonQuality = this.add.button( this.buttonOptions.x, MENU_BUTTON_OFFSET, $( 'button-quality' ), this.clickQuality, this, 1, 0, 2 );\n    this.buttonQuality.anchor.set( 1, 0 );\n    this.buttonQuality.visible = false;\n    this.optionsUI.push( this.buttonQuality );\n\n    this.game.world.bringToTop( this.buttonOptions );\n  }\n\n  clickOptions() {\n    playAudio( 'click' );\n    this.contractLang();\n    if ( this.optionsExpanded ) {\n      this.contractOptions();\n    } else {\n      this.expandOptions();\n    }\n  }\n\n  expandOptions() {\n    this.optionsExpanded = true;\n    let prevX = 0;\n\n    this.optionsUI.forEach( ( button, i ) => {\n      button.visible = true;\n      this.add.tween( button.position ).to( { x: this.world.width - button.width - prevX - ( $( MENU_BUTTON_OFFSET ) * ( i + 1 ) ) - MENU_BUTTON_OFFSET * 2 - this.buttonOptions.width }, 500, Phaser.Easing.Exponential.Out, true );\n      prevX += button.width;\n    } );\n  }\n\n  contractOptions() {\n    this.optionsExpanded = false;\n\n    this.optionsUI.forEach( ( button ) => {\n      const tween = this.add.tween( button.position ).to( { x: this.buttonOptions.x }, 500, Phaser.Easing.Exponential.Out, true );\n\n      tween.onComplete.add( () => {\n        if ( !this.optionsExpanded ) {\n          button.visible = false;\n        }\n      } );\n    } );\n  }\n\n  initLang() {\n    this.langUI = [];\n    const currentLang = i18n.get();\n    const langs = [ 'en_gb', 'pl_pl', 'de_de' ];\n\n    this.langsExpanded = false;\n    this.buttonLangs = this.add.button( this.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( `button-lang-${currentLang}` ), this.clickLangOpen, this, 1, 0, 2 );\n    this.buttonLangs.anchor.set( 1, 0 );\n\n    langs.forEach( ( lang ) => {\n      if ( lang !== currentLang ) {\n        const button = this.add.button( this.world.width - MENU_BUTTON_OFFSET, MENU_BUTTON_OFFSET, $( `button-lang-${lang}` ), () => this.clickLang( lang ), this, 1, 0, 2 );\n        button.anchor.set( 1, 0 );\n        button.visible = false;\n        this.langUI.push( button );\n      }\n    } );\n\n    this.game.world.bringToTop( this.buttonLangs );\n  }\n\n  clickLangOpen() {\n    playAudio( 'click' );\n    this.contractOptions();\n    if ( this.langsExpanded ) {\n      this.contractLang();\n    } else {\n      this.expandLang();\n    }\n  }\n\n  expandLang() {\n    this.langsExpanded = true;\n    let prevY = 0;\n\n    this.langUI.forEach( ( button, i ) => {\n      button.visible = true;\n      this.add.tween( button.position ).to( { y: button.height + prevY + ( $( MENU_BUTTON_OFFSET ) * ( i + 1 ) ) + MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n      prevY += button.width;\n    } );\n  }\n\n  contractLang() {\n    this.langsExpanded = false;\n\n    this.langUI.forEach( ( button ) => {\n      const tween = this.add.tween( button.position ).to( { y: this.buttonLangs.y }, 500, Phaser.Easing.Exponential.Out, true );\n\n      tween.onComplete.add( () => {\n        if ( !this.langsExpanded ) {\n          button.visible = false;\n        }\n      } );\n    } );\n  }\n\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n\n  clickPiGames() {\n    playAudio( 'click' );\n    window.top.location.href = 'http://pigam.es/';\n  }\n\n  clickQuality() {\n    playAudio( 'click' );\n    if ( scaleFactor === 1 ) {\n      $set.call( this, 0.5 );\n      PPTStorage.set( 'PPT-quality', 0.5 );\n    } else {\n      $set.call( this, 1 );\n      PPTStorage.set( 'PPT-quality', 1 );\n    }\n  }\n\n  clickLang( lang = 'en_en' ) {\n    playAudio( 'click' );\n    i18n.set( lang );\n    PPTStorage.set( 'PPT-lang', lang );\n    this.game.state.start( this.state.current );\n  }\n\n  clickStart() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.time.events.add( 200, () => {\n      this.game.state.start( 'Game' );\n    } );\n  }\n\n  clickHelp() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    PPTStorage.set( 'PPT-tutorial', false );\n    this.time.events.add( 200, () => {\n      this.game.state.start( 'Game' );\n    } );\n  }\n\n  clickWiki() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.camera.onFadeComplete.add( () => {\n      this.game.state.start( 'Wiki' );\n    }, this );\n  }\n\n  clickCredits() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.camera.onFadeComplete.add( () => {\n      this.game.state.start( 'Credits' );\n    }, this );\n  }\n\n  update() {\n    Clock.updateClock( this );\n  }\n}\n",
    "import { $set } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { PPTStorage, setStorage } from '../utils/StorageManager';\n\nconst resources = {\n  'image': [\n\t\t[ 'background', 'img/background.png' ],\n\t\t[ 'title', 'img/title.png' ],\n\t\t[ 'logo-pigames', 'img/logo-pigames.png' ],\n\t\t[ 'overlay', 'img/ui/overlay.png' ],\n\t\t[ 'sheet', 'img/ui/sheet.png' ],\n\n    [ 'minute-dial', 'img/assets/minute-dial.png' ],\n    [ 'hour-dial', 'img/assets/hour-dial.png' ],\n    [ 'nutrition-bar-background', 'img/ui/nutrition-bar-background.png' ],\n    [ 'nutrition-bar-indicator', 'img/ui/nutrition-bar-indicator.png' ],\n    [ 'heart', 'img/assets/heart.png' ],\n  ],\n  'spritesheet': [\n    [ 'button-start', 'img/ui/button-start.png', 320, 320 ],\n    [ 'button-continue', 'img/ui/button-start.png', 320, 320 ],\n\t\t[ 'button-mainmenu', 'img/ui/button-mainmenu.png', 160, 160 ],\n\t\t[ 'button-restart', 'img/ui/button-tryagain.png', 160, 160 ],\n    [ 'button-options', 'img/ui/button-options.png', 160, 160 ],\n    [ 'button-credits-en_gb', 'img/ui/button-credits-en_gb.png', 160, 160 ],\n    [ 'button-credits-pl_pl', 'img/ui/button-credits-pl_pl.png', 160, 160 ],\n    [ 'button-credits-de_de', 'img/ui/button-credits-pl_pl.png', 160, 160 ],\n    [ 'button-help', 'img/ui/button-help.png', 160, 160 ],\n\t\t[ 'button-wiki', 'img/ui/button-wiki.png', 160, 160 ],\n\t\t[ 'button-pause', 'img/ui/button-pause.png', 160, 160 ],\n\t\t[ 'button-audio', 'img/ui/button-sound.png', 160, 160 ],\n    [ 'button-back', 'img/ui/button-back.png', 160, 170 ],\n\t\t[ 'button-next', 'img/ui/button-next.png', 160, 170 ],\n    [ 'button-lang-en_gb', 'img/ui/button-lang-en_gb.png', 160, 160 ],\n\t\t[ 'button-lang-pl_pl', 'img/ui/button-lang-pl_pl.png', 160, 160 ],\n\t\t[ 'button-lang-de_de', 'img/ui/button-lang-de_de.png', 160, 160 ],\n    [ 'bob', 'img/assets/bob.png', 458, 989 ],\n    [ 'nutrition-bar', 'img/ui/nutrition-bar.png', 680, 56 ],\n    [ 'products-en_gb', 'img/assets/products-en_gb.png', 200, 150 ],\n    [ 'products-pl_pl', 'img/assets/products-pl_pl.png', 200, 150 ],\n    [ 'products-de_de', 'img/assets/products-de_de.png', 200, 150 ],\n\t\t[ 'button-quality', 'img/ui/button-quality.png', 160, 160 ],\n  ],\n  'audio': [\n\t\t[ 'audio-click', [ 'sfx/click.mp3', 'sfx/click.ogg' ] ],\n\t\t[ 'audio-theme', [ 'sfx/farty-mcsty.m4a', 'sfx/farty-mcsty.mp3', 'sfx/farty-mcsty.ogg' ] ],\n    [ 'audio-bite', [ 'sfx/bite.mp3', 'sfx/bite.ogg' ] ],\n  ],\n};\n\nexport default class Preloader extends Phaser.State {\n  preload() {\n    this.add.sprite( 0, 0, 'loadingbg' );\n    this.add.sprite( ( this.world.width - 580 ) * 0.5, ( this.world.height + 150 ) * 0.5, 'loading-background' );\n    const preloadProgress = this.add.sprite( ( this.world.width - 540 ) * 0.5, ( this.world.height + 170 ) * 0.5, 'loading-progress' );\n    this.load.setPreloadSprite( preloadProgress );\n\n    this._preloadResources();\n  }\n  _preloadResources() {\n    this.span = document.createElement( 'span' );\n    this.span.innerHTML = 'Zażółć';\n    this.span.setAttribute( 'style', 'position: absolute; font-family: Arial,  monospace; font-size: 300px; top: -99999px; left: -99999px; opacity: 0;' );\n    document.body.appendChild( this.span );\n    this.initialFontSize = this.span.clientHeight;\n    this.span.style.fontFamily = '\"Bromine\"';\n\n    for ( const method in resources ) {\n      resources[ method ].forEach( ( args ) => {\n        const loader = this.load[ method ];\n        if ( method === 'image' || method === 'spritesheet' ) {\n          const args50 = args.concat();\n          args50[ 0 ] += '-50';\n          args50[ 1 ] = args50[ 1 ].replace( 'img/', 'img50/' );\n          args50[ 2 ] /= 2;\n          args50[ 3 ] /= 2;\n\n          loader && loader.apply( this.load, args50 );\n        }\n\n        loader && loader.apply( this.load, args );\n      }, this );\n    }\n  }\n  update() {\n    if ( this.initialFontSize !== this.span.clientHeight ) {\n      setStorage( this.game.plugins.add( Phaser.Plugin.Storage ) );\n\n      if ( PPTStorage.get( 'PPT-quality' ) === 0.5 ) {\n        $set.call( this, 0.5 );\n      }\n\n      for ( let x = 0; x < navigator.languages.length; x++ ) {\n        const lang = navigator.languages[ x ];\n        if ( lang.toLowerCase().indexOf( 'en' ) >= 0 ) {\n          i18n.set( 'en_gb' );\n          break;\n        }\n\n        if ( lang.toLowerCase().indexOf( 'pl' ) >= 0 ) {\n          i18n.set( 'pl_pl' );\n          break;\n        }\n\n        if ( lang.toLowerCase().indexOf( 'de' ) >= 0 ) {\n          i18n.set( 'de_de' );\n          break;\n        }\n      }\n\n      if ( PPTStorage.get( 'PPT-lang' ) ) {\n        i18n.set( PPTStorage.get( 'PPT-lang' ) );\n      }\n\n      document.body.removeChild( this.span );\n      this.state.start( 'MainMenu' );\n      // this.state.start( 'Game' );\n    }\n  }\n}\n",
    "import { $ } from '../utils/ScaleManager';\nimport i18n from '../utils/i18n';\nimport { playAudio } from '../utils/AudioManager';\nimport { FOOD_DATA } from '../constants/FoodConstants';\nimport { WIKI_TITLE_FONT, WIKI_FONT } from '../constants/UIConstants';\nimport Text from '../UI/Text';\n\nimport { MENU_BUTTON_OFFSET } from '../constants/UIConstants';\n\nexport default class Wiki extends Phaser.State {\n  create() {\n    this.add.sprite( 0, 0, $( 'loadingbg' ) );\n    this.camera.flash( 0x000000, 500, false );\n\n    this.ui = this.add.group();\n\n    const buttonBack = this.add.button( this.world.width - MENU_BUTTON_OFFSET, this.game.world.height - MENU_BUTTON_OFFSET, $( 'button-mainmenu' ), this.clickBack, this, 1, 0, 2 );\n    buttonBack.anchor.set( 1, 1 );\n    buttonBack.x = this.world.width + buttonBack.width + MENU_BUTTON_OFFSET;\n    this.add.tween( buttonBack ).to( { x: this.world.width - MENU_BUTTON_OFFSET }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.buttonNext = this.add.button( 0, this.world.height / 2, $( 'button-next' ), this.goToNextWikiPage, this, 1, 0, 2 );\n    this.buttonNext.x = this.world.width - 64;\n    this.buttonNext.anchor.setTo( 1, 0.5 );\n\n    this.buttonPrev = this.add.button( 64, this.world.height / 2, $( 'button-back' ), this.goToPrevWikiPage, this, 1, 0, 2 );\n    this.buttonPrev.anchor.setTo( 0, 0.5 );\n\n    this.ui.add( buttonBack );\n    this.ui.add( this.buttonNext );\n    this.ui.add( this.buttonPrev );\n\n    this.pages = [];\n    const prevPage = this.add.group();\n    this.fillGroupWithFoodData( prevPage, FOOD_DATA.length - 1 );\n    this.pages.push( prevPage );\n\n    prevPage.position.y = this.world.height / 2 - prevPage.height / 2;\n    prevPage.position.x -= this.world.width;\n\n    const currentPage = this.add.group();\n    this.fillGroupWithFoodData( currentPage, 0 );\n    this.pages.push( currentPage );\n\n    currentPage.position.y = this.world.height / 2 - currentPage.height / 2;\n\n    const nextPage = this.add.group();\n    this.fillGroupWithFoodData( nextPage, 1 );\n    this.pages.push( nextPage );\n\n    nextPage.position.y = this.world.height / 2 - nextPage.height / 2;\n    nextPage.position.x += this.world.width;\n  }\n\n  fillGroupWithFoodData( group, index ) {\n    group.index = index;\n    group.removeAll( true );\n\n    const sheet = this.add.sprite( this.game.width / 2, 0, $( 'sheet' ) );\n    sheet.anchor.setTo( 0.5, 0 );\n\n    const capitalise = ( text ) => {\n      return text.substring( 0, 1 ).toUpperCase() + text.substring( 1 );\n    };\n\n    const title = new Text( this.game, 'center', $( 220 ), `${capitalise( i18n.text( FOOD_DATA[ index ].name ) )}`, $( WIKI_TITLE_FONT ), [ null, 1 ] );\n\n    const sprite = this.add.sprite( this.game.width / 2, $( 380 ), $( i18n.image( 'products' ) ), FOOD_DATA[ index ].key );\n    sprite.scale.setTo( 1.5 );\n    sprite.anchor.setTo( 0.5 );\n\n    const iQuantity = ( args ) => i18n.text( args[ 0 ], args[ 1 ] );\n\n    const carbohydrates = new Text( this.game, 'center', $( 600 ), `${capitalise( i18n.text( 'carbohydrates_name' ) )}: ${FOOD_DATA[ index ].nutritionFacts.carbohydrates}g`, $( WIKI_FONT ), [ null, 1 ] );\n    const fats = new Text( this.game, 'center', $( 714 ), `${capitalise( i18n.text( 'fats_name' ) )}: ${FOOD_DATA[ index ].nutritionFacts.fats}g`, $( WIKI_FONT ), [ null, 1 ] );\n    const proteins = new Text( this.game, 'center', $( 828 ), `${capitalise( i18n.text( 'proteins_name' ) )}: ${FOOD_DATA[ index ].nutritionFacts.proteins}g`, $( WIKI_FONT ), [ null, 1 ] );\n    const quantity = new Text( this.game, 'center', $( 943 ), `${capitalise( i18n.text( 'wiki_quantity' ) )}: ${iQuantity( FOOD_DATA[ index ].quantity )}`, $( WIKI_FONT ), [ null, 1 ] );\n\n    group.add( sheet );\n    group.add( title );\n    group.add( sprite );\n    group.add( carbohydrates );\n    group.add( fats );\n    group.add( proteins );\n    group.add( quantity );\n  }\n\n  goToPrevWikiPage() {\n    this.add.tween( this.pages[ 1 ].position ).to( { x: this.world.width }, 250, Phaser.Easing.Linear.In, true );\n    const tweenIn = this.add.tween( this.pages[ 0 ].position ).to( { x: 0 }, 250, Phaser.Easing.Linear.Out, true );\n    this.game.world.bringToTop( this.ui );\n\n    this.buttonPrev.inputEnabled = false;\n\n    tweenIn.onComplete.add( () => {\n      this.buttonPrev.inputEnabled = true;\n      this.pages[ 0 ].position.x = 0;\n\n      let currentIndex = this.pages[ 0 ].index - 1;\n\n      if ( currentIndex < 0 ) {\n        currentIndex = FOOD_DATA.length - 1;\n        this.currentPageIndex = FOOD_DATA.length - 1;\n      }\n\n      const prevPage = this.add.group();\n      this.fillGroupWithFoodData( prevPage, currentIndex );\n      prevPage.position.y = this.world.height / 2 - prevPage.height / 2;\n      prevPage.position.x = this.world.width * -1;\n\n      this.pages.pop();\n      this.pages.unshift( prevPage );\n    } );\n  }\n\n  goToNextWikiPage() {\n    this.add.tween( this.pages[ 1 ].position ).to( { x: this.world.width * -1 }, 250, Phaser.Easing.Linear.In, true );\n    const tweenIn = this.add.tween( this.pages[ 2 ].position ).to( { x: 0 }, 250, Phaser.Easing.Linear.Out, true );\n    this.game.world.bringToTop( this.ui );\n    this.buttonNext.inputEnabled = false;\n\n    tweenIn.onComplete.add( () => {\n      this.buttonNext.inputEnabled = true;\n      this.pages[ 2 ].position.x = 0;\n\n      let currentIndex = this.pages[ 2 ].index + 1;\n\n      if ( currentIndex >= FOOD_DATA.length ) {\n        currentIndex = 0;\n        this.currentPageIndex = 0;\n      }\n\n      const nextPage = this.add.group();\n      this.fillGroupWithFoodData( nextPage, currentIndex );\n      nextPage.position.y = this.world.height / 2 - nextPage.height / 2;\n      nextPage.position.x = this.world.width;\n\n      this.pages.shift();\n      this.pages.push( nextPage );\n    } );\n  }\n\n  clickBack() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.camera.onFadeComplete.add( () => {\n      this.game.state.start( 'MainMenu' );\n    }, this );\n  }\n}\n",
    "import Wiki from './Wiki';\nimport Boot from './Boot';\nimport Game from './Game';\nimport MainMenu from './MainMenu';\nimport Preloader from './Preloader';\nimport Credits from './Credits';\n\nexport default {\n  Wiki, Boot, Game, MainMenu, Preloader, Credits,\n};\n",
    "import { PPTStorage } from './StorageManager';\n\nlet _audioStatus;\nlet _sound;\nlet _soundMusic;\nlet _audioOffset;\n\nexport function manageAudio( mode, game ) {\n  switch ( mode ) {\n  case 'init': {\n    PPTStorage.initUnset( 'PPT-audio', true );\n    _audioStatus = PPTStorage.get( 'PPT-audio' );\n\t\t// PPT._soundClick = game.add.audio('audio-click');\n    _sound = [];\n    _sound[ 'click' ] = game.add.audio( 'audio-click' );\n    if ( !_soundMusic ) {\n      _soundMusic = game.add.audio( 'audio-theme', 1, true );\n      _soundMusic.volume = 0.5;\n    }\n    break;\n  }\n  case 'on': {\n    _audioStatus = true;\n    break;\n  }\n  case 'off': {\n    _audioStatus = false;\n    break;\n  }\n  case 'switch': {\n    _audioStatus = !_audioStatus;\n    break;\n  }\n  }\n  if ( _audioStatus ) {\n    _audioOffset = 0;\n    if ( _soundMusic ) {\n      if ( !_soundMusic.isPlaying ) {\n        _soundMusic.play( '', 0, 1, true );\n      }\n    }\n  }\t\telse {\n    _audioOffset = 4;\n    if ( _soundMusic ) {\n      _soundMusic.stop();\n    }\n  }\n  PPTStorage.set( 'PPT-audio', _audioStatus );\n  game.buttonAudio.setFrames( _audioOffset + 1, _audioOffset + 0, _audioOffset + 2 );\n}\nexport function playAudio( sound ) {\n  if ( _audioStatus ) {\n    if ( _sound && _sound[ sound ] ) {\n      _sound[ sound ].play();\n    }\n  }\n}\n\nexport function getStatusAudio() {\n  return _audioStatus;\n}\n\nexport const getAudioOffset = () => _audioOffset;\n",
    "import { $ } from './ScaleManager';\n\nexport function initClock( state ) {\n  const now = new Date();\n  state.Clock = {};\n  state.Clock.minuteDial = state.game.add.sprite( $( 847 ), $( 243 ), $( 'minute-dial' ) );\n  state.Clock.minuteDial.anchor.setTo( 0.5, 1 );\n  state.Clock.minuteDial.angle = ( now.getMinutes() / 60 ) * 360;\n\n  state.Clock.hourDial = state.game.add.sprite( $( 847 ), $( 243 ), $( 'hour-dial' ) );\n  state.Clock.hourDial.anchor.setTo( 0.5, 1 );\n  state.Clock.hourDial.angle = ( ( now.getHours() % 12 ) / 12 ) * 360 + ( now.getMinutes() / 60 ) * 30;\n}\n\nexport function updateClock( state ) {\n  const now = new Date();\n  state.Clock.minuteDial.angle = ( now.getMinutes() / 60 ) * 360;\n\n  state.Clock.hourDial.angle = ( ( now.getHours() % 12 ) / 12 ) * 360 + ( now.getMinutes() / 60 ) * 30;\n}\n",
    "export const getRandomWithWeight = ( array, length = array.length ) => {\n  let probs = array.slice( 0, length ).map( v => v.probability );\n  const probsSum = probs.reduce( ( a, b ) => ( a + b ) );\n  probs = probs.map( v => v * ( 1 / probsSum ) );\n\n  const random = Math.random();\n  let sum = 0;\n  for ( let i = 0; i < length; i++ ) {\n    sum += probs[ i ];\n    if ( random <= sum ) {\n      return array[ i ];\n    }\n  }\n};\n",
    "import { THINNESS_LEVELS, FATNESS_LEVELS } from '../constants/WeightBreakpoints';\n\nexport function getStatus( value, goodAmount ) {\n  for ( let i = 0; i < FATNESS_LEVELS.length; i++ ) {\n    if ( value > goodAmount * FATNESS_LEVELS[ i ] ) {\n      return FATNESS_LEVELS.length - i + 8;\n    }\n  }\n\n  for ( let i = 0; i < THINNESS_LEVELS.length; i++ ) {\n    if ( value < goodAmount * THINNESS_LEVELS[ i ] ) {\n      return i;\n    }\n  }\n\n  return 8;\n}\n\nexport function getFoodWithParticularMacros( foodData, macroKey ) {\n  return foodData.filter( ( food ) => {\n    return getDominatingMacroValue( food ) === food.nutritionFacts[ macroKey ];\n  } );\n}\n\nexport function getDominatingMacroValue( food ) {\n  const macros = food.nutritionFacts;\n  return Math.max( macros.carbohydrates, macros.fats, macros.proteins );\n}\n\nexport function getDominatingMacro( food ) {\n  const dominatingValue = getDominatingMacroValue( food );\n  const macros = food.nutritionFacts;\n  for ( const macroKey in food.nutritionFacts ) {\n    if ( macros[ macroKey ] === dominatingValue ) {\n      return macroKey;\n    }\n  }\n}\n",
    "import { CANVAS_WIDTH, CANVAS_HEIGHT } from '../constants/CanvasConstants';\n\nexport let scaleFactor = 1;\n\n/**\n  This magic function handles scaling of game assets.\n\n  // Using on numbers\n  @param {number} value\n  @returns {number} - value multiplied by scaleFactor\n\n  // Using on sprite keys\n  @param {string} value\n  @returns {string} - value with added suffix for sprite naming\n\n  // Using with onScale\n  @param {string|number} value\n  @param {number} onScale\n  @returns {string=''|number=0} - returns value only if onScale equlas scaleFactor\n\n  // Using with text styles\n  @param {object} value\n  @returns {object} - multiplies fontSize by scaleFactor\n */\n\nexport function $( value, onScale ) {\n  const typeofVal = typeof value;\n\n  if ( typeofVal === 'string' ) {\n    if ( onScale ) {\n      if ( onScale === scaleFactor ) {\n        return value;\n      }\n\n      return '';\n    }\n\n    if ( scaleFactor !== 1 ) {\n      return `${value}-${scaleFactor * 100}`;\n    }\n\n    return `${value}`;\n  } else if ( typeofVal === 'number' ) {\n    if ( onScale ) {\n      if ( onScale === scaleFactor ) {\n        return value;\n      }\n\n      return 0;\n    }\n\n    return value * scaleFactor;\n  } else if ( typeofVal === 'object' && value.fontSize ) {\n    const styles = Object.assign( {}, value );\n    styles.fontSize = $( styles.fontSize );\n\n    return styles;\n  }\n}\n\nexport function $set( newScaleFactor ) {\n  scaleFactor = newScaleFactor;\n\n  this.game.scale.setGameSize( $( CANVAS_WIDTH ), $( CANVAS_HEIGHT ) );\n  this.game.state.start( this.state.current );\n}\n",
    "export let PPTStorage;\n\nexport function setStorage( storage ) {\n  PPTStorage = storage;\n}\n",
    "import langFile from '../locales/';\n\nlet CURRENT_LANG = 'en_gb';\n\nclass i18n {\n  text( id, ...args ) {\n    if ( args.length > 0 ) {\n      return langFile[ CURRENT_LANG ][ id ].text( args ) || '';\n    }\n    return langFile[ CURRENT_LANG ][ id ].text || '';\n  }\n\n  quotes( text ) {\n    let quoteTypes = {\n      opening: '”',\n      closing: '”',\n    };\n\n    if ( langFile[ CURRENT_LANG ] && langFile[ CURRENT_LANG ][ 'quote_types' ] ) {\n      quoteTypes = langFile[ CURRENT_LANG ][ 'quote_types' ];\n    }\n\n    return text.replace( /„/g, quoteTypes.opening ).replace( /”/g, quoteTypes.closing );\n  }\n\n  set( lang ) {\n    if ( langFile[ lang ] ) {\n      CURRENT_LANG = lang;\n    }\n  }\n\n  get() {\n    return CURRENT_LANG;\n  }\n\n  image( name ) {\n    return `${name}-${CURRENT_LANG}`;\n  }\n}\n\nexport default new i18n();\n"
  ]
}