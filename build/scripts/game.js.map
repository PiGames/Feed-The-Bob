{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src\\constants\\DifficultyLevelIntervals.js",
    "src\\constants\\FoodConstants.js",
    "src\\constants\\NutritionConstants.js",
    "src\\constants\\UIConstants.js",
    "src\\constants\\WeightBreakpoints.js",
    "src\\index.js",
    "src\\objects\\Bob.js",
    "src\\objects\\Food.js",
    "src\\objects\\FoodSpawner.js",
    "src\\objects\\NutritionManager.js",
    "src\\objects\\NutritionUI.js",
    "src\\states\\Boot.js",
    "src\\states\\Game.js",
    "src\\states\\MainMenu.js",
    "src\\states\\Preloader.js",
    "src\\states\\Story.js",
    "src\\states\\Wiki.js",
    "src\\states\\index.js",
    "src\\utils\\AudioManager.js",
    "src\\utils\\MathUtils.js",
    "src\\utils\\StorageManager.js",
    "src\\utils\\UserInterfaceUtils.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const TIME_TO_REACH_MEDIUM_LEVEL = 5;\r\nexport const TIME_TO_REACH_HARD_LEVEL = 10;\r\n",
    "export const MIN_FOOD_VELOCITY = 120;\r\nexport const MAX_FOOD_VELOCITY = 200;\r\n\r\nexport const FOOD_SPAWN_INTERVAL = Phaser.Timer.SECOND;\r\nexport const FOOD_SPAWN_BOUNDS_WIDTH = 500;\r\nexport const FOOD_SPAWN_BOUNDS_HEIGHT = 300;\r\n\r\nexport const FOOD_WIDTH = 100;\r\nexport const FOOD_HEIGHT = 75;\r\n\r\nexport const FOOD_DATA = [\r\n  { 'key': 'apple', 'nutritionFacts': { 'carbohydrates': 12, 'fats': 0, 'proteins': 0 }, 'complexityLevel': 1, 'probability': 1 },\r\n  { 'key': 'banana', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 1, 'proteins': 0 }, 'complexityLevel': 1, 'probability': 1 },\r\n  { 'key': 'chicken', 'nutritionFacts': { 'carbohydrates': 2, 'fats': 10, 'proteins': 18 }, 'complexityLevel': 2, 'probability': 1 },\r\n  { 'key': 'hamburger', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 13, 'proteins': 16 }, 'complexityLevel': 3, 'probability': 1 },\r\n];\r\n",
    "export const GOOD_AMOUNT_OF_CARBOHYDRATES = 270;\r\nexport const GOOD_AMOUNT_OF_FATS = 70;\r\nexport const GOOD_AMOUNT_OF_PROTEINS = 50;\r\n\r\nexport const AMOUNT_REDUCED_INTERVAL = Phaser.Timer.SECOND * 1;\r\nexport const AMOUNT_REDUCED_PERCENT = 0.03;\r\n",
    "export const NUTRITION_BAR_WIDTH = 680;\r\nexport const NUTRITION_BAR_HEIGHT = 56;\r\nexport const NUTRITION_BAR_OFFSET = 24;\r\nexport const NUTRITION_BAR_TEXT_OFFSET_X = 24;\r\nexport const NUTRITION_BAR_TEXT_OFFSET_Y = 4;\r\nexport const NUTRITION_BAR_X_FROM_LEFT = 24;\r\nexport const NUTRITION_BAR_Y_FROM_BOTTOM = 24;\r\nexport const NUTRITION_BAR_TEXT_SHADOW_SIZE = 10;\r\nexport const NUTRITION_BAR_TEXT_SHADOW_COLOR = 'rgba(0, 0, 0, 0.5)';\r\n\r\nexport const NUTRITION_BAR_INFO_FONT = { font: '32px Gloria Hallelujah', fill: '#fff' };\r\n",
    "export const SUPER_THIN_BREAKPOINT = 0.17;\r\nexport const THIN_BREAKPOINT = 0.34;\r\nexport const FAT_BREAKPOINT = 0.66;\r\nexport const SUPER_FAT_BREAKPOINT = 0.83;\r\n",
    "import EPT from './states';\r\n\r\nconst game = new Phaser.Game( 1920, 1280, Phaser.AUTO );\r\nconst states = {\r\n  'Boot': EPT.Boot,\r\n  'Preloader': EPT.Preloader,\r\n  'MainMenu': EPT.MainMenu,\r\n  'Wiki': EPT.Wiki,\r\n  'Story': EPT.Story,\r\n  'Game': EPT.Game,\r\n};\r\nfor ( const stateName in states ) {\r\n  game.state.add( stateName, states[ stateName ] );\r\n}\r\ngame.state.start( 'Boot' );\r\n",
    "import { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\r\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT } from '../constants/WeightBreakpoints';\r\n\r\nexport default class Bob extends Phaser.Sprite {\r\n  constructor( game, x, y, imageKey, NutritionManager, handleDeath ) {\r\n    super( game, x, y, imageKey );\r\n\r\n    this.handleDeath = handleDeath;\r\n\r\n    this.NutritionManager = NutritionManager;\r\n\r\n    this.anchor.setTo( 0.5, 1 );\r\n    this.scale.setTo( 0.5 );\r\n\r\n    this.game.world.add( this );\r\n  }\r\n\r\n  hadleWeightChange() {\r\n    const nutrition = this.NutritionManager.nutrition;\r\n\r\n    const nutritionStatuses = [ this.getStatus( nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES ), this.getStatus( nutrition.fats, GOOD_AMOUNT_OF_FATS ), this.getStatus( nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS ) ];\r\n\r\n    let isDeadFromThinness = false;\r\n    let isSuperThin = false;\r\n    let isThin = false;\r\n    let isFat = false;\r\n    let isSuperFat = false;\r\n    let isDeadFromFat = false;\r\n\r\n    nutritionStatuses.forEach( ( v ) => {\r\n      switch ( v ) {\r\n      case -3:\r\n        isDeadFromThinness = true;\r\n        break;\r\n      case -2:\r\n        isSuperThin = true;\r\n        break;\r\n      case -1:\r\n        isThin = true;\r\n        break;\r\n      case 1:\r\n        isFat = true;\r\n        break;\r\n      case 2:\r\n        isSuperFat = true;\r\n        break;\r\n      case 3:\r\n        isDeadFromFat = true;\r\n        break;\r\n      }\r\n    } );\r\n\r\n    if ( isDeadFromFat ) {\r\n      this.handleDeath( 'You have died from fat' );\r\n    }\r\n\r\n    if ( isDeadFromThinness ) {\r\n      this.handleDeath( 'You have died from thinness' );\r\n    }\r\n\r\n    if ( isSuperThin || isThin || isFat || isSuperFat ) {\r\n      if ( isThin ) {\r\n        this.frame = 1;\r\n      }\r\n\r\n      if ( isSuperThin ) {\r\n        this.frame = 0;\r\n      }\r\n\r\n      if ( isFat ) {\r\n        this.frame = 3;\r\n      }\r\n\r\n      if ( isSuperFat ) {\r\n        this.frame = 4;\r\n      }\r\n    } else {\r\n      this.frame = 2;\r\n    }\r\n  }\r\n\r\n  getStatus( value, goodAmount ) {\r\n    const doubleOfGoodAmount = goodAmount * 2;\r\n\r\n    if ( value >= doubleOfGoodAmount ) {\r\n      // Bob died from fatness\r\n      return 3;\r\n    }\r\n\r\n    if ( value <= 0 ) {\r\n      // Bob died from thinness\r\n      return -3;\r\n    }\r\n\r\n    if ( value <= doubleOfGoodAmount * SUPER_THIN_BREAKPOINT ) {\r\n      // Bob is super thin\r\n      return -2;\r\n    }\r\n\r\n    if ( value <= doubleOfGoodAmount * THIN_BREAKPOINT ) {\r\n      // Bob is thin\r\n      return -1;\r\n    }\r\n\r\n    if ( value >= doubleOfGoodAmount * SUPER_FAT_BREAKPOINT ) {\r\n      // Bob is super fat\r\n      return 2;\r\n    }\r\n\r\n    if ( value >= doubleOfGoodAmount * FAT_BREAKPOINT ) {\r\n      // Bob is fat\r\n      return 1;\r\n    }\r\n\r\n    // Bob is normal\r\n    return 0;\r\n  }\r\n}\r\n",
    "import { MIN_FOOD_VELOCITY, MAX_FOOD_VELOCITY } from '../constants/FoodConstants';\r\n\r\nexport default class Food extends Phaser.Sprite {\r\n  constructor( game, x, y, key, data, NutritionManager, onDestroy ) {\r\n    super( game, x, y, key );\r\n    this.onDestroy = onDestroy;\r\n    this.data = data;\r\n    this.NutritionManager = NutritionManager;\r\n    this.scale.setTo( 0.75 );\r\n    this.game.physics.enable( this );\r\n\r\n    const directionX = x > this.game.world.centerX ? -1 : 1;\r\n    const directionY = y > this.game.world.centerY ? -1 : 1;\r\n\r\n    this.velocityX = directionX * ( Math.floor(\r\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\r\n    this.body.velocity.x = this.velocityX;\r\n\r\n    this.velocityY = directionY * ( Math.floor(\r\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\r\n    this.body.velocity.y = this.velocityY;\r\n\r\n    this.inputEnabled = true;\r\n    this.events.onInputDown.add( this.handleClick, this );\r\n\r\n    this.events.onInputOver.add( () => {\r\n      game.canvas.style.cursor = 'pointer';\r\n    } );\r\n\r\n    this.events.onInputOut.add( () => {\r\n      game.canvas.style.cursor = 'default';\r\n    } );\r\n    this.hasEnteredScreen = false;\r\n    this.checkWorldBounds = true;\r\n    this.events.onEnterBounds.add( () => {\r\n      this.hasEnteredScreen = true;\r\n    } );\r\n    this.events.onOutOfBounds.add( () => {\r\n      if ( this.hasEnteredScreen ) {\r\n        this.onDestroy( this );\r\n      }\r\n    } );\r\n\r\n\r\n    this.game.world.add( this );\r\n  }\r\n\r\n  handleClick() {\r\n    const tween = this.game.add.tween( this );\r\n    tween.to( { x: this.game.world.centerX - 40, y: this.game.world.height - 680 }, 500, Phaser.Easing.Linear.None, true );\r\n    tween.onComplete.add( () => {\r\n      this.NutritionManager.updateStats( this.data );\r\n      this.onDestroy( this );\r\n    } );\r\n  }\r\n}\r\n",
    "import Food from './Food';\r\nimport { getRandomWithWeight } from '../utils/MathUtils.js';\r\nimport { FOOD_SPAWN_INTERVAL, FOOD_SPAWN_BOUNDS_WIDTH, FOOD_SPAWN_BOUNDS_HEIGHT, FOOD_WIDTH, FOOD_HEIGHT, FOOD_DATA } from '../constants/FoodConstants';\r\nimport { TIME_TO_REACH_HARD_LEVEL, TIME_TO_REACH_MEDIUM_LEVEL } from '../constants/DifficultyLevelIntervals.js';\r\n\r\nexport default class FoodSpawner extends Phaser.Group {\r\n  constructor( game, NutritionManager, enableDifficultyLevelGrowth = false ) {\r\n    super( game );\r\n    this.NutritionManager = NutritionManager;\r\n    this.enableDifficultyLevelGrowth = enableDifficultyLevelGrowth;\r\n\r\n    this.timer = this.game.time.events.loop( FOOD_SPAWN_INTERVAL, this.spawnFood, this );\r\n\r\n    if ( this.enableDifficultyLevelGrowth ) {\r\n      this.sortedFoodData = FOOD_DATA.sort( ( food1, food2 ) => food1.complexityLevel > food2.complexityLevel );\r\n      this.easyLevelLastIndex = FOOD_DATA.length - 1 - this.sortedFoodData.reverse().findIndex( ( food ) => food.complexityLevel === 1 );\r\n      this.mediumLevelLastIndex = FOOD_DATA.length - 1 - this.sortedFoodData.findIndex( ( food ) => food.complexityLevel === 2 );\r\n      this.hardLevelLastIndex = FOOD_DATA.length - 1;\r\n\r\n      this.sortedFoodData.reverse();\r\n\r\n      this.currentDifficultyLevelLastIndex = this.easyLevelLastIndex;\r\n    }\r\n  }\r\n  create() {\r\n    this.spawnFood();\r\n  }\r\n  spawnFood() {\r\n    const sides = [ 'NORTH', 'EAST', 'SOUTH', 'WEST' ];\r\n    const spawnSide = sides[ Math.floor( Math.random() * 4 ) ];\r\n    let x;\r\n    let y;\r\n    if ( spawnSide === 'NORTH' || spawnSide === 'SOUTH' ) {\r\n      x = FOOD_SPAWN_BOUNDS_WIDTH / 2 + Math.random() * FOOD_SPAWN_BOUNDS_WIDTH;\r\n      y = spawnSide === 'NORTH' ? -FOOD_HEIGHT : this.game.world.height + FOOD_HEIGHT;\r\n    } else {\r\n      x = spawnSide === 'WEST' ? -FOOD_WIDTH : this.game.world.width + FOOD_WIDTH;\r\n      y = FOOD_SPAWN_BOUNDS_HEIGHT / 2 + Math.random() * FOOD_SPAWN_BOUNDS_HEIGHT;\r\n    }\r\n    let foodType;\r\n    if ( !this.enableDifficultyLevelGrowth ) {\r\n      foodType = getRandomWithWeight( FOOD_DATA, FOOD_DATA.length );\r\n    } else {\r\n      this.tryDifficultyLevelUp();\r\n      foodType = getRandomWithWeight( this.sortedFoodData, this.currentDifficultyLevelLastIndex + 1 );\r\n    }\r\n    const newFood = new Food( this.game, x, y, foodType.key, foodType.nutritionFacts, this.NutritionManager, this.removeChild.bind( this ) );\r\n    this.children.push( newFood );\r\n  }\r\n  update() {\r\n    Phaser.Group.prototype.update.call( this );\r\n  }\r\n  removeChild( child ) {\r\n    const index = this.children.indexOf( child );\r\n    this.children[ index ].destroy();\r\n    this.children.splice( index, 1 );\r\n  }\r\n  // this method should be called from a callback that counts points\r\n  tryDifficultyLevelUp( score ) {\r\n    if ( score >= TIME_TO_REACH_MEDIUM_LEVEL && this.currentDifficultyLevelLastIndex !== this.mediumLevelLastIndex && this.currentDifficultyLevelLastIndex !== this.hardLevelLastIndex ) {\r\n      this.currentDifficultyLevelLastIndex = this.mediumLevelLastIndex;\r\n      console.log( this.currentDifficultyLevelLastIndex );\r\n    } else if ( score >= TIME_TO_REACH_HARD_LEVEL && this.currentDifficultyLevelLastIndex !== this.hardLevelLastIndex ) {\r\n      this.currentDifficultyLevelLastIndex = this.hardLevelLastIndex;\r\n      console.log( this.currentDifficultyLevelLastIndex );\r\n\r\n    }\r\n  }\r\n}\r\n",
    "import NutritionUI from './NutritionUI';\r\n\r\nimport { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS, AMOUNT_REDUCED_INTERVAL, AMOUNT_REDUCED_PERCENT } from '../constants/NutritionConstants';\r\n\r\nexport default class NutritionManager {\r\n  constructor( game ) {\r\n    this.nutrition = {\r\n      carbohydrates: GOOD_AMOUNT_OF_CARBOHYDRATES,\r\n      fats: GOOD_AMOUNT_OF_FATS,\r\n      proteins: GOOD_AMOUNT_OF_PROTEINS,\r\n    };\r\n\r\n    this.UI = new NutritionUI( game, this );\r\n\r\n    game.time.events.loop( AMOUNT_REDUCED_INTERVAL, this.reduceNutrition, this );\r\n  }\r\n\r\n  reduceNutrition() {\r\n    this.nutrition.carbohydrates -= ( GOOD_AMOUNT_OF_CARBOHYDRATES * AMOUNT_REDUCED_PERCENT );\r\n    this.nutrition.fats -= ( GOOD_AMOUNT_OF_FATS * AMOUNT_REDUCED_PERCENT );\r\n    this.nutrition.proteins -= ( GOOD_AMOUNT_OF_PROTEINS * AMOUNT_REDUCED_PERCENT );\r\n\r\n    this.nutrition.carbohydrates = Math.round( this.nutrition.carbohydrates * 10 ) / 10;\r\n    this.nutrition.fats = Math.round( this.nutrition.fats * 10 ) / 10;\r\n    this.nutrition.proteins = Math.round( this.nutrition.proteins * 10 ) / 10;\r\n\r\n    this.UI.updateUI();\r\n  }\r\n\r\n  updateStats( data ) {\r\n    this.nutrition.carbohydrates += data.carbohydrates;\r\n    this.nutrition.fats += data.fats;\r\n    this.nutrition.proteins += data.proteins;\r\n\r\n    this.UI.updateUI();\r\n  }\r\n}\r\n",
    "import { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\r\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT } from '../constants/WeightBreakpoints';\r\nimport { NUTRITION_BAR_WIDTH, NUTRITION_BAR_HEIGHT, NUTRITION_BAR_OFFSET, NUTRITION_BAR_X_FROM_LEFT, NUTRITION_BAR_Y_FROM_BOTTOM, NUTRITION_BAR_TEXT_OFFSET_X, NUTRITION_BAR_TEXT_OFFSET_Y, NUTRITION_BAR_INFO_FONT, NUTRITION_BAR_TEXT_SHADOW_SIZE, NUTRITION_BAR_TEXT_SHADOW_COLOR } from '../constants/UIConstants';\r\n\r\nexport default class NutritionUI {\r\n  constructor( game, NutritionManager ) {\r\n    this.game = game;\r\n\r\n    this.nutrition = NutritionManager.nutrition;\r\n\r\n    this.NutritionBars = [];\r\n    this.NutritionMasks = [];\r\n    this.NutritionTexts = [];\r\n\r\n    this.drawAllBars();\r\n  }\r\n\r\n  updateUI() {\r\n    this.updateBar( this.nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES, 2 );\r\n    this.updateBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1 );\r\n    this.updateBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0 );\r\n  }\r\n\r\n  drawAllBars() {\r\n    this.drawBar( this.nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES, 2, 'Carbohydrates' );\r\n    this.drawBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1, 'Fats' );\r\n    this.drawBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0, 'Proteins' );\r\n  }\r\n\n  updateBar( value, goodAmount, i ) {\n    const width = NUTRITION_BAR_WIDTH;\r\n    const height = NUTRITION_BAR_HEIGHT;\r\n    const offset = i * ( NUTRITION_BAR_OFFSET + height );\r\n    const doubleOfGoodAmount = goodAmount * 2;\n\n    const status = this.NutritionBars[ i ];\r\n\n    if (\n      value <= doubleOfGoodAmount * SUPER_THIN_BREAKPOINT ||\n      value >= doubleOfGoodAmount * SUPER_FAT_BREAKPOINT\n    ) {\n      status.frame = 2;\r\n    } else if (\n      value <= doubleOfGoodAmount * THIN_BREAKPOINT ||\n      value >= doubleOfGoodAmount * FAT_BREAKPOINT\n    ) {\n      status.frame = 1;\r\n    } else {\n      status.frame = 0;\r\n    }\n\n    const NutritionBarValue = Math.min( Math.max( ( value / doubleOfGoodAmount ), 0 ), 1 );\n\r\n    const mask = this.NutritionMasks[ i ];\r\n    mask.clear();\n    mask.beginFill( 0x000000 );\n    mask.drawRect( this.game.width - NUTRITION_BAR_X_FROM_LEFT - width + ( width * ( 1 - NutritionBarValue ) ), this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - offset - height, width * NutritionBarValue, height );\r\n    mask.endFill();\r\n\r\n    const statusText = this.NutritionTexts[ i ];\r\n    statusText.setText( `${parseInt( value )} / ${goodAmount}` );\r\n  }\n\r\n  drawBar( value, goodAmount, i, text ) {\r\n    const width = NUTRITION_BAR_WIDTH;\r\n    const height = NUTRITION_BAR_HEIGHT;\r\n    const offset = i * ( NUTRITION_BAR_OFFSET + height );\r\n    const doubleOfGoodAmount = goodAmount * 2;\r\n\r\n    const NutritionBarValue = Math.min( Math.max( ( value / doubleOfGoodAmount ), 0 ), 1 );\r\n\r\n    const background = this.game.add.sprite( this.game.width - NUTRITION_BAR_X_FROM_LEFT, this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - offset, 'nutrition-bar-background' );\r\n    background.anchor.setTo( 1, 1 );\r\n\r\n    const mask = this.game.add.graphics( 0, 0 );\r\n    mask.beginFill( 0x000000 );\r\n    mask.drawRect( this.game.width - NUTRITION_BAR_X_FROM_LEFT - width + ( width * ( 1 - NutritionBarValue ) ), this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - offset - height, width * NutritionBarValue, height );\r\n    mask.endFill();\r\n\r\n    this.NutritionMasks[ i ] = mask;\r\n\r\n    const status = this.game.add.sprite( this.game.width - NUTRITION_BAR_X_FROM_LEFT, this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - offset, 'nutrition-bar', 0 );\r\n    status.anchor.setTo( 1, 1 );\r\n    status.mask = mask;\r\n\r\n    this.NutritionBars[ i ] = status;\r\n\r\n    const descText = this.game.add.text( this.game.width - NUTRITION_BAR_X_FROM_LEFT + NUTRITION_BAR_TEXT_OFFSET_X - width, this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - offset - NUTRITION_BAR_TEXT_OFFSET_Y, text, NUTRITION_BAR_INFO_FONT );\r\n    descText.anchor.setTo( 0, 1 );\r\n    descText.setShadow( 0, 0, NUTRITION_BAR_TEXT_SHADOW_COLOR, NUTRITION_BAR_TEXT_SHADOW_SIZE );\r\n\r\n    const statusText = this.game.add.text( this.game.width - NUTRITION_BAR_X_FROM_LEFT - NUTRITION_BAR_TEXT_OFFSET_X, this.game.height - NUTRITION_BAR_Y_FROM_BOTTOM - NUTRITION_BAR_TEXT_OFFSET_Y - offset, `${parseInt( value )} / ${goodAmount}`, NUTRITION_BAR_INFO_FONT );\r\n    statusText.anchor.setTo( 1, 1 );\r\n    statusText.setShadow( 0, 0, NUTRITION_BAR_TEXT_SHADOW_COLOR, NUTRITION_BAR_TEXT_SHADOW_SIZE );\r\n\r\n    this.NutritionTexts[ i ] = statusText;\r\n  }\r\n}\r\n",
    "export default class Boot extends Phaser.State {\r\n  preload() {\r\n    this.game.stage.backgroundColor = '#2196F3';\r\n    this.game.load.image( 'loading-background', 'img/loading-background.png' );\r\n    this.game.load.image( 'loading-progress', 'img/loading-progress.png' );\r\n  }\r\n  create() {\r\n    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n    this.game.scale.pageAlignHorizontally = true;\r\n    this.game.scale.pageAlignVertically = true;\r\n    this.game.state.start( 'Preloader' );\r\n  }\r\n}\r\n",
    "import { playAudio, manageAudio, getAudioOffset } from '../utils/AudioManager';\r\nimport { getStorage } from '../utils/StorageManager';\r\n\r\nimport FoodSpawner from '../objects/FoodSpawner';\r\nimport Bob from '../objects/Bob';\r\n\r\nimport NutritionManager from '../objects/NutritionManager';\r\n\r\nexport default class Game extends Phaser.State {\r\n  create() {\r\n    this.score = 0;\r\n    this.gamePaused = false;\r\n    this.runOnce = false;\r\n\r\n    this.getStorage = getStorage;\r\n\r\n    this.scoreTemplate = time => `Time: ${time}s`;\r\n\r\n    this.NutritionManager = new NutritionManager( this.game );\r\n    this.bob = new Bob( this.game, this.world.width / 2, this.world.height - 32, 'bob', this.NutritionManager, this.stateGameover.bind( this ) );\r\n\r\n    this.foodSpawner = new FoodSpawner( this.game, this.NutritionManager, true );\r\n    this.foodContainer = this.foodSpawner.children;\r\n    this.initUI();\r\n\r\n    this.camera.resetFX();\r\n    this.camera.flash( 0x000000, 500, false );\r\n\r\n    this.game.physics.startSystem( Phaser.Physics.ARCADE );\r\n  }\r\n\r\n  initUI() {\r\n    this.buttonPause = this.add.button( this.world.width - 20, 20, 'button-pause', this.managePause, this, 1, 0, 2 );\r\n    this.buttonPause.anchor.set( 1, 0 );\r\n\r\n    const fontScore = { font: '64px Gloria Hallelujah', fill: '#fff' };\r\n    const fontScoreWhite = { font: '64px Arial', fill: '#FFF', align: 'center' };\r\n    this.textScore = this.add.text( 30, this.world.height - 20, this.scoreTemplate( this.score ), fontScore );\r\n    this.textScore.anchor.set( 0, 1 );\r\n    this.textScore.setShadow( 0, 0, 'rgba(0 ,0, 0, 0.5)', 10 );\r\n\r\n    this.game.time.events.loop( Phaser.Timer.SECOND * 1, this.handlePoints, this );\r\n\r\n    this.buttonPause.y = -this.buttonPause.height - 20;\r\n    this.add.tween( this.buttonPause ).to( { y: 20 }, 1000, Phaser.Easing.Exponential.Out, true );\r\n    this.buttonPause.scale.setTo( 2 );\r\n\r\n    const fontTitle = { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 };\r\n\r\n    this.screenPausedGroup = this.add.group();\r\n    this.screenPausedBg = this.add.sprite( 0, 0, 'overlay' );\r\n    this.screenPausedBg.scale.setTo( 2 );\r\n    this.screenPausedText = this.add.text( this.world.width * 0.5, 100, 'Paused', fontTitle );\r\n    this.screenPausedText.anchor.set( 0.5, 0 );\r\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\r\n    this.buttonAudio.anchor.set( 1, 0 );\r\n    this.buttonAudio.scale.setTo( 2 );\r\n    this.screenPausedBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\r\n    this.screenPausedBack.anchor.set( 0, 1 );\r\n    this.screenPausedContinue = this.add.button( this.world.width - 150, this.world.height - 100, 'button-continue', this.managePause, this, 1, 0, 2 );\r\n    this.screenPausedContinue.anchor.set( 1, 1 );\r\n    this.screenPausedGroup.add( this.screenPausedBg );\r\n    this.screenPausedGroup.add( this.screenPausedText );\r\n    this.screenPausedGroup.add( this.buttonAudio );\r\n    this.screenPausedGroup.add( this.screenPausedBack );\r\n    this.screenPausedGroup.add( this.screenPausedContinue );\r\n    this.screenPausedGroup.visible = false;\r\n\r\n    this.buttonAudio.setFrames( getAudioOffset() + 1, getAudioOffset() + 0, getAudioOffset() + 2 );\r\n\r\n    this.screenGameoverGroup = this.add.group();\r\n    this.screenGameoverBg = this.add.sprite( 0, 0, 'overlay' );\r\n    this.screenGameoverText = this.add.text( this.world.width * 0.5, 100, 'Game over', fontTitle );\r\n    this.screenGameoverText.anchor.set( 0.5, 0 );\r\n    this.screenGameoverBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\r\n    this.screenGameoverBack.anchor.set( 0, 1 );\r\n    this.screenGameoverRestart = this.add.button( this.world.width - 150, this.world.height - 100, 'button-restart', this.stateRestart, this, 1, 0, 2 );\r\n    this.screenGameoverRestart.anchor.set( 1, 1 );\r\n    this.screenGameoverScore = this.add.text( this.world.width * 0.5, 300, 'Score: ' + this.score, fontScoreWhite );\r\n    this.screenGameoverScore.anchor.set( 0.5, 0.5 );\r\n    this.screenGameoverGroup.add( this.screenGameoverBg );\r\n    this.screenGameoverGroup.add( this.screenGameoverText );\r\n    this.screenGameoverGroup.add( this.screenGameoverBack );\r\n    this.screenGameoverGroup.add( this.screenGameoverRestart );\r\n    this.screenGameoverGroup.add( this.screenGameoverScore );\r\n    this.screenGameoverGroup.visible = false;\r\n  }\r\n  update() {\r\n    this.bob.hadleWeightChange();\r\n\r\n    switch ( this.stateStatus ) {\r\n    case 'paused': {\r\n      if ( !this.runOnce ) {\r\n        this.statePaused();\r\n        this.runOnce = true;\r\n      }\r\n      break;\r\n    }\r\n    case 'gameover': {\r\n      if ( !this.runOnce ) {\r\n        this.stateGameover();\r\n        this.runOnce = true;\r\n      }\r\n      break;\r\n    }\r\n    case 'playing': {\r\n      this.statePlaying();\r\n    }\r\n    }\r\n  }\r\n  managePause() {\r\n    this.gamePaused = !this.gamePaused;\r\n    playAudio( 'click' );\r\n    if ( this.gamePaused ) {\r\n      this.game.world.bringToTop( this.screenPausedGroup );\r\n      this.stateStatus = 'paused';\r\n      this.stopMovingFood();\r\n    } else {\r\n      this.stateStatus = 'playing';\r\n      this.runOnce = false;\r\n      this.restoreFoodMovement();\r\n    }\r\n  }\r\n  statePlaying() {\r\n    this.screenPausedGroup.visible = false;\r\n  }\r\n  statePaused() {\r\n    this.screenPausedGroup.visible = true;\r\n  }\r\n  stateGameover( msg ) {\r\n    this.stopMovingFood();\r\n    this.game.world.bringToTop( this.screenGameoverGroup );\r\n    this.screenGameoverGroup.visible = true;\r\n    // this.screenGameoverScore.setText( 'Score: ' + this.score );\r\n    this.gameoverScoreTween( msg );\r\n\r\n    this.getStorage().setHighscore( 'EPT-highscore', this.score );\r\n  }\r\n\r\n  handlePoints() {\r\n    this.score++;\r\n    this.foodSpawner.tryDifficultyLevelUp( this.score );\r\n    this.textScore.setText( this.scoreTemplate( this.score ) );\r\n  }\r\n\r\n  addPoints() {\r\n    // const randX = this.rnd.integerInRange( 200, this.world.width - 200 );\r\n    // const randY = this.rnd.integerInRange( 200, this.world.height - 200 );\r\n    // const pointsAdded = this.add.text( randX, randY, '+10',\r\n\t\t// { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 } );\r\n    //\r\n    // pointsAdded.anchor.set( 0.5, 0.5 );\r\n    // this.add.tween( pointsAdded ).to( { alpha: 0, y: randY - 50 }, 1000, Phaser.Easing.Linear.None, true );\r\n    //\r\n    // this.camera.shake( 0.01, 100, true, Phaser.Camera.SHAKE_BOTH, true );\r\n  }\r\n\r\n  gameoverScoreTween( deathmsg = '' ) {\r\n    this.screenGameoverScore.setText( '' );\r\n    if ( this.score ) {\r\n      this.tweenedPoints = this.score;\r\n      const pointsTween = this.add.tween( this );\r\n      pointsTween.to( { tweenedPoints: this.score }, 1000, Phaser.Easing.Linear.None, true, 500 );\r\n      pointsTween.onUpdateCallback( () => {\r\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + Math.floor( this.tweenedPoints ) + '\\n' + deathmsg );\r\n      }, this );\r\n      pointsTween.onComplete.addOnce( () => {\r\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + this.score );\r\n      }, this );\r\n      pointsTween.start();\r\n    }\r\n  }\r\n  clickAudio() {\r\n    playAudio( 'click' );\r\n    manageAudio( 'switch', this );\r\n  }\r\n  stateRestart() {\r\n    playAudio( 'click' );\r\n    this.screenGameoverGroup.visible = false;\r\n    this.gamePaused = false;\r\n    this.runOnce = false;\r\n    this.stateStatus = 'playing';\r\n    this.restoreFoodMovement();\r\n    this.state.restart( true );\r\n  }\r\n  stateBack() {\r\n    playAudio( 'click' );\r\n    this.screenGameoverGroup.visible = false;\r\n    this.gamePaused = false;\r\n    this.runOnce = false;\r\n    this.stateStatus = 'playing';\r\n    this.game.time.events.resume();\r\n    this.state.start( 'MainMenu' );\r\n  }\r\n  stopMovingFood() {\r\n    this.foodContainer.forEach( food => {\r\n    //  if ( food && food.body ) {\r\n      food.body.velocity.x = 0;\r\n      food.body.velocity.y = 0;\r\n    //  }\r\n    } );\r\n    this.game.time.events.pause();\r\n  }\r\n  restoreFoodMovement() {\r\n    this.foodContainer.forEach( food => {\r\n      //if ( food && food.body ) {\r\n      food.body.velocity.x = food.velocityX;\r\n      food.body.velocity.y = food.velocityY;\r\n      //}\r\n    } );\r\n    this.game.time.events.resume();\r\n  }\r\n}\r\n",
    "import { playAudio, manageAudio } from '../utils/AudioManager';\r\nimport { getStorage, setStorage } from '../utils/StorageManager';\r\n\r\nexport default class MainMenu extends Phaser.State {\r\n  create() {\r\n    this.add.sprite( 0, 0, 'background' );\r\n    const title = this.add.sprite( this.world.width * 0.5, ( this.world.height - 100 ) * 0.5, 'title' );\r\n    title.anchor.set( 0.5 );\r\n\r\n    setStorage( this.game.plugins.add( Phaser.Plugin.Storage ) );\r\n\r\n    getStorage().initUnset( 'EPT-highscore', 0 );\r\n    const highscore = getStorage().get( 'EPT-highscore' ) || 0;\r\n\r\n    const buttonEnclave = this.add.button( 20, 20, 'logo-pigames', this.clickEnclave, this );\r\n    const buttonStart = this.add.button( this.world.width - 20, this.world.height - 20, 'button-start', this.clickStart, this, 1, 0, 2 );\r\n    buttonStart.anchor.set( 1 );\r\n\r\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\r\n    this.buttonAudio.anchor.set( 1, 0 );\r\n    this.buttonAudio.scale.setTo( 2 );\r\n\r\n    const buttonAchievements = this.add.button( 20, this.world.height - 20, 'button-wiki', this.clickAchievements, this, 1, 0, 2 );\r\n    buttonAchievements.anchor.set( 0, 1 );\r\n    buttonAchievements.scale.setTo( 2 );\r\n\r\n    const fontHighscore = { font: '32px Arial', fill: '#000' };\r\n    const textHighscore = this.add.text( this.world.width * 0.5, this.world.height - 50, 'Highscore: ' + highscore, fontHighscore );\r\n    textHighscore.anchor.set( 0.5, 1 );\r\n\r\n    manageAudio( 'init', this );\r\n\t\t// Turn the music off at the start:\r\n    manageAudio( 'off', this );\r\n\r\n    buttonStart.x = this.world.width + buttonStart.width + 20;\r\n    this.add.tween( buttonStart ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n    this.buttonAudio.y = -this.buttonAudio.height - 20;\r\n    this.add.tween( this.buttonAudio ).to( { y: 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n    buttonEnclave.x = -buttonEnclave.width - 20;\r\n    this.add.tween( buttonEnclave ).to( { x: 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n    buttonAchievements.y = this.world.height + buttonAchievements.height + 20;\r\n    this.add.tween( buttonAchievements ).to( { y: this.world.height - 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n\r\n    this.camera.flash( 0x000000, 500, false );\r\n  }\r\n  clickAudio() {\r\n    playAudio( 'click' );\r\n    manageAudio( 'switch', this );\r\n  }\r\n  clickEnclave() {\r\n    playAudio( 'click' );\r\n    window.top.location.href = 'http://pigam.es/';\r\n  }\r\n  clickStart() {\r\n    playAudio( 'click' );\r\n    this.camera.fade( 0x000000, 200, false );\r\n    this.time.events.add( 200, () => {\r\n      // this.game.state.start( 'Story' );\r\n      this.game.state.start( 'Game' );\r\n    } );\r\n  }\r\n  clickAchievements() {\r\n    playAudio( 'click' );\r\n    this.game.state.start( 'Wiki' );\r\n  }\r\n}\r\n",
    "const resources = {\r\n  'image': [\r\n\t\t[ 'background', 'img/background.png' ],\r\n\t\t[ 'title', 'img/title.png' ],\r\n\t\t[ 'logo-pigames', 'img/logo-pigames.png' ],\r\n\t\t[ 'overlay', 'img/overlay.png' ],\r\n\r\n    [ 'nutrition-bar-background', 'img/ui/nutrition-bar-background.png' ],\r\n\r\n    [ 'apple', 'img/assets/apple.png' ],\r\n    [ 'chicken', 'img/assets/chicken.png' ],\r\n    [ 'banana', 'img/assets/banana.png' ],\r\n    [ 'hamburger', 'img/assets/hamburger.png' ],\r\n  ],\r\n  'spritesheet': [\r\n\t\t[ 'button-start', 'img/button-start.png', 180, 180 ],\r\n\t\t[ 'button-continue', 'img/button-continue.png', 180, 180 ],\r\n\t\t[ 'button-mainmenu', 'img/button-mainmenu.png', 180, 180 ],\r\n\t\t[ 'button-restart', 'img/button-tryagain.png', 180, 180 ],\r\n\t\t[ 'button-wiki', 'img/button-wiki.png', 110, 110 ],\r\n\t\t[ 'button-pause', 'img/button-pause.png', 80, 80 ],\r\n\t\t[ 'button-audio', 'img/button-sound.png', 80, 80 ],\r\n\t\t[ 'button-back', 'img/button-back.png', 70, 70 ],\r\n\t\t[ 'button-next', 'img/button-next.png', 70, 70 ],\r\n    [ 'bob', 'img/assets/bob.png', 460, 1370 ],\r\n    [ 'nutrition-bar', 'img/ui/nutrition-bar.png', 680, 56 ],\r\n  ],\r\n  'audio': [\r\n\t\t[ 'audio-click', [ 'sfx/audio-button.m4a', 'sfx/audio-button.mp3', 'sfx/audio-button.ogg' ] ],\r\n\t\t[ 'audio-theme', [ 'sfx/music-bitsnbites-liver.m4a', 'sfx/music-bitsnbites-liver.mp3', 'sfx/music-bitsnbites-liver.ogg' ] ],\r\n  ],\r\n};\r\n\r\nwindow.WebFontConfig = {\r\n  google: {\r\n    families: [ 'Gloria Hallelujah' ],\r\n  },\r\n};\r\n\r\nexport default class Preloader extends Phaser.State {\r\n  preload() {\r\n    this.add.sprite( ( this.world.width - 580 ) * 0.5, ( this.world.height + 150 ) * 0.5, 'loading-background' );\r\n    const preloadProgress = this.add.sprite( ( this.world.width - 540 ) * 0.5, ( this.world.height + 170 ) * 0.5, 'loading-progress' );\r\n    this.load.setPreloadSprite( preloadProgress );\r\n\r\n    this._preloadResources();\r\n  }\r\n  _preloadResources() {\r\n    for ( const method in resources ) {\r\n      resources[ method ].forEach( ( args ) => {\r\n        const loader = this.load[ method ];\r\n        loader && loader.apply( this.load, args );\r\n      }, this );\r\n    }\r\n\r\n    this.load.script( 'webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js' );\r\n  }\r\n  create() {\r\n    // this.state.start( 'MainMenu' );\r\n    this.state.start( 'Game' );\r\n  }\r\n}\r\n",
    "import { playAudio } from '../utils/AudioManager';\r\n\r\nexport default class Story extends Phaser.State {\r\n  create() {\r\n    this.add.text( 100, 75, 'Story screen', { font: '32px Arial', fill: '#000' } );\r\n    const buttonContinue = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-continue', this.clickContinue, this, 1, 0, 2 );\r\n\r\n    buttonContinue.anchor.set( 1, 1 );\r\n    buttonContinue.x = this.world.width + buttonContinue.width + 20;\r\n\r\n    this.add.tween( buttonContinue ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n\r\n    this.camera.flash( 0x000000, 500, false );\r\n  }\r\n  clickContinue() {\r\n    playAudio( 'click' );\r\n    this.camera.fade( 0x000000, 200, false );\r\n    this.camera.onFadeComplete.add( () => {\r\n      this.game.state.start( 'Game' );\r\n    }, this );\r\n  }\r\n}\r\n",
    "import { playAudio } from '../utils/AudioManager';\r\nimport { FOOD_DATA } from '../constants/FoodConstants';\r\nimport { centerObjectInWidth, centerObjectInHeight } from '../utils/UserInterfaceUtils';\r\nexport default class Wiki extends Phaser.State {\r\n  create() {\r\n    const fontWiki = { font: '40px Arial', fill: '#000' };\r\n    this.add.text( 20, 20, 'Wiki', fontWiki );\r\n\r\n    const buttonBack = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-back', this.clickBack, this, 1, 0, 2 );\r\n    buttonBack.anchor.set( 1, 1 );\r\n    buttonBack.x = this.world.width + buttonBack.width + 20;\r\n    this.add.tween( buttonBack ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\r\n\r\n    this.currentWikiPageIndex = 0;\r\n\r\n    this.currentPage = this.add.group();\r\n    this.fillGroupWithFoodData( this.currentPage, 0 );\r\n\r\n    this.nextPage = this.add.group();\r\n    this.fillGroupWithFoodData( this.nextPage, 1 );\r\n\r\n    this.nextPage.position.x += this.world.width;\r\n\r\n    const buttonPrevious = this.add.button( 0, 0, 'button-back', this.goToPreviousWikiPage, this, 1, 0, 2 );\r\n    buttonPrevious.x = -buttonPrevious.width;\r\n    this.add.tween( buttonPrevious ).to( { x: 75 }, 500, Phaser.Easing.Exponential.Out, true );\r\n    centerObjectInHeight( buttonPrevious, this.world );\r\n\r\n    const buttonNext = this.add.button( 0, 0, 'button-next', this.goToNextWikiPage, this, 1, 0, 2 );\r\n    buttonNext.x = this.world.width;\r\n    this.add.tween( buttonNext ).to( { x: this.world.width - buttonNext.width - 75 }, 500, Phaser.Easing.Exponential.Out, true );\r\n    centerObjectInHeight( buttonNext, this.world );\r\n  }\r\n  clickBack() {\r\n    playAudio( 'click' );\r\n    this.game.state.start( 'MainMenu' );\r\n  }\r\n  makeFirstLetterCapital( string ) {\r\n    return `${string.charAt( 0 ).toUpperCase()}${string.substring( 1 )}`;\r\n  }\r\n  goToPreviousWikiPage() {\r\n    if ( this.tweenIn != null ) {\r\n      return;\r\n    }\r\n    this.currentWikiPageIndex = ( this.currentWikiPageIndex === 0 ) ? FOOD_DATA.length - 1 : this.currentWikiPageIndex - 1;\r\n\r\n    this.nextPage.position.x -= this.world.width * 2;\r\n    this.fillGroupWithFoodData( this.nextPage, this.currentWikiPageIndex );\r\n\r\n    this.add.tween( this.currentPage.position ).to( { x: this.currentPage.position.x + this.world.width }, 500, Phaser.Easing.Linear.None, true );\r\n    this.tweenIn = this.add.tween( this.nextPage.position ).to( { x: this.nextPage.position.x + this.world.width }, 500, Phaser.Easing.Linear.None, true );\r\n\r\n    this.tweenIn.onComplete.add( () => {\r\n      const tmpPage = this.currentPage;\r\n      this.currentPage = this.nextPage;\r\n      this.nextPage = tmpPage;\r\n\r\n      this.tweenIn = null;\r\n    } );\r\n  }\r\n  goToNextWikiPage() {\r\n    if ( this.tweenIn != null ) {\r\n      return;\r\n    }\r\n    this.currentWikiPageIndex = ( this.currentWikiPageIndex + 1 === FOOD_DATA.length ) ? 0 : this.currentWikiPageIndex + 1;\r\n\r\n    this.add.tween( this.currentPage.position ).to( { x: this.currentPage.position.x - this.world.width }, 500, Phaser.Easing.Linear.None, true );\r\n    this.tweenIn = this.add.tween( this.nextPage.position ).to( { x: this.nextPage.position.x - this.world.width }, 500, Phaser.Easing.Linear.None, true );\r\n\r\n    this.tweenIn.onComplete.add( () => {\r\n      const tmpPage = this.currentPage;\r\n\r\n      this.currentPage = this.nextPage;\r\n      const nextIndex = ( this.currentWikiPageIndex + 1 === FOOD_DATA.length ) ? 0 : this.currentWikiPageIndex + 1;\r\n      this.fillGroupWithFoodData( tmpPage, nextIndex );\r\n      tmpPage.position.x += this.world.width * 2;\r\n\r\n      this.nextPage = tmpPage;\r\n\r\n      this.tweenIn = null;\r\n    } );\r\n  }\r\n  fillGroupWithFoodData( group, index ) {\r\n    group.removeAll( true );\r\n    const fontTitle = { font: '35px Arial', fill: '#fff' };\r\n\r\n    const title = this.add.text( 0, 75, this.makeFirstLetterCapital( FOOD_DATA[ index ].key ), fontTitle );\r\n    centerObjectInWidth( title, this.world );\r\n    const sprite = this.add.sprite( 0, 150, FOOD_DATA[ index ].key );\r\n    centerObjectInWidth( sprite, this.world );\r\n    const fontNutritionFacts = { font: '25px Arial', fill: '#000' };\r\n    const carbohydrates = this.add.text( 0, 325, `Carbohydrates: ${FOOD_DATA[ index ].nutritionFacts.carbohydrates}g`, fontNutritionFacts );\r\n    centerObjectInWidth( carbohydrates, this.world );\r\n    const fats = this.add.text( 0, 375, `Fats: ${FOOD_DATA[ index ].nutritionFacts.fats}g`, fontNutritionFacts );\r\n    centerObjectInWidth( fats, this.world );\r\n    const proteins = this.add.text( 0, 425, `Proteins: ${FOOD_DATA[ index ].nutritionFacts.proteins}g`, fontNutritionFacts );\r\n    centerObjectInWidth( proteins, this.world );\r\n\r\n    group.add( title );\r\n    group.add( sprite );\r\n    group.add( carbohydrates );\r\n    group.add( fats );\r\n    group.add( proteins );\r\n  }\r\n}\r\n",
    "import Wiki from './Wiki';\r\nimport Boot from './Boot';\r\nimport Game from './Game';\r\nimport MainMenu from './MainMenu';\r\nimport Preloader from './Preloader';\r\nimport Story from './Story';\r\n\r\nexport default {\r\n  Wiki, Boot, Game, MainMenu, Preloader, Story,\r\n};\r\n",
    "import { getStorage } from './StorageManager';\r\n\r\nlet _audioStatus;\r\nlet _sound;\r\nlet _soundMusic;\r\nlet _audioOffset;\r\n\r\nexport function manageAudio( mode, game ) {\r\n  switch ( mode ) {\r\n  case 'init': {\r\n    getStorage().initUnset( 'EPT-audio', true );\r\n    _audioStatus = getStorage().get( 'EPT-audio' );\r\n\t\t// EPT._soundClick = game.add.audio('audio-click');\r\n    _sound = [];\r\n    _sound[ 'click' ] = game.add.audio( 'audio-click' );\r\n    if ( !_soundMusic ) {\r\n      _soundMusic = game.add.audio( 'audio-theme', 1, true );\r\n      _soundMusic.volume = 0.5;\r\n    }\r\n    break;\r\n  }\r\n  case 'on': {\r\n    _audioStatus = true;\r\n    break;\r\n  }\r\n  case 'off': {\r\n    _audioStatus = false;\r\n    break;\r\n  }\r\n  case 'switch': {\r\n    _audioStatus = !_audioStatus;\r\n    break;\r\n  }\r\n  }\r\n  if ( _audioStatus ) {\r\n    _audioOffset = 0;\r\n    if ( _soundMusic ) {\r\n      if ( !_soundMusic.isPlaying ) {\r\n        _soundMusic.play( '', 0, 1, true );\r\n      }\r\n    }\r\n  }\t\telse {\r\n    _audioOffset = 4;\r\n    if ( _soundMusic ) {\r\n      _soundMusic.stop();\r\n    }\r\n  }\r\n  getStorage().set( 'EPT-audio', _audioStatus );\r\n  game.buttonAudio.setFrames( _audioOffset + 1, _audioOffset + 0, _audioOffset + 2 );\r\n}\r\nexport function playAudio( sound ) {\r\n  if ( _audioStatus ) {\r\n    if ( _sound && _sound[ sound ] ) {\r\n      _sound[ sound ].play();\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAudioOffset = () => _audioOffset;\r\n",
    "export const getRandomWithWeight = ( array, length = array.length ) => {\r\n  let probs = array.slice( 0, length ).map( v => v.probability );\r\n  const probsSum = probs.reduce( ( a, b ) => ( a + b ) );\r\n  probs = probs.map( v => v * ( 1 / probsSum ) );\r\n\r\n  const random = Math.random();\r\n  let sum = 0;\r\n  for ( let i = 0; i < length; i++ ) {\r\n    sum += probs[ i ];\r\n    if ( random <= sum ) {\r\n      return array[ i ];\r\n    }\r\n  }\r\n};\r\n",
    "let EPTStorage;\r\n\r\nexport function setStorage( storage ) {\r\n  EPTStorage = storage;\r\n}\r\n\r\nexport const getStorage = () => EPTStorage;\r\n",
    "export function centerObjectInWidth( object, world ) {\r\n  object.position.x = world.width / 2 - object.width / 2;\r\n}\r\n\r\nexport function centerObjectInHeight( object, world ) {\r\n  object.position.y = world.height / 2 - object.height / 2;\r\n}\r\n"
  ]
}