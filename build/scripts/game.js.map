{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/constants/FoodConstants.js",
    "src/constants/NutritionConstants.js",
    "src/index.js",
    "src/objects/Bob.js",
    "src/objects/Food.js",
    "src/objects/FoodSpawner.js",
    "src/objects/NutritionManager.js",
    "src/objects/NutritionUI.js",
    "src/states/Boot.js",
    "src/states/Game.js",
    "src/states/MainMenu.js",
    "src/states/Preloader.js",
    "src/states/Story.js",
    "src/states/Wiki.js",
    "src/states/index.js",
    "src/utils/AudioManager.js",
    "src/utils/StorageManager.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const MIN_FOOD_VELOCITY = 60;\nexport const MAX_FOOD_VELOCITY = 100;\n\nexport const FOOD_SPAWN_INTERVAL = 0.75 * Phaser.Timer.SECOND;\nexport const FOOD_SPAWN_BOUNDS_WIDTH = 500;\nexport const FOOD_SPAWN_BOUNDS_HEIGHT = 300;\n\nexport const FOOD_WIDTH = 100;\nexport const FOOD_HEIGHT = 75;\n\nexport const FOOD_DATA = [\n  { 'key': 'apple', 'nutritionFacts': { 'carbos': 12, 'fats': 0, 'proteins': 0 } },\n  { 'key': 'chicken', 'nutritionFacts': { 'carbos': 2, 'fats': 10, 'proteins': 18 } },\n  { 'key': 'hamburger', 'nutritionFacts': { 'carbos': 30, 'fats': 13, 'proteins': 16 } },\n  { 'key': 'banana', 'nutritionFacts': { 'carbos': 30, 'fats': 1, 'proteins': 0 } },\n];\n",
    "export const GOOD_AMOUNT_OF_CARBS = 270;\nexport const GOOD_AMOUNT_OF_FATS = 70;\nexport const GOOD_AMOUNT_OF_PROTEINS = 50;\n",
    "import EPT from './states';\n\nconst game = new Phaser.Game( 960, 640, Phaser.AUTO );\nconst states = {\n  'Boot': EPT.Boot,\n  'Preloader': EPT.Preloader,\n  'MainMenu': EPT.MainMenu,\n  'Wiki': EPT.Wiki,\n  'Story': EPT.Story,\n  'Game': EPT.Game,\n};\nfor ( const stateName in states ) {\n  game.state.add( stateName, states[ stateName ] );\n}\ngame.state.start( 'Boot' );\n",
    "import { GOOD_AMOUNT_OF_CARBS, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\n\nexport default class Bob extends Phaser.Sprite {\n  constructor( game, x, y, imageKey, NutritionManager, handleDeath ) {\n    super( game, x, y, imageKey );\n\n    this.frame = 1;\n\n    this.handleDeath = handleDeath;\n\n    this.NutritionManager = NutritionManager;\n\n    this.anchor.setTo( 0.5, 1 );\n    this.scale.setTo( 0.25 );\n\n    this.game.world.add( this );\n  }\n\n  hadleWeightChange() {\n    const nutrition = this.NutritionManager.nutrition;\n\n    const arr = [ this.getStatus( nutrition.carbos, GOOD_AMOUNT_OF_CARBS ), this.getStatus( nutrition.fats, GOOD_AMOUNT_OF_FATS ), this.getStatus( nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS ) ];\n\n    let outOfOrder = 0;\n    let isThin = false;\n    let isFat = false;\n    let isDead = false;\n    let isSuperFat = false;\n\n    arr.forEach( ( v ) => {\n      if ( v === -1 ) {\n        isThin = true;\n      } else if ( v === 1 ) {\n        isFat = true;\n      } else if ( v === 2 ) {\n        isFat = true;\n        isSuperFat = true;\n      }\n\n      if ( v === -2 ) {\n        isDead = true;\n      }\n\n      outOfOrder += ( v !== 0 );\n    } );\n\n    if ( isDead ) {\n      this.handleDeath( '' );\n    }\n\n    // this.frame = 2;\n    if ( outOfOrder === 0 ) {\n      this.frame = 1;\n    } else if ( outOfOrder === 1 ) {\n      if ( isThin ) {\n        this.frame = 0;\n      }\n\n      if ( isFat ) {\n        this.frame = 2;\n      }\n\n      if ( isSuperFat ) {\n        this.frame = 3;\n      }\n    } else {\n      if ( isThin ) {\n        this.frame = 0;\n      }\n\n      if ( isFat ) {\n        this.frame = 2;\n      }\n\n      if ( isSuperFat ) {\n        this.frame = 3;\n      }\n    }\n  }\n\n  getStatus( value, goodAmount ) {\n    if ( value <= 0 || value >= ( goodAmount * 2 ) ) {\n      return -2;\n    }\n\n    if ( value <= ( goodAmount * 2 ) * 0.17 ) {\n      return -1;\n    }\n\n    if ( value >= ( goodAmount * 2 ) * 0.83 ) {\n      return 2;\n    }\n\n    if ( value >= ( goodAmount * 2 ) * 0.66 ) {\n      return 1;\n    }\n\n\n    return 0;\n  }\n}\n",
    "import { MIN_FOOD_VELOCITY, MAX_FOOD_VELOCITY } from '../constants/FoodConstants';\n\nexport default class Food extends Phaser.Sprite {\n  constructor( game, x, y, key, data, NutritionManager, onDestroy ) {\n    super( game, x, y, key );\n    this.onDestroy = onDestroy;\n    this.data = data;\n    this.NutritionManager = NutritionManager;\n    this.scale.setTo( 0.5 );\n    this.game.physics.enable( this );\n\n    const directionX = x > this.game.world.centerX ? -1 : 1;\n    const directionY = y > this.game.world.centerY ? -1 : 1;\n\n    this.velocityX = directionX * ( Math.floor(\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\n    this.body.velocity.x = this.velocityX;\n\n    this.velocityY = directionY * ( Math.floor(\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\n    this.body.velocity.y = this.velocityY;\n\n    this.inputEnabled = true;\n    this.events.onInputDown.add( this.handleClick, this );\n\n    this.events.onInputOver.add( () => {\n      game.canvas.style.cursor = 'pointer';\n    } );\n\n    this.events.onInputOut.add( () => {\n      game.canvas.style.cursor = 'default';\n    } );\n    this.hasEnteredScreen = false;\n    this.checkWorldBounds = true;\n    this.events.onEnterBounds.add( () => {\n      this.hasEnteredScreen = true;\n    } );\n    this.events.onOutOfBounds.add( () => {\n      if ( this.hasEnteredScreen ) {\n        this.onDestroy( this );\n      }\n    } );\n\n\n    this.game.world.add( this );\n  }\n\n  handleClick() {\n    const tween = this.game.add.tween( this );\n    tween.to( { x: this.game.world.centerX - 20, y: this.game.world.height - 370 }, 500, Phaser.Easing.Linear.None, true );\n    tween.onComplete.add( () => {\n      this.NutritionManager.updateStats( this.data );\n      this.onDestroy( this );\n    } );\n  }\n}\n",
    "import { FOOD_SPAWN_INTERVAL, FOOD_SPAWN_BOUNDS_WIDTH, FOOD_SPAWN_BOUNDS_HEIGHT, FOOD_WIDTH, FOOD_HEIGHT, FOOD_DATA } from '../constants/FoodConstants';\nimport Food from './Food';\n\nexport default class FoodSpawner extends Phaser.Group {\n  constructor( game, NutritionManager ) {\n    super( game );\n    this.NutritionManager = NutritionManager;\n    this.spawnFood();\n    this.timer = this.game.time.events.loop( FOOD_SPAWN_INTERVAL, this.spawnFood, this );\n  }\n  spawnFood() {\n    const sides = [ 'NORTH', 'EAST', 'SOUTH', 'WEST' ];\n    const spawnSide = sides[ Math.floor( Math.random() * 4 ) ];\n    let x;\n    let y;\n    if ( spawnSide === 'NORTH' || spawnSide === 'SOUTH' ) {\n      x = FOOD_SPAWN_BOUNDS_WIDTH / 2 + Math.random() * FOOD_SPAWN_BOUNDS_WIDTH;\n      y = spawnSide === 'NORTH' ? -FOOD_HEIGHT : this.game.world.height + FOOD_HEIGHT;\n    } else {\n      x = spawnSide === 'WEST' ? -FOOD_WIDTH : this.game.world.width + FOOD_WIDTH;\n      y = FOOD_SPAWN_BOUNDS_HEIGHT / 2 + Math.random() * FOOD_SPAWN_BOUNDS_HEIGHT;\n    }\n    const foodType = FOOD_DATA[ Math.floor( Math.random() * FOOD_DATA.length ) ];\n    const newFood = new Food( this.game, x, y, foodType.key, foodType.nutritionFacts, this.NutritionManager, this.removeChild.bind( this ) );\n    this.children.push( newFood );\n  }\n  update() {\n    this.children.forEach( ( child ) => {\n      if ( Math.abs( child.body.velocity.x ) < 60 || Math.abs( child.body.velocity.y ) < 60 ) {\n        console.log( 'oops', child.body.velocity.x, child.body.velocity.y );\n      }\n    } );\n    Phaser.Group.prototype.update.call( this );\n  }\n  removeChild( child ) {\n    const index = this.children.indexOf( child );\n    this.children[ index ].destroy();\n    this.children.splice( index, 1 );\n  }\n}\n",
    "import NutritionUI from './NutritionUI';\n\nimport { GOOD_AMOUNT_OF_CARBS, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\n\nexport default class NutritionManager {\n  constructor( game ) {\n    this.nutrition = {\n      carbos: GOOD_AMOUNT_OF_CARBS,\n      fats: GOOD_AMOUNT_OF_FATS,\n      proteins: GOOD_AMOUNT_OF_PROTEINS,\n    };\n\n    this.fatOMeter = 3;\n\n    this.UI = new NutritionUI( game, this );\n\n    game.time.events.loop( Phaser.Timer.SECOND * 1, this.reduceNutrition, this );\n  }\n\n  reduceNutrition() {\n    const percentAmount = 0.03;\n    this.nutrition.carbos -= ( GOOD_AMOUNT_OF_CARBS * percentAmount );\n    this.nutrition.fats -= ( GOOD_AMOUNT_OF_FATS * percentAmount );\n    this.nutrition.proteins -= ( GOOD_AMOUNT_OF_PROTEINS * percentAmount );\n\n    this.nutrition.carbos = Math.round( this.nutrition.carbos * 10 ) / 10;\n    this.nutrition.fats = Math.round( this.nutrition.fats * 10 ) / 10;\n    this.nutrition.proteins = Math.round( this.nutrition.proteins * 10 ) / 10;\n\n    this.fatOMeter = (\n      this.nutrition.carbos / GOOD_AMOUNT_OF_CARBS +\n      this.nutrition.fats / GOOD_AMOUNT_OF_FATS +\n      this.nutrition.proteins / GOOD_AMOUNT_OF_PROTEINS\n    );\n\n    this.UI.updateUI();\n  }\n  updateStats( data ) {\n    this.nutrition.carbos += data.carbos;\n    this.nutrition.fats += data.fats;\n    this.nutrition.proteins += data.proteins;\n\n    this.UI.updateUI();\n  }\n}\n",
    "import { GOOD_AMOUNT_OF_CARBS, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\n\nexport default class NutritionUI {\n  constructor( game, NutritionManager ) {\n    this.NutritionManager = NutritionManager;\n\n    this.nutrition = this.NutritionManager.nutrition;\n    this.fatOMeter = this.NutritionManager.fatOMeter;\n\n    this.healthbars = [ game.add.graphics( 0, 0 ), game.add.graphics( 0, 0 ), game.add.graphics( 0, 0 ) ];\n    this.healtTexts = [];\n\n    this.healthbars.forEach( ( v ) => {\n      v.anchor.setTo( 1, 1 );\n    } );\n\n    this.game = game;\n\n    // Text templates\n    // this.carboTextTemplate = text => `Carbohydrates: ${text}g`;\n    // this.fatsTextTemplate = text => `Fats: ${text}g`;\n    // this.proteinsTextTemplate = text => `Proteins: ${text}g`;\n    // this.fatOMeterTextTemplate = text => `Fat-o-meter: ${Math.floor( text / 3 * 100 ) / 100}`;\n    //\n    // this.carboText = game.add.text( 30, 30, this.carboTextTemplate( this.nutrition.carbos ), fontScore );\n    // this.carboText.anchor.set( 0 );\n    //\n    // this.fatsText = game.add.text( 30, ( 30 + fontSize + 8 ), this.fatsTextTemplate( this.nutrition.fats ), fontScore );\n    // this.fatsText.anchor.set( 0 );\n    //\n    // this.proteinsText = game.add.text( 30, ( 30 + ( fontSize + 8 ) * 2 ), this.proteinsTextTemplate( this.nutrition.proteins ), fontScore );\n    // this.proteinsText.anchor.set( 0 );\n    //\n    // this.fatOMeterText = game.add.text( 30, ( 30 + ( fontSize + 8 ) * 3 ), this.fatOMeterTextTemplate( this.fatOMeter ), fontScore );\n    // this.fatOMeterText.anchor.set( 0 );\n\n    this.drawAllBars();\n  }\n\n  updateUI() {\n    // this.carboText.setText( this.carboTextTemplate( this.nutrition.carbos ) );\n    // this.fatsText.setText( this.fatsTextTemplate( this.nutrition.fats ) );\n    // this.proteinsText.setText( this.proteinsTextTemplate( this.nutrition.proteins ) );\n    // this.fatOMeterText.setText( this.fatOMeterTextTemplate( this.NutritionManager.fatOMeter ) );\n\n    this.drawAllBars();\n  }\n\n  drawAllBars() {\n    this.drawBar( this.nutrition.carbos, GOOD_AMOUNT_OF_CARBS, 2, 'C:' );\n    this.drawBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1, 'F:' );\n    this.drawBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0, 'P:' );\n  }\n\n  drawBar( value, goodAmount, i, text ) {\n    const width = 300;\n    const height = 16;\n    const offset = i * 30;\n\n    this.healthbars[ i ].clear();\n\n    if ( value <= ( goodAmount * 2 ) * 0.17 || value >= ( goodAmount * 2 ) * 0.83 ) {\n      this.healthbars[ i ].beginFill( 0xFF0000, 0.85 );\n    } else if ( value <= ( goodAmount * 2 ) * 0.34 || value >= ( goodAmount * 2 ) * 0.66 ) {\n      this.healthbars[ i ].beginFill( 0xFFFF00, 0.85 );\n    } else {\n      this.healthbars[ i ].beginFill( 0x00FF00, 0.85 );\n    }\n\n    const fontSize = 14;\n    const fontScore = { font: `${fontSize}px Arial`, fill: '#000' };\n\n    this.game.add.text( this.game.width - ( width + 24 ) - 24, this.game.height - ( height + 24 ) - offset, text, fontScore );\n\n    this.healthbars[ i ].drawRect( this.game.width - ( width + 24 ), this.game.height - ( height + 24 ) - offset, width * Math.max( ( value / ( goodAmount * 2 ) ), 0 ), height );\n    this.healthbars[ i ].endFill();\n    this.healthbars[ i ].lineStyle( 2, 0x000000, 1 );\n    this.healthbars[ i ].drawRect( this.game.width - ( width + 24 ), this.game.height - ( height + 24 ) - offset, width, height );\n    this.healthbars[ i ].lineStyle( 0 );\n  }\n}\n",
    "export default class Boot extends Phaser.State {\n  preload() {\n    this.game.stage.backgroundColor = '#2196F3';\n    this.game.load.image( 'loading-background', 'img/loading-background.png' );\n    this.game.load.image( 'loading-progress', 'img/loading-progress.png' );\n  }\n  create() {\n    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    this.game.scale.pageAlignHorizontally = true;\n    this.game.scale.pageAlignVertically = true;\n    this.game.state.start( 'Preloader' );\n  }\n}\n",
    "import { playAudio, manageAudio, getAudioOffset } from '../utils/AudioManager';\nimport { getStorage } from '../utils/StorageManager';\n\nimport FoodSpawner from '../objects/FoodSpawner';\nimport Bob from '../objects/Bob';\n\nimport NutritionManager from '../objects/NutritionManager';\n\nexport default class Game extends Phaser.State {\n  create() {\n    this.score = 0;\n    this.gamePaused = false;\n    this.runOnce = false;\n\n    this.getStorage = getStorage;\n\n    this.scoreTemplate = time => `Time: ${time}s`;\n\n    this.NutritionManager = new NutritionManager( this.game );\n    this.bob = new Bob( this.game, this.world.width / 2, this.world.height - 32, 'bob', this.NutritionManager, this.stateGameover.bind( this ) );\n\n    this.foodSpawner = new FoodSpawner( this.game, this.NutritionManager );\n    this.foodContainer = this.foodSpawner.children;\n    this.initUI();\n\n    this.camera.resetFX();\n    this.camera.flash( 0x000000, 500, false );\n\n    this.game.physics.startSystem( Phaser.Physics.ARCADE );\n  }\n\n  initUI() {\n    this.buttonPause = this.add.button( this.world.width - 20, 20, 'button-pause', this.managePause, this, 1, 0, 2 );\n    this.buttonPause.anchor.set( 1, 0 );\n\n    const fontScore = { font: '32px Arial', fill: '#000' };\n    const fontScoreWhite = { font: '32px Arial', fill: '#FFF' };\n    this.textScore = this.add.text( 30, this.world.height - 20, this.scoreTemplate( this.score ), fontScore );\n    this.textScore.anchor.set( 0, 1 );\n\n    this.game.time.events.loop( Phaser.Timer.SECOND * 1, this.handlePoints, this );\n\n    this.buttonPause.y = -this.buttonPause.height - 20;\n    this.add.tween( this.buttonPause ).to( { y: 20 }, 1000, Phaser.Easing.Exponential.Out, true );\n\n    const fontTitle = { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 };\n\n    this.screenPausedGroup = this.add.group();\n    this.screenPausedBg = this.add.sprite( 0, 0, 'overlay' );\n    this.screenPausedText = this.add.text( this.world.width * 0.5, 100, 'Paused', fontTitle );\n    this.screenPausedText.anchor.set( 0.5, 0 );\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n    this.screenPausedBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\n    this.screenPausedBack.anchor.set( 0, 1 );\n    this.screenPausedContinue = this.add.button( this.world.width - 150, this.world.height - 100, 'button-continue', this.managePause, this, 1, 0, 2 );\n    this.screenPausedContinue.anchor.set( 1, 1 );\n    this.screenPausedGroup.add( this.screenPausedBg );\n    this.screenPausedGroup.add( this.screenPausedText );\n    this.screenPausedGroup.add( this.buttonAudio );\n    this.screenPausedGroup.add( this.screenPausedBack );\n    this.screenPausedGroup.add( this.screenPausedContinue );\n    this.screenPausedGroup.visible = false;\n\n    this.buttonAudio.setFrames( getAudioOffset() + 1, getAudioOffset() + 0, getAudioOffset() + 2 );\n\n    this.screenGameoverGroup = this.add.group();\n    this.screenGameoverBg = this.add.sprite( 0, 0, 'overlay' );\n    this.screenGameoverText = this.add.text( this.world.width * 0.5, 100, 'Game over', fontTitle );\n    this.screenGameoverText.anchor.set( 0.5, 0 );\n    this.screenGameoverBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\n    this.screenGameoverBack.anchor.set( 0, 1 );\n    this.screenGameoverRestart = this.add.button( this.world.width - 150, this.world.height - 100, 'button-restart', this.stateRestart, this, 1, 0, 2 );\n    this.screenGameoverRestart.anchor.set( 1, 1 );\n    this.screenGameoverScore = this.add.text( this.world.width * 0.5, 300, 'Score: ' + this.score, fontScoreWhite );\n    this.screenGameoverScore.anchor.set( 0.5, 0.5 );\n    this.screenGameoverGroup.add( this.screenGameoverBg );\n    this.screenGameoverGroup.add( this.screenGameoverText );\n    this.screenGameoverGroup.add( this.screenGameoverBack );\n    this.screenGameoverGroup.add( this.screenGameoverRestart );\n    this.screenGameoverGroup.add( this.screenGameoverScore );\n    this.screenGameoverGroup.visible = false;\n  }\n  update() {\n    this.bob.hadleWeightChange();\n\n    switch ( this.stateStatus ) {\n    case 'paused': {\n      if ( !this.runOnce ) {\n        this.statePaused();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'gameover': {\n      if ( !this.runOnce ) {\n        this.stateGameover();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'playing': {\n      this.statePlaying();\n    }\n    }\n  }\n  managePause() {\n    this.gamePaused = !this.gamePaused;\n    playAudio( 'click' );\n    if ( this.gamePaused ) {\n      this.game.world.bringToTop( this.screenPausedGroup );\n      this.stateStatus = 'paused';\n      this.stopMovingFood();\n    }\t\telse {\n      this.stateStatus = 'playing';\n      this.runOnce = false;\n      this.restoreFoodMovement();\n    }\n  }\n  statePlaying() {\n    this.screenPausedGroup.visible = false;\n  }\n  statePaused() {\n    this.screenPausedGroup.visible = true;\n  }\n  stateGameover( msg ) {\n    this.stopMovingFood();\n    this.game.world.bringToTop( this.screenGameoverGroup );\n    this.screenGameoverGroup.visible = true;\n    // this.screenGameoverScore.setText( 'Score: ' + this.score );\n    this.gameoverScoreTween( msg );\n\n    this.getStorage().setHighscore( 'EPT-highscore', this.score );\n  }\n\n  handlePoints() {\n    this.score++;\n    this.textScore.setText( this.scoreTemplate( this.score ) );\n  }\n\n  addPoints() {\n    // const randX = this.rnd.integerInRange( 200, this.world.width - 200 );\n    // const randY = this.rnd.integerInRange( 200, this.world.height - 200 );\n    // const pointsAdded = this.add.text( randX, randY, '+10',\n\t\t// { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 } );\n    //\n    // pointsAdded.anchor.set( 0.5, 0.5 );\n    // this.add.tween( pointsAdded ).to( { alpha: 0, y: randY - 50 }, 1000, Phaser.Easing.Linear.None, true );\n    //\n    // this.camera.shake( 0.01, 100, true, Phaser.Camera.SHAKE_BOTH, true );\n  }\n\n  gameoverScoreTween( deathmsg = '' ) {\n    this.screenGameoverScore.setText( '' );\n    if ( this.score ) {\n      this.tweenedPoints = this.score;\n      const pointsTween = this.add.tween( this );\n      pointsTween.to( { tweenedPoints: this.score }, 1000, Phaser.Easing.Linear.None, true, 500 );\n      pointsTween.onUpdateCallback( () => {\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + Math.floor( this.tweenedPoints ) + '\\n' + deathmsg );\n      }, this );\n      pointsTween.onComplete.addOnce( () => {\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + this.score );\n        // this.spawnEmitter( this.screenGameoverScore, 'particle', 20, 300 );\n      }, this );\n      pointsTween.start();\n    }\n  }\n  spawnEmitter( item, particle, number, lifespan, frequency, offsetX, offsetY, gravity ) {\n    offsetX = offsetX || 0;\n    offsetY = offsetY || 0;\n    lifespan = lifespan || 2000;\n    frequency = frequency || 0;\n    const emitter = this.game.add.emitter( item.x + offsetX, item.y + offsetY, number );\n    emitter.maxParticles = number;\n    emitter.makeParticles( particle );\n    emitter.setXSpeed( -500, 500 );\n    emitter.setYSpeed( -700, 300 );\n    emitter.setScale( 4, 1, 4, 1, 500, Phaser.Easing.Linear.None );\n    emitter.gravity = gravity || 250;\n    emitter.start( false, lifespan, frequency, number );\n  }\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n  stateRestart() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.restoreFoodMovement();\n    this.state.restart( true );\n  }\n  stateBack() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.game.time.events.resume();\n    this.state.start( 'MainMenu' );\n  }\n  stopMovingFood() {\n    this.foodContainer.forEach( food => {\n    //  if ( food && food.body ) {\n      food.body.velocity.x = 0;\n      food.body.velocity.y = 0;\n    //  }\n    } );\n    this.game.time.events.pause();\n  }\n  restoreFoodMovement() {\n    this.foodContainer.forEach( food => {\n      //if ( food && food.body ) {\n      food.body.velocity.x = food.velocityX;\n      food.body.velocity.y = food.velocityY;\n      //}\n    } );\n    this.game.time.events.resume();\n  }\n}\n",
    "import { playAudio, manageAudio } from '../utils/AudioManager';\nimport { getStorage, setStorage } from '../utils/StorageManager';\n\nexport default class MainMenu extends Phaser.State {\n  create() {\n    this.add.sprite( 0, 0, 'background' );\n    const title = this.add.sprite( this.world.width * 0.5, ( this.world.height - 100 ) * 0.5, 'title' );\n    title.anchor.set( 0.5 );\n\n    setStorage( this.game.plugins.add( Phaser.Plugin.Storage ) );\n\n    getStorage().initUnset( 'EPT-highscore', 0 );\n    const highscore = getStorage().get( 'EPT-highscore' ) || 0;\n\n    const buttonEnclave = this.add.button( 20, 20, 'logo-pigames', this.clickEnclave, this );\n    const buttonStart = this.add.button( this.world.width - 20, this.world.height - 20, 'button-start', this.clickStart, this, 1, 0, 2 );\n    buttonStart.anchor.set( 1 );\n\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n\n    const buttonAchievements = this.add.button( 20, this.world.height - 20, 'button-achievements', this.clickAchievements, this, 1, 0, 2 );\n    buttonAchievements.anchor.set( 0, 1 );\n\n    const fontHighscore = { font: '32px Arial', fill: '#000' };\n    const textHighscore = this.add.text( this.world.width * 0.5, this.world.height - 50, 'Highscore: ' + highscore, fontHighscore );\n    textHighscore.anchor.set( 0.5, 1 );\n\n    manageAudio( 'init', this );\n\t\t// Turn the music off at the start:\n    manageAudio( 'off', this );\n\n    buttonStart.x = this.world.width + buttonStart.width + 20;\n    this.add.tween( buttonStart ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    this.buttonAudio.y = -this.buttonAudio.height - 20;\n    this.add.tween( this.buttonAudio ).to( { y: 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonEnclave.x = -buttonEnclave.width - 20;\n    this.add.tween( buttonEnclave ).to( { x: 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonAchievements.y = this.world.height + buttonAchievements.height + 20;\n    this.add.tween( buttonAchievements ).to( { y: this.world.height - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.camera.flash( 0x000000, 500, false );\n  }\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n  clickEnclave() {\n    playAudio( 'click' );\n    window.top.location.href = 'http://pigam.es/';\n  }\n  clickStart() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.time.events.add( 200, () => {\n      // this.game.state.start( 'Story' );\n      this.game.state.start( 'Game' );\n    } );\n  }\n  clickAchievements() {\n    playAudio( 'click' );\n    this.game.state.start( 'Wiki' );\n  }\n}\n",
    "const resources = {\n  'image': [\n\t\t[ 'background', 'img/background.png' ],\n\t\t[ 'title', 'img/title.png' ],\n\t\t[ 'logo-pigames', 'img/logo-pigames.png' ],\n\t\t[ 'clickme', 'img/clickme.png' ],\n\t\t[ 'overlay', 'img/overlay.png' ],\n\t\t[ 'button-beer', 'img/button-beer.png' ],\n\t\t[ 'particle', 'img/particle.png' ],\n    [ 'apple', 'img/assets/apple.png' ],\n    [ 'chicken', 'img/assets/chicken.png' ],\n    [ 'banana', 'img/assets/banana.png' ],\n    [ 'hamburger', 'img/assets/hamburger.png' ],\n  ],\n  'spritesheet': [\n\t\t[ 'button-start', 'img/button-start.png', 180, 180 ],\n\t\t[ 'button-continue', 'img/button-continue.png', 180, 180 ],\n\t\t[ 'button-mainmenu', 'img/button-mainmenu.png', 180, 180 ],\n\t\t[ 'button-restart', 'img/button-tryagain.png', 180, 180 ],\n\t\t[ 'button-achievements', 'img/button-achievements.png', 110, 110 ],\n\t\t[ 'button-pause', 'img/button-pause.png', 80, 80 ],\n\t\t[ 'button-audio', 'img/button-sound.png', 80, 80 ],\n\t\t[ 'button-back', 'img/button-back.png', 70, 70 ],\n    [ 'bob', 'img/assets/bob.png', 460, 1370 ],\n  ],\n  'audio': [\n\t\t[ 'audio-click', [ 'sfx/audio-button.m4a', 'sfx/audio-button.mp3', 'sfx/audio-button.ogg' ] ],\n\t\t[ 'audio-theme', [ 'sfx/music-bitsnbites-liver.m4a', 'sfx/music-bitsnbites-liver.mp3', 'sfx/music-bitsnbites-liver.ogg' ] ],\n  ],\n};\n\nexport default class Preloader extends Phaser.State {\n  preload() {\n    this.add.sprite( ( this.world.width - 580 ) * 0.5, ( this.world.height + 150 ) * 0.5, 'loading-background' );\n    const preloadProgress = this.add.sprite( ( this.world.width - 540 ) * 0.5, ( this.world.height + 170 ) * 0.5, 'loading-progress' );\n    this.load.setPreloadSprite( preloadProgress );\n\n    this._preloadResources();\n  }\n  _preloadResources() {\n    for ( const method in resources ) {\n      resources[ method ].forEach( ( args ) => {\n        const loader = this.load[ method ];\n        loader && loader.apply( this.load, args );\n      }, this );\n    }\n  }\n  create() {\n    this.state.start( 'MainMenu' );\n    // this.state.start( 'Game' );\n  }\n}\n",
    "import { playAudio } from '../utils/AudioManager';\n\nexport default class Story extends Phaser.State {\n  create() {\n    this.add.text( 100, 75, 'Story screen', { font: '32px Arial', fill: '#000' } );\n    const buttonContinue = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-continue', this.clickContinue, this, 1, 0, 2 );\n\n    buttonContinue.anchor.set( 1, 1 );\n    buttonContinue.x = this.world.width + buttonContinue.width + 20;\n\n    this.add.tween( buttonContinue ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.camera.flash( 0x000000, 500, false );\n  }\n  clickContinue() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.camera.onFadeComplete.add( () => {\n      this.game.state.start( 'Game' );\n    }, this );\n  }\n}\n",
    "import { playAudio } from '../utils/AudioManager';\n\nexport default class Wiki extends Phaser.State {\n  create() {\n    var fontAchievements = { font: '32px Arial', fill: '#000' };\n    this.add.text( 100, 75, 'Achievements screen', fontAchievements );\n\n    const buttonBack = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-back', this.clickBack, this, 1, 0, 2 );\n    buttonBack.anchor.set( 1, 1 );\n    buttonBack.x = this.world.width + buttonBack.width + 20;\n    this.add.tween( buttonBack ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n  }\n  clickBack() {\n    playAudio( 'click' );\n    this.game.state.start( 'MainMenu' );\n  }\n}\n",
    "import Wiki from './Wiki';\nimport Boot from './Boot';\nimport Game from './Game';\nimport MainMenu from './MainMenu';\nimport Preloader from './Preloader';\nimport Story from './Story';\n\nexport default {\n  Wiki, Boot, Game, MainMenu, Preloader, Story,\n};\n",
    "import { getStorage } from './StorageManager';\n\nlet _audioStatus;\nlet _sound;\nlet _soundMusic;\nlet _audioOffset;\n\nexport function manageAudio( mode, game ) {\n  switch ( mode ) {\n  case 'init': {\n    getStorage().initUnset( 'EPT-audio', true );\n    _audioStatus = getStorage().get( 'EPT-audio' );\n\t\t// EPT._soundClick = game.add.audio('audio-click');\n    _sound = [];\n    _sound[ 'click' ] = game.add.audio( 'audio-click' );\n    if ( !_soundMusic ) {\n      _soundMusic = game.add.audio( 'audio-theme', 1, true );\n      _soundMusic.volume = 0.5;\n    }\n    break;\n  }\n  case 'on': {\n    _audioStatus = true;\n    break;\n  }\n  case 'off': {\n    _audioStatus = false;\n    break;\n  }\n  case 'switch': {\n    _audioStatus = !_audioStatus;\n    break;\n  }\n  }\n  if ( _audioStatus ) {\n    _audioOffset = 0;\n    if ( _soundMusic ) {\n      if ( !_soundMusic.isPlaying ) {\n        _soundMusic.play( '', 0, 1, true );\n      }\n    }\n  }\t\telse {\n    _audioOffset = 4;\n    if ( _soundMusic ) {\n      _soundMusic.stop();\n    }\n  }\n  getStorage().set( 'EPT-audio', _audioStatus );\n  game.buttonAudio.setFrames( _audioOffset + 1, _audioOffset + 0, _audioOffset + 2 );\n}\nexport function playAudio( sound ) {\n  if ( _audioStatus ) {\n    if ( _sound && _sound[ sound ] ) {\n      _sound[ sound ].play();\n    }\n  }\n}\n\nexport const getAudioOffset = () => _audioOffset;\n",
    "let EPTStorage;\n\nexport function setStorage( storage ) {\n  EPTStorage = storage;\n}\n\nexport const getStorage = () => EPTStorage;\n"
  ]
}