{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/constants/DifficultyLevelIntervals.js",
    "src/constants/FoodConstants.js",
    "src/constants/NutritionConstants.js",
    "src/constants/UIConstants.js",
    "src/constants/WeightBreakpoints.js",
    "src/index.js",
    "src/objects/Bob.js",
    "src/objects/Food.js",
    "src/objects/FoodSpawner.js",
    "src/objects/NutritionManager.js",
    "src/objects/NutritionUI.js",
    "src/states/Boot.js",
    "src/states/Game.js",
    "src/states/MainMenu.js",
    "src/states/Preloader.js",
    "src/states/Story.js",
    "src/states/Wiki.js",
    "src/states/index.js",
    "src/utils/AudioManager.js",
    "src/utils/StorageManager.js",
    "src/utils/UserInterfaceUtils.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const TIME_TO_REACH_MEDIUM_LEVEL = 5;\nexport const TIME_TO_REACH_HARD_LEVEL = 10;\n",
    "export const MIN_FOOD_VELOCITY = 60;\nexport const MAX_FOOD_VELOCITY = 100;\n\nexport const FOOD_SPAWN_INTERVAL = Phaser.Timer.SECOND;\nexport const FOOD_SPAWN_BOUNDS_WIDTH = 500;\nexport const FOOD_SPAWN_BOUNDS_HEIGHT = 300;\n\nexport const FOOD_WIDTH = 100;\nexport const FOOD_HEIGHT = 75;\n\nexport const FOOD_DATA = [\n  { 'key': 'apple', 'nutritionFacts': { 'carbohydrates': 12, 'fats': 0, 'proteins': 0 }, 'complexityLevel': 1 },\n  { 'key': 'chicken', 'nutritionFacts': { 'carbohydrates': 2, 'fats': 10, 'proteins': 18 }, 'complexityLevel': 2 },\n  { 'key': 'hamburger', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 13, 'proteins': 16 }, 'complexityLevel': 3 },\n  { 'key': 'banana', 'nutritionFacts': { 'carbohydrates': 30, 'fats': 1, 'proteins': 0 }, 'complexityLevel': 1 },\n];\n",
    "export const GOOD_AMOUNT_OF_CARBOHYDRATES = 270;\nexport const GOOD_AMOUNT_OF_FATS = 70;\nexport const GOOD_AMOUNT_OF_PROTEINS = 50;\n",
    "export const NUTRITION_BAR_WIDTH = 300;\nexport const NUTRITION_BAR_HEIGHT = 16;\nexport const NUTRITION_BAR_OFFSET = 30;\nexport const NUTRITION_BAR_TEXT_OFFSET = 24;\nexport const NUTRITION_BAR_X_FROM_LEFT = 24;\nexport const NUTRITION_BAR_Y_FROM_BOTTOM = 24;\n\nexport const NUTRITION_BAR_COLOR_OK = 0x00FF00;\nexport const NUTRITION_BAR_COLOR_WARN = 0xFFFF00;\nexport const NUTRITION_BAR_COLOR_DANGER = 0xFF0000;\nexport const NUTRITION_BAR_COLOR_BORDER = 0x000000;\nexport const NUTRITION_BAR_ALPHA = 0.85;\nexport const NUTRITION_BAR_INFO_FONT = { font: '14px Arial', fill: '#000' };\n",
    "export const SUPER_THIN_BREAKPOINT = 0.17;\nexport const THIN_BREAKPOINT = 0.34;\nexport const FAT_BREAKPOINT = 0.66;\nexport const SUPER_FAT_BREAKPOINT = 0.83;\n",
    "import EPT from './states';\n\nconst game = new Phaser.Game( 960, 640, Phaser.AUTO );\nconst states = {\n  'Boot': EPT.Boot,\n  'Preloader': EPT.Preloader,\n  'MainMenu': EPT.MainMenu,\n  'Wiki': EPT.Wiki,\n  'Story': EPT.Story,\n  'Game': EPT.Game,\n};\nfor ( const stateName in states ) {\n  game.state.add( stateName, states[ stateName ] );\n}\ngame.state.start( 'Boot' );\n",
    "import { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT } from '../constants/WeightBreakpoints';\n\nexport default class Bob extends Phaser.Sprite {\n  constructor( game, x, y, imageKey, NutritionManager, handleDeath ) {\n    super( game, x, y, imageKey );\n\n    this.handleDeath = handleDeath;\n\n    this.NutritionManager = NutritionManager;\n\n    this.anchor.setTo( 0.5, 1 );\n    this.scale.setTo( 0.25 );\n\n    this.game.world.add( this );\n  }\n\n  hadleWeightChange() {\n    const nutrition = this.NutritionManager.nutrition;\n\n    const nutritionStatuses = [ this.getStatus( nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES ), this.getStatus( nutrition.fats, GOOD_AMOUNT_OF_FATS ), this.getStatus( nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS ) ];\n\n    let isDeadFromThinness = false;\n    let isSuperThin = false;\n    let isThin = false;\n    let isFat = false;\n    let isSuperFat = false;\n    let isDeadFromFat = false;\n\n    nutritionStatuses.forEach( ( v ) => {\n      switch ( v ) {\n      case -3:\n        isDeadFromThinness = true;\n        break;\n      case -2:\n        isSuperThin = true;\n        break;\n      case -1:\n        isThin = true;\n        break;\n      case 1:\n        isFat = true;\n        break;\n      case 2:\n        isSuperFat = true;\n        break;\n      case 3:\n        isDeadFromFat = true;\n        break;\n      }\n    } );\n\n    if ( isDeadFromFat ) {\n      this.handleDeath( 'You have died from fat' );\n    }\n\n    if ( isDeadFromThinness ) {\n      this.handleDeath( 'You have died from thinness' );\n    }\n\n    if ( isSuperThin || isThin || isFat || isSuperFat ) {\n      if ( isThin ) {\n        this.frame = 1;\n      }\n\n      if ( isSuperThin ) {\n        this.frame = 0;\n      }\n\n      if ( isFat ) {\n        this.frame = 3;\n      }\n\n      if ( isSuperFat ) {\n        this.frame = 4;\n      }\n    } else {\n      this.frame = 2;\n    }\n  }\n\n  getStatus( value, goodAmount ) {\n    const doubleOfGoodAmount = goodAmount * 2;\n\n    if ( value >= doubleOfGoodAmount ) {\n      // Bob died from fatness\n      return 3;\n    }\n\n    if ( value <= 0 ) {\n      // Bob died from thinness\n      return -3;\n    }\n\n    if ( value <= doubleOfGoodAmount * SUPER_THIN_BREAKPOINT ) {\n      // Bob is super thin\n      return -2;\n    }\n\n    if ( value <= doubleOfGoodAmount * THIN_BREAKPOINT ) {\n      // Bob is thin\n      return -1;\n    }\n\n    if ( value >= doubleOfGoodAmount * SUPER_FAT_BREAKPOINT ) {\n      // Bob is super fat\n      return 2;\n    }\n\n    if ( value >= doubleOfGoodAmount * FAT_BREAKPOINT ) {\n      // Bob is fat\n      return 1;\n    }\n\n    // Bob is normal\n    return 0;\n  }\n}\n",
    "import { MIN_FOOD_VELOCITY, MAX_FOOD_VELOCITY } from '../constants/FoodConstants';\n\nexport default class Food extends Phaser.Sprite {\n  constructor( game, x, y, key, data, NutritionManager, onDestroy ) {\n    super( game, x, y, key );\n    this.onDestroy = onDestroy;\n    this.data = data;\n    this.NutritionManager = NutritionManager;\n    this.scale.setTo( 0.5 );\n    this.game.physics.enable( this );\n\n    const directionX = x > this.game.world.centerX ? -1 : 1;\n    const directionY = y > this.game.world.centerY ? -1 : 1;\n\n    this.velocityX = directionX * ( Math.floor(\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\n    this.body.velocity.x = this.velocityX;\n\n    this.velocityY = directionY * ( Math.floor(\n      Math.random() * ( MAX_FOOD_VELOCITY - MIN_FOOD_VELOCITY ) ) + MIN_FOOD_VELOCITY );\n    this.body.velocity.y = this.velocityY;\n\n    this.inputEnabled = true;\n    this.events.onInputDown.add( this.handleClick, this );\n\n    this.events.onInputOver.add( () => {\n      game.canvas.style.cursor = 'pointer';\n    } );\n\n    this.events.onInputOut.add( () => {\n      game.canvas.style.cursor = 'default';\n    } );\n    this.hasEnteredScreen = false;\n    this.checkWorldBounds = true;\n    this.events.onEnterBounds.add( () => {\n      this.hasEnteredScreen = true;\n    } );\n    this.events.onOutOfBounds.add( () => {\n      if ( this.hasEnteredScreen ) {\n        this.onDestroy( this );\n      }\n    } );\n\n\n    this.game.world.add( this );\n  }\n\n  handleClick() {\n    const tween = this.game.add.tween( this );\n    tween.to( { x: this.game.world.centerX - 20, y: this.game.world.height - 370 }, 500, Phaser.Easing.Linear.None, true );\n    tween.onComplete.add( () => {\n      this.NutritionManager.updateStats( this.data );\n      this.onDestroy( this );\n    } );\n  }\n}\n",
    "import { FOOD_SPAWN_INTERVAL, FOOD_SPAWN_BOUNDS_WIDTH, FOOD_SPAWN_BOUNDS_HEIGHT, FOOD_WIDTH, FOOD_HEIGHT, FOOD_DATA } from '../constants/FoodConstants';\nimport Food from './Food';\nimport { TIME_TO_REACH_HARD_LEVEL, TIME_TO_REACH_MEDIUM_LEVEL } from '../constants/DifficultyLevelIntervals.js';\n\nexport default class FoodSpawner extends Phaser.Group {\n  constructor( game, NutritionManager, enableDifficultyLevelGrowth = false ) {\n    super( game );\n    this.NutritionManager = NutritionManager;\n    this.enableDifficultyLevelGrowth = enableDifficultyLevelGrowth;\n\n    this.timer = this.game.time.events.loop( FOOD_SPAWN_INTERVAL, this.spawnFood, this );\n\n    if ( this.enableDifficultyLevelGrowth ) {\n      this.sortedFoodData = FOOD_DATA.sort( ( food1, food2 ) => food1.complexityLevel > food2.complexityLevel );\n      this.easyLevelLastIndex = FOOD_DATA.length - 1 - this.sortedFoodData.reverse().findIndex( ( food ) => food.complexityLevel === 1 );\n      this.mediumLevelLastIndex = FOOD_DATA.length - 1 - this.sortedFoodData.findIndex( ( food ) => food.complexityLevel === 2 );\n      this.hardLevelLastIndex = FOOD_DATA.length - 1;\n\n      this.sortedFoodData.reverse();\n\n      this.currentDifficultyLevelLastIndex = this.easyLevelLastIndex;\n    }\n  }\n  create() {\n    this.spawnFood();\n  }\n  spawnFood() {\n    const sides = [ 'NORTH', 'EAST', 'SOUTH', 'WEST' ];\n    const spawnSide = sides[ Math.floor( Math.random() * 4 ) ];\n    let x;\n    let y;\n    if ( spawnSide === 'NORTH' || spawnSide === 'SOUTH' ) {\n      x = FOOD_SPAWN_BOUNDS_WIDTH / 2 + Math.random() * FOOD_SPAWN_BOUNDS_WIDTH;\n      y = spawnSide === 'NORTH' ? -FOOD_HEIGHT : this.game.world.height + FOOD_HEIGHT;\n    } else {\n      x = spawnSide === 'WEST' ? -FOOD_WIDTH : this.game.world.width + FOOD_WIDTH;\n      y = FOOD_SPAWN_BOUNDS_HEIGHT / 2 + Math.random() * FOOD_SPAWN_BOUNDS_HEIGHT;\n    }\n    let foodType;\n    if ( !this.enableDifficultyLevelGrowth ) {\n      foodType = FOOD_DATA[ Math.floor( Math.random() * FOOD_DATA.length ) ];\n    } else {\n      this.tryDifficultyLevelUp();\n      foodType = this.sortedFoodData[ Math.floor( Math.random() * ( this.currentDifficultyLevelLastIndex + 1 ) ) ];\n    }\n    const newFood = new Food( this.game, x, y, foodType.key, foodType.nutritionFacts, this.NutritionManager, this.removeChild.bind( this ) );\n    this.children.push( newFood );\n  }\n  update() {\n    Phaser.Group.prototype.update.call( this );\n  }\n  removeChild( child ) {\n    const index = this.children.indexOf( child );\n    this.children[ index ].destroy();\n    this.children.splice( index, 1 );\n  }\n  // this method should be called from a callback that counts points\n  tryDifficultyLevelUp( score ) {\n    if ( score >= TIME_TO_REACH_MEDIUM_LEVEL && this.currentDifficultyLevelLastIndex !== this.mediumLevelLastIndex && this.currentDifficultyLevelLastIndex !== this.hardLevelLastIndex ) {\n      this.currentDifficultyLevelLastIndex = this.mediumLevelLastIndex;\n      console.log( this.currentDifficultyLevelLastIndex );\n    } else if ( score >= TIME_TO_REACH_HARD_LEVEL && this.currentDifficultyLevelLastIndex !== this.hardLevelLastIndex ) {\n      this.currentDifficultyLevelLastIndex = this.hardLevelLastIndex;\n      console.log( this.currentDifficultyLevelLastIndex );\n\n    }\n  }\n}\n",
    "import NutritionUI from './NutritionUI';\n\nimport { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\n\nexport default class NutritionManager {\n  constructor( game ) {\n    this.nutrition = {\n      carbohydrates: GOOD_AMOUNT_OF_CARBOHYDRATES,\n      fats: GOOD_AMOUNT_OF_FATS,\n      proteins: GOOD_AMOUNT_OF_PROTEINS,\n    };\n\n    this.fatOMeter = 3;\n\n    this.UI = new NutritionUI( game, this );\n\n    game.time.events.loop( Phaser.Timer.SECOND * 1, this.reduceNutrition, this );\n  }\n\n  reduceNutrition() {\n    const percentAmount = 0.03;\n    this.nutrition.carbohydrates -= ( GOOD_AMOUNT_OF_CARBOHYDRATES * percentAmount );\n    this.nutrition.fats -= ( GOOD_AMOUNT_OF_FATS * percentAmount );\n    this.nutrition.proteins -= ( GOOD_AMOUNT_OF_PROTEINS * percentAmount );\n\n    this.nutrition.carbohydrates = Math.round( this.nutrition.carbohydrates * 10 ) / 10;\n    this.nutrition.fats = Math.round( this.nutrition.fats * 10 ) / 10;\n    this.nutrition.proteins = Math.round( this.nutrition.proteins * 10 ) / 10;\n\n    this.fatOMeter = (\n      this.nutrition.carbohydrates / GOOD_AMOUNT_OF_CARBOHYDRATES +\n      this.nutrition.fats / GOOD_AMOUNT_OF_FATS +\n      this.nutrition.proteins / GOOD_AMOUNT_OF_PROTEINS\n    );\n\n    this.UI.updateUI();\n  }\n\n  updateStats( data ) {\n    this.nutrition.carbohydrates += data.carbohydrates;\n    this.nutrition.fats += data.fats;\n    this.nutrition.proteins += data.proteins;\n\n    this.UI.updateUI();\n  }\n}\n",
    "import { GOOD_AMOUNT_OF_CARBOHYDRATES, GOOD_AMOUNT_OF_FATS, GOOD_AMOUNT_OF_PROTEINS } from '../constants/NutritionConstants';\nimport { SUPER_THIN_BREAKPOINT, THIN_BREAKPOINT, FAT_BREAKPOINT, SUPER_FAT_BREAKPOINT } from '../constants/WeightBreakpoints';\nimport { NUTRITION_BAR_WIDTH, NUTRITION_BAR_HEIGHT, NUTRITION_BAR_OFFSET, NUTRITION_BAR_X_FROM_LEFT, NUTRITION_BAR_Y_FROM_BOTTOM, NUTRITION_BAR_COLOR_OK, NUTRITION_BAR_COLOR_WARN, NUTRITION_BAR_COLOR_DANGER, NUTRITION_BAR_ALPHA, NUTRITION_BAR_TEXT_OFFSET, NUTRITION_BAR_COLOR_BORDER, NUTRITION_BAR_INFO_FONT } from '../constants/UIConstants';\n\nexport default class NutritionUI {\n  constructor( game, NutritionManager ) {\n    this.game = game;\n\n    this.nutrition = NutritionManager.nutrition;\n\n    this.NutritionBars = [ game.add.graphics( 0, 0 ), game.add.graphics( 0, 0 ), game.add.graphics( 0, 0 ) ];\n    this.healtTexts = [];\n\n    this.NutritionBars.forEach( ( v ) => {\n      v.anchor.setTo( 1, 1 );\n    } );\n\n    this.updateUI();\n  }\n\n  updateUI() {\n    this.drawAllBars();\n  }\n\n  drawAllBars() {\n    this.drawBar( this.nutrition.carbohydrates, GOOD_AMOUNT_OF_CARBOHYDRATES, 2, 'C:' );\n    this.drawBar( this.nutrition.fats, GOOD_AMOUNT_OF_FATS, 1, 'F:' );\n    this.drawBar( this.nutrition.proteins, GOOD_AMOUNT_OF_PROTEINS, 0, 'P:' );\n  }\n\n  drawBar( value, goodAmount, i, text ) {\n    const width = NUTRITION_BAR_WIDTH;\n    const height = NUTRITION_BAR_HEIGHT;\n    const offset = i * NUTRITION_BAR_OFFSET;\n    const doubleOfGoodAmount = goodAmount * 2;\n\n    this.NutritionBars[ i ].clear();\n\n    if (\n      value <= doubleOfGoodAmount * SUPER_THIN_BREAKPOINT ||\n      value >= doubleOfGoodAmount * SUPER_FAT_BREAKPOINT\n    ) {\n      this.NutritionBars[ i ].beginFill( NUTRITION_BAR_COLOR_DANGER, NUTRITION_BAR_ALPHA );\n    } else if (\n      value <= doubleOfGoodAmount * THIN_BREAKPOINT ||\n      value >= doubleOfGoodAmount * FAT_BREAKPOINT\n    ) {\n      this.NutritionBars[ i ].beginFill( NUTRITION_BAR_COLOR_WARN, NUTRITION_BAR_ALPHA );\n    } else {\n      this.NutritionBars[ i ].beginFill( NUTRITION_BAR_COLOR_OK, NUTRITION_BAR_ALPHA );\n    }\n\n    const NutritionBarValue = Math.min( Math.max( ( value / doubleOfGoodAmount ), 0 ), 1 );\n\n    this.game.add.text( this.game.width - ( width + NUTRITION_BAR_X_FROM_LEFT ) - NUTRITION_BAR_TEXT_OFFSET, this.game.height - ( height + NUTRITION_BAR_Y_FROM_BOTTOM ) - offset, text, NUTRITION_BAR_INFO_FONT );\n    this.NutritionBars[ i ].drawRect( this.game.width - ( width + NUTRITION_BAR_X_FROM_LEFT ), this.game.height - ( height + NUTRITION_BAR_Y_FROM_BOTTOM ) - offset, width * NutritionBarValue, height );\n    this.NutritionBars[ i ].endFill();\n    this.NutritionBars[ i ].lineStyle( 2, NUTRITION_BAR_COLOR_BORDER, 1 );\n    this.NutritionBars[ i ].drawRect( this.game.width - ( width + NUTRITION_BAR_X_FROM_LEFT ), this.game.height - ( height + NUTRITION_BAR_Y_FROM_BOTTOM ) - offset, width, height );\n    this.NutritionBars[ i ].lineStyle( 0 );\n  }\n}\n",
    "export default class Boot extends Phaser.State {\n  preload() {\n    this.game.stage.backgroundColor = '#2196F3';\n    this.game.load.image( 'loading-background', 'img/loading-background.png' );\n    this.game.load.image( 'loading-progress', 'img/loading-progress.png' );\n  }\n  create() {\n    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    this.game.scale.pageAlignHorizontally = true;\n    this.game.scale.pageAlignVertically = true;\n    this.game.state.start( 'Preloader' );\n  }\n}\n",
    "import { playAudio, manageAudio, getAudioOffset } from '../utils/AudioManager';\nimport { getStorage } from '../utils/StorageManager';\n\nimport FoodSpawner from '../objects/FoodSpawner';\nimport Bob from '../objects/Bob';\n\nimport NutritionManager from '../objects/NutritionManager';\n\nexport default class Game extends Phaser.State {\n  create() {\n    this.score = 0;\n    this.gamePaused = false;\n    this.runOnce = false;\n\n    this.getStorage = getStorage;\n\n    this.scoreTemplate = time => `Time: ${time}s`;\n\n    this.NutritionManager = new NutritionManager( this.game );\n    this.bob = new Bob( this.game, this.world.width / 2, this.world.height - 32, 'bob', this.NutritionManager, this.stateGameover.bind( this ) );\n\n    this.foodSpawner = new FoodSpawner( this.game, this.NutritionManager, true );\n    this.foodContainer = this.foodSpawner.children;\n    this.initUI();\n\n    this.camera.resetFX();\n    this.camera.flash( 0x000000, 500, false );\n\n    this.game.physics.startSystem( Phaser.Physics.ARCADE );\n  }\n\n  initUI() {\n    this.buttonPause = this.add.button( this.world.width - 20, 20, 'button-pause', this.managePause, this, 1, 0, 2 );\n    this.buttonPause.anchor.set( 1, 0 );\n\n    const fontScore = { font: '32px Arial', fill: '#000' };\n    const fontScoreWhite = { font: '32px Arial', fill: '#FFF', align: 'center' };\n    this.textScore = this.add.text( 30, this.world.height - 20, this.scoreTemplate( this.score ), fontScore );\n    this.textScore.anchor.set( 0, 1 );\n\n    this.game.time.events.loop( Phaser.Timer.SECOND * 1, this.handlePoints, this );\n\n    this.buttonPause.y = -this.buttonPause.height - 20;\n    this.add.tween( this.buttonPause ).to( { y: 20 }, 1000, Phaser.Easing.Exponential.Out, true );\n\n    const fontTitle = { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 };\n\n    this.screenPausedGroup = this.add.group();\n    this.screenPausedBg = this.add.sprite( 0, 0, 'overlay' );\n    this.screenPausedText = this.add.text( this.world.width * 0.5, 100, 'Paused', fontTitle );\n    this.screenPausedText.anchor.set( 0.5, 0 );\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n    this.screenPausedBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\n    this.screenPausedBack.anchor.set( 0, 1 );\n    this.screenPausedContinue = this.add.button( this.world.width - 150, this.world.height - 100, 'button-continue', this.managePause, this, 1, 0, 2 );\n    this.screenPausedContinue.anchor.set( 1, 1 );\n    this.screenPausedGroup.add( this.screenPausedBg );\n    this.screenPausedGroup.add( this.screenPausedText );\n    this.screenPausedGroup.add( this.buttonAudio );\n    this.screenPausedGroup.add( this.screenPausedBack );\n    this.screenPausedGroup.add( this.screenPausedContinue );\n    this.screenPausedGroup.visible = false;\n\n    this.buttonAudio.setFrames( getAudioOffset() + 1, getAudioOffset() + 0, getAudioOffset() + 2 );\n\n    this.screenGameoverGroup = this.add.group();\n    this.screenGameoverBg = this.add.sprite( 0, 0, 'overlay' );\n    this.screenGameoverText = this.add.text( this.world.width * 0.5, 100, 'Game over', fontTitle );\n    this.screenGameoverText.anchor.set( 0.5, 0 );\n    this.screenGameoverBack = this.add.button( 150, this.world.height - 100, 'button-mainmenu', this.stateBack, this, 1, 0, 2 );\n    this.screenGameoverBack.anchor.set( 0, 1 );\n    this.screenGameoverRestart = this.add.button( this.world.width - 150, this.world.height - 100, 'button-restart', this.stateRestart, this, 1, 0, 2 );\n    this.screenGameoverRestart.anchor.set( 1, 1 );\n    this.screenGameoverScore = this.add.text( this.world.width * 0.5, 300, 'Score: ' + this.score, fontScoreWhite );\n    this.screenGameoverScore.anchor.set( 0.5, 0.5 );\n    this.screenGameoverGroup.add( this.screenGameoverBg );\n    this.screenGameoverGroup.add( this.screenGameoverText );\n    this.screenGameoverGroup.add( this.screenGameoverBack );\n    this.screenGameoverGroup.add( this.screenGameoverRestart );\n    this.screenGameoverGroup.add( this.screenGameoverScore );\n    this.screenGameoverGroup.visible = false;\n  }\n  update() {\n    this.bob.hadleWeightChange();\n\n    switch ( this.stateStatus ) {\n    case 'paused': {\n      if ( !this.runOnce ) {\n        this.statePaused();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'gameover': {\n      if ( !this.runOnce ) {\n        this.stateGameover();\n        this.runOnce = true;\n      }\n      break;\n    }\n    case 'playing': {\n      this.statePlaying();\n    }\n    }\n  }\n  managePause() {\n    this.gamePaused = !this.gamePaused;\n    playAudio( 'click' );\n    if ( this.gamePaused ) {\n      this.game.world.bringToTop( this.screenPausedGroup );\n      this.stateStatus = 'paused';\n      this.stopMovingFood();\n    }\t\telse {\n      this.stateStatus = 'playing';\n      this.runOnce = false;\n      this.restoreFoodMovement();\n    }\n  }\n  statePlaying() {\n    this.screenPausedGroup.visible = false;\n  }\n  statePaused() {\n    this.screenPausedGroup.visible = true;\n  }\n  stateGameover( msg ) {\n    this.stopMovingFood();\n    this.game.world.bringToTop( this.screenGameoverGroup );\n    this.screenGameoverGroup.visible = true;\n    // this.screenGameoverScore.setText( 'Score: ' + this.score );\n    this.gameoverScoreTween( msg );\n\n    this.getStorage().setHighscore( 'EPT-highscore', this.score );\n  }\n\n  handlePoints() {\n    this.score++;\n    this.foodSpawner.tryDifficultyLevelUp( this.score );\n    this.textScore.setText( this.scoreTemplate( this.score ) );\n  }\n\n  addPoints() {\n    // const randX = this.rnd.integerInRange( 200, this.world.width - 200 );\n    // const randY = this.rnd.integerInRange( 200, this.world.height - 200 );\n    // const pointsAdded = this.add.text( randX, randY, '+10',\n\t\t// { font: '48px Arial', fill: '#000', stroke: '#FFF', strokeThickness: 10 } );\n    //\n    // pointsAdded.anchor.set( 0.5, 0.5 );\n    // this.add.tween( pointsAdded ).to( { alpha: 0, y: randY - 50 }, 1000, Phaser.Easing.Linear.None, true );\n    //\n    // this.camera.shake( 0.01, 100, true, Phaser.Camera.SHAKE_BOTH, true );\n  }\n\n  gameoverScoreTween( deathmsg = '' ) {\n    this.screenGameoverScore.setText( '' );\n    if ( this.score ) {\n      this.tweenedPoints = this.score;\n      const pointsTween = this.add.tween( this );\n      pointsTween.to( { tweenedPoints: this.score }, 1000, Phaser.Easing.Linear.None, true, 500 );\n      pointsTween.onUpdateCallback( () => {\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + Math.floor( this.tweenedPoints ) + '\\n' + deathmsg );\n      }, this );\n      pointsTween.onComplete.addOnce( () => {\n        this.screenGameoverScore.setText( 'Time survied on diet: ' + this.score );\n        // this.spawnEmitter( this.screenGameoverScore, 'particle', 20, 300 );\n      }, this );\n      pointsTween.start();\n    }\n  }\n  spawnEmitter( item, particle, number, lifespan, frequency, offsetX, offsetY, gravity ) {\n    offsetX = offsetX || 0;\n    offsetY = offsetY || 0;\n    lifespan = lifespan || 2000;\n    frequency = frequency || 0;\n    const emitter = this.game.add.emitter( item.x + offsetX, item.y + offsetY, number );\n    emitter.maxParticles = number;\n    emitter.makeParticles( particle );\n    emitter.setXSpeed( -500, 500 );\n    emitter.setYSpeed( -700, 300 );\n    emitter.setScale( 4, 1, 4, 1, 500, Phaser.Easing.Linear.None );\n    emitter.gravity = gravity || 250;\n    emitter.start( false, lifespan, frequency, number );\n  }\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n  stateRestart() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.restoreFoodMovement();\n    this.state.restart( true );\n  }\n  stateBack() {\n    playAudio( 'click' );\n    this.screenGameoverGroup.visible = false;\n    this.gamePaused = false;\n    this.runOnce = false;\n    this.stateStatus = 'playing';\n    this.game.time.events.resume();\n    this.state.start( 'MainMenu' );\n  }\n  stopMovingFood() {\n    this.foodContainer.forEach( food => {\n    //  if ( food && food.body ) {\n      food.body.velocity.x = 0;\n      food.body.velocity.y = 0;\n    //  }\n    } );\n    this.game.time.events.pause();\n  }\n  restoreFoodMovement() {\n    this.foodContainer.forEach( food => {\n      //if ( food && food.body ) {\n      food.body.velocity.x = food.velocityX;\n      food.body.velocity.y = food.velocityY;\n      //}\n    } );\n    this.game.time.events.resume();\n  }\n}\n",
    "import { playAudio, manageAudio } from '../utils/AudioManager';\nimport { getStorage, setStorage } from '../utils/StorageManager';\n\nexport default class MainMenu extends Phaser.State {\n  create() {\n    this.add.sprite( 0, 0, 'background' );\n    const title = this.add.sprite( this.world.width * 0.5, ( this.world.height - 100 ) * 0.5, 'title' );\n    title.anchor.set( 0.5 );\n\n    setStorage( this.game.plugins.add( Phaser.Plugin.Storage ) );\n\n    getStorage().initUnset( 'EPT-highscore', 0 );\n    const highscore = getStorage().get( 'EPT-highscore' ) || 0;\n\n    const buttonEnclave = this.add.button( 20, 20, 'logo-pigames', this.clickEnclave, this );\n    const buttonStart = this.add.button( this.world.width - 20, this.world.height - 20, 'button-start', this.clickStart, this, 1, 0, 2 );\n    buttonStart.anchor.set( 1 );\n\n    this.buttonAudio = this.add.button( this.world.width - 20, 20, 'button-audio', this.clickAudio, this, 1, 0, 2 );\n    this.buttonAudio.anchor.set( 1, 0 );\n\n    const buttonAchievements = this.add.button( 20, this.world.height - 20, 'button-achievements', this.clickAchievements, this, 1, 0, 2 );\n    buttonAchievements.anchor.set( 0, 1 );\n\n    const fontHighscore = { font: '32px Arial', fill: '#000' };\n    const textHighscore = this.add.text( this.world.width * 0.5, this.world.height - 50, 'Highscore: ' + highscore, fontHighscore );\n    textHighscore.anchor.set( 0.5, 1 );\n\n    manageAudio( 'init', this );\n\t\t// Turn the music off at the start:\n    manageAudio( 'off', this );\n\n    buttonStart.x = this.world.width + buttonStart.width + 20;\n    this.add.tween( buttonStart ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    this.buttonAudio.y = -this.buttonAudio.height - 20;\n    this.add.tween( this.buttonAudio ).to( { y: 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonEnclave.x = -buttonEnclave.width - 20;\n    this.add.tween( buttonEnclave ).to( { x: 20 }, 500, Phaser.Easing.Exponential.Out, true );\n    buttonAchievements.y = this.world.height + buttonAchievements.height + 20;\n    this.add.tween( buttonAchievements ).to( { y: this.world.height - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.camera.flash( 0x000000, 500, false );\n  }\n  clickAudio() {\n    playAudio( 'click' );\n    manageAudio( 'switch', this );\n  }\n  clickEnclave() {\n    playAudio( 'click' );\n    window.top.location.href = 'http://pigam.es/';\n  }\n  clickStart() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.time.events.add( 200, () => {\n      // this.game.state.start( 'Story' );\n      this.game.state.start( 'Game' );\n    } );\n  }\n  clickAchievements() {\n    playAudio( 'click' );\n    this.game.state.start( 'Wiki' );\n  }\n}\n",
    "const resources = {\n  'image': [\n\t\t[ 'background', 'img/background.png' ],\n\t\t[ 'title', 'img/title.png' ],\n\t\t[ 'logo-pigames', 'img/logo-pigames.png' ],\n\t\t[ 'clickme', 'img/clickme.png' ],\n\t\t[ 'overlay', 'img/overlay.png' ],\n\t\t[ 'button-beer', 'img/button-beer.png' ],\n\t\t[ 'particle', 'img/particle.png' ],\n    [ 'apple', 'img/assets/apple.png' ],\n    [ 'chicken', 'img/assets/chicken.png' ],\n    [ 'banana', 'img/assets/banana.png' ],\n    [ 'hamburger', 'img/assets/hamburger.png' ],\n  ],\n  'spritesheet': [\n\t\t[ 'button-start', 'img/button-start.png', 180, 180 ],\n\t\t[ 'button-continue', 'img/button-continue.png', 180, 180 ],\n\t\t[ 'button-mainmenu', 'img/button-mainmenu.png', 180, 180 ],\n\t\t[ 'button-restart', 'img/button-tryagain.png', 180, 180 ],\n\t\t[ 'button-achievements', 'img/button-achievements.png', 110, 110 ],\n\t\t[ 'button-pause', 'img/button-pause.png', 80, 80 ],\n\t\t[ 'button-audio', 'img/button-sound.png', 80, 80 ],\n\t\t[ 'button-back', 'img/button-back.png', 70, 70 ],\n\t\t[ 'button-next', 'img/button-next.png', 70, 70 ],\n    [ 'bob', 'img/assets/bob.png', 460, 1370 ],\n  ],\n  'audio': [\n\t\t[ 'audio-click', [ 'sfx/audio-button.m4a', 'sfx/audio-button.mp3', 'sfx/audio-button.ogg' ] ],\n\t\t[ 'audio-theme', [ 'sfx/music-bitsnbites-liver.m4a', 'sfx/music-bitsnbites-liver.mp3', 'sfx/music-bitsnbites-liver.ogg' ] ],\n  ],\n};\n\nexport default class Preloader extends Phaser.State {\n  preload() {\n    this.add.sprite( ( this.world.width - 580 ) * 0.5, ( this.world.height + 150 ) * 0.5, 'loading-background' );\n    const preloadProgress = this.add.sprite( ( this.world.width - 540 ) * 0.5, ( this.world.height + 170 ) * 0.5, 'loading-progress' );\n    this.load.setPreloadSprite( preloadProgress );\n\n    this._preloadResources();\n  }\n  _preloadResources() {\n    for ( const method in resources ) {\n      resources[ method ].forEach( ( args ) => {\n        const loader = this.load[ method ];\n        loader && loader.apply( this.load, args );\n      }, this );\n    }\n  }\n  create() {\n    this.state.start( 'MainMenu' );\n    // this.state.start( 'Game' );\n  }\n}\n",
    "import { playAudio } from '../utils/AudioManager';\n\nexport default class Story extends Phaser.State {\n  create() {\n    this.add.text( 100, 75, 'Story screen', { font: '32px Arial', fill: '#000' } );\n    const buttonContinue = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-continue', this.clickContinue, this, 1, 0, 2 );\n\n    buttonContinue.anchor.set( 1, 1 );\n    buttonContinue.x = this.world.width + buttonContinue.width + 20;\n\n    this.add.tween( buttonContinue ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.camera.flash( 0x000000, 500, false );\n  }\n  clickContinue() {\n    playAudio( 'click' );\n    this.camera.fade( 0x000000, 200, false );\n    this.camera.onFadeComplete.add( () => {\n      this.game.state.start( 'Game' );\n    }, this );\n  }\n}\n",
    "import { playAudio } from '../utils/AudioManager';\nimport { FOOD_DATA } from '../constants/FoodConstants';\nimport { centerObjectInWidth, centerObjectInHeight } from '../utils/UserInterfaceUtils';\nexport default class Wiki extends Phaser.State {\n  create() {\n    const fontWiki = { font: '40px Arial', fill: '#000' };\n    this.add.text( 20, 20, 'Wiki', fontWiki );\n\n    const buttonBack = this.add.button( this.world.width - 20, this.game.world.height - 20, 'button-back', this.clickBack, this, 1, 0, 2 );\n    buttonBack.anchor.set( 1, 1 );\n    buttonBack.x = this.world.width + buttonBack.width + 20;\n    this.add.tween( buttonBack ).to( { x: this.world.width - 20 }, 500, Phaser.Easing.Exponential.Out, true );\n\n    this.currentWikiPageIndex = 0;\n\n    this.currentPage = this.add.group();\n    this.fillGroupWithFoodData( this.currentPage, 0 );\n\n    this.nextPage = this.add.group();\n    this.fillGroupWithFoodData( this.nextPage, 1 );\n\n    this.nextPage.position.x += this.world.width;\n\n    const buttonPrevious = this.add.button( 0, 0, 'button-back', this.goToPreviousWikiPage, this, 1, 0, 2 );\n    buttonPrevious.x = -buttonPrevious.width;\n    this.add.tween( buttonPrevious ).to( { x: 75 }, 500, Phaser.Easing.Exponential.Out, true );\n    centerObjectInHeight( buttonPrevious, this.world );\n\n    const buttonNext = this.add.button( 0, 0, 'button-next', this.goToNextWikiPage, this, 1, 0, 2 );\n    buttonNext.x = this.world.width;\n    this.add.tween( buttonNext ).to( { x: this.world.width - buttonNext.width - 75 }, 500, Phaser.Easing.Exponential.Out, true );\n    centerObjectInHeight( buttonNext, this.world );\n  }\n  clickBack() {\n    playAudio( 'click' );\n    this.game.state.start( 'MainMenu' );\n  }\n  makeFirstLetterCapital( string ) {\n    return `${string.charAt( 0 ).toUpperCase()}${string.substring( 1 )}`;\n  }\n  goToPreviousWikiPage() {\n    if ( this.tweenIn != null ) {\n      return;\n    }\n    this.currentWikiPageIndex = ( this.currentWikiPageIndex === 0 ) ? FOOD_DATA.length - 1 : this.currentWikiPageIndex - 1;\n\n    this.nextPage.position.x -= this.world.width * 2;\n    this.fillGroupWithFoodData( this.nextPage, this.currentWikiPageIndex );\n\n    this.add.tween( this.currentPage.position ).to( { x: this.currentPage.position.x + this.world.width }, 500, Phaser.Easing.Linear.None, true );\n    this.tweenIn = this.add.tween( this.nextPage.position ).to( { x: this.nextPage.position.x + this.world.width }, 500, Phaser.Easing.Linear.None, true );\n\n    this.tweenIn.onComplete.add( () => {\n      const tmpPage = this.currentPage;\n      this.currentPage = this.nextPage;\n      this.nextPage = tmpPage;\n\n      this.tweenIn = null;\n    } );\n  }\n  goToNextWikiPage() {\n    if ( this.tweenIn != null ) {\n      return;\n    }\n    this.currentWikiPageIndex = ( this.currentWikiPageIndex + 1 === FOOD_DATA.length ) ? 0 : this.currentWikiPageIndex + 1;\n\n    this.add.tween( this.currentPage.position ).to( { x: this.currentPage.position.x - this.world.width }, 500, Phaser.Easing.Linear.None, true );\n    this.tweenIn = this.add.tween( this.nextPage.position ).to( { x: this.nextPage.position.x - this.world.width }, 500, Phaser.Easing.Linear.None, true );\n\n    this.tweenIn.onComplete.add( () => {\n      const tmpPage = this.currentPage;\n\n      this.currentPage = this.nextPage;\n      const nextIndex = ( this.currentWikiPageIndex + 1 === FOOD_DATA.length ) ? 0 : this.currentWikiPageIndex + 1;\n      this.fillGroupWithFoodData( tmpPage, nextIndex );\n      tmpPage.position.x += this.world.width * 2;\n\n      this.nextPage = tmpPage;\n\n      this.tweenIn = null;\n    } );\n  }\n  fillGroupWithFoodData( group, index ) {\n    group.removeAll( true );\n    const fontTitle = { font: '35px Arial', fill: '#fff' };\n\n    const title = this.add.text( 0, 75, this.makeFirstLetterCapital( FOOD_DATA[ index ].key ), fontTitle );\n    centerObjectInWidth( title, this.world );\n    const sprite = this.add.sprite( 0, 150, FOOD_DATA[ index ].key );\n    centerObjectInWidth( sprite, this.world );\n    const fontNutritionFacts = { font: '25px Arial', fill: '#000' };\n    const carbohydrates = this.add.text( 0, 325, `Carbohydrates: ${FOOD_DATA[ index ].nutritionFacts.carbohydrates}g`, fontNutritionFacts );\n    centerObjectInWidth( carbohydrates, this.world );\n    const fats = this.add.text( 0, 375, `Fats: ${FOOD_DATA[ index ].nutritionFacts.fats}g`, fontNutritionFacts );\n    centerObjectInWidth( fats, this.world );\n    const proteins = this.add.text( 0, 425, `Proteins: ${FOOD_DATA[ index ].nutritionFacts.proteins}g`, fontNutritionFacts );\n    centerObjectInWidth( proteins, this.world );\n\n    group.add( title );\n    group.add( sprite );\n    group.add( carbohydrates );\n    group.add( fats );\n    group.add( proteins );\n  }\n}\n",
    "import Wiki from './Wiki';\nimport Boot from './Boot';\nimport Game from './Game';\nimport MainMenu from './MainMenu';\nimport Preloader from './Preloader';\nimport Story from './Story';\n\nexport default {\n  Wiki, Boot, Game, MainMenu, Preloader, Story,\n};\n",
    "import { getStorage } from './StorageManager';\n\nlet _audioStatus;\nlet _sound;\nlet _soundMusic;\nlet _audioOffset;\n\nexport function manageAudio( mode, game ) {\n  switch ( mode ) {\n  case 'init': {\n    getStorage().initUnset( 'EPT-audio', true );\n    _audioStatus = getStorage().get( 'EPT-audio' );\n\t\t// EPT._soundClick = game.add.audio('audio-click');\n    _sound = [];\n    _sound[ 'click' ] = game.add.audio( 'audio-click' );\n    if ( !_soundMusic ) {\n      _soundMusic = game.add.audio( 'audio-theme', 1, true );\n      _soundMusic.volume = 0.5;\n    }\n    break;\n  }\n  case 'on': {\n    _audioStatus = true;\n    break;\n  }\n  case 'off': {\n    _audioStatus = false;\n    break;\n  }\n  case 'switch': {\n    _audioStatus = !_audioStatus;\n    break;\n  }\n  }\n  if ( _audioStatus ) {\n    _audioOffset = 0;\n    if ( _soundMusic ) {\n      if ( !_soundMusic.isPlaying ) {\n        _soundMusic.play( '', 0, 1, true );\n      }\n    }\n  }\t\telse {\n    _audioOffset = 4;\n    if ( _soundMusic ) {\n      _soundMusic.stop();\n    }\n  }\n  getStorage().set( 'EPT-audio', _audioStatus );\n  game.buttonAudio.setFrames( _audioOffset + 1, _audioOffset + 0, _audioOffset + 2 );\n}\nexport function playAudio( sound ) {\n  if ( _audioStatus ) {\n    if ( _sound && _sound[ sound ] ) {\n      _sound[ sound ].play();\n    }\n  }\n}\n\nexport const getAudioOffset = () => _audioOffset;\n",
    "let EPTStorage;\n\nexport function setStorage( storage ) {\n  EPTStorage = storage;\n}\n\nexport const getStorage = () => EPTStorage;\n",
    "export function centerObjectInWidth( object, world ) {\n  object.position.x = world.width / 2 - object.width / 2;\n}\n\nexport function centerObjectInHeight( object, world ) {\n  object.position.y = world.height / 2 - object.height / 2;\n}\n"
  ]
}